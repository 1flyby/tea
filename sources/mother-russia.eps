%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Cyrillic
%%Title: mother-russia.eps
%%Creator: Adobe Illustrator(R) 13.0
%%For: Дмитрий Скляров
%%CreationDate: 3/20/14
%%BoundingBox: 0 0 798 416
%%HiResBoundingBox: 0 0 797.6079 415.8770
%%CropBox: 0 0 797.6079 415.8770
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 13.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 13.0.0 x406 R agm 4.4378 ct 5.1039%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                                              
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 73 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq{pop/AGMCORE_currentbg load}{/Procedure get_res}ifelse setblackgeneration
	dup null eq{pop/AGMCORE_currentucr load}{/Procedure get_res}ifelse setundercolorremoval
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		clonedict
		begin
			/Intent Intent def
			currentdict
		end
		setcolorrendering
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: (Page 1) 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="пїњ" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 4.1-c036 46.277092, Fri Feb 23 2007 14:16:18        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">mother-russia</rdf:li>
            </rdf:Alt>
         </dc:title>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xap="http://ns.adobe.com/xap/1.0/"
            xmlns:xapGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xap:CreatorTool>Adobe Illustrator CS3</xap:CreatorTool>
         <xap:CreateDate>2014-03-20T15:22:55+04:00</xap:CreateDate>
         <xap:ModifyDate>2014-03-20T15:22:55+04:00</xap:ModifyDate>
         <xap:MetadataDate>2014-03-20T15:22:55+04:00</xap:MetadataDate>
         <xap:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xapGImg:width>256</xapGImg:width>
                  <xapGImg:height>136</xapGImg:height>
                  <xapGImg:format>JPEG</xapGImg:format>
                  <xapGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAiAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FWDfmR+YWqeVdV8raZp2lDUZvMd+LIz&#xA;SOY4oRyjBBYK3xOJCV/1SaHFWc4q8u89/n35G0i21fStL1iGbzLBbutmqAtALphxRTOVaCqE8mDN&#xA;TanXbFXhn5H/AJ2T6D5r1KbzM9/rEmv+lH6sZe4m9ZOQjCxFvj5cgigCo7bbFV9iYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYqwP8zfL/AJwvptN1Hy1fXFpLZLcLdRWdDNKrx80HGW4t4HHKPh8Q&#xA;JUtVab4pYnb/AJ0hdYkhv9Qi0/T7KFms0ZWlN0ywAVvbhouUfGchGWGIuzsvGqg1Vp7N6nGIPMVj&#xA;oAX3+EHv8RC7YoXYq7FXYq7FXYq7FXYq7FXYq7FUr8zanoukaLc61rIT6jpam7Z2UOVaMHiYwf29&#xA;6L7nFXxz+Y//ADkN5484+rZwSfoXRJKr9QtGPORanaafZ3qDQgcVP8uKvNtNtrW6vooLq7Sxt5CQ&#xA;93IrukexoWWMM5Ff5QT7Yq+yfyO/KvyJpflnRvMVva2mo668Tk61E0sqMTKw5RLNRUZQONVRT1Hj&#xA;ir1rFXYq7FXYq7FXYq7FXYq7FUv17zBougaZLqms3kdjYQD95PKaCp6ADqzHsoFTiqWeVPzF8k+b&#xA;WlTy9q8N/LAOUsK8klC9OXpyBH4+9KYqyPFXYq7FXYq7FVKG1t4JJ5IkCPdSCWdh+04RYgx/2Eaj&#xA;6MVS7V7W11iSfy/qelvdaRdW3qT3LlfQZhIB6BAYSB+j1pT3riqQfm7eW+n+Rbq6azmvLm2ZH0wx&#xA;CVjDeqD9Wndo6uFjkoeR79euKsO/5xi85HWfKF1pl9q76prVncSXE4lEjPHDcNVAZZP7ysiu3tWn&#xA;uVXs2KuxV2KuxVCT3bWkk9xeywW+mRxxlJ5H4MJCziT1C1EC09Pjv1r7Yqr21zb3NvFc20qT286L&#xA;JDNGwdHRxyVlZahlYGoIxVUxV2KvAf8AnJLWPJmpcvLur+Yr3Rb7TIBeRWMcDT21604KxA8CPijK&#xA;9XIoCaVxV8o4odir2by1/wA5D+Z/LsFj5Y8oWNpJotqWttP/AEsD68nqzs4lmeOWGONm57ry4r4n&#xA;ril9b6BLrUui2UmuQw2+rvErX0FsxeFJSPiVGbeg+n5nriqPxV2KuxV2KuxV2KuxVj3nTz/5U8mW&#xA;Ed75hvRaRzFlt4wrSSSstCVREBJpUe2Kvj/81fzr80+ffrFo1LbyylyJrSyVFDDgCkfqyDdmIPIi&#xA;tKn2GKpn/wA4uXttD+atrbTWqTSXUFwLe4NQ8MiQuxZSDuGTkpU+IPUDFX2dirsVaZlVSzEKqipJ&#xA;2AAxV5T+YX/ORvkfyo9vBYSR+YrqZS7x2E6MkQ2485VDp8W+wNfahxVjehf85K+aLxWNz+X2pTes&#xA;itYCxWaUSEioqWiHwt2Kg/I4q9h8l61q+t+WbLVNX0qTRNQug7TaXKS0kIWRlTkWVDVkUNuo64qn&#xA;WKqUq2twstpMEmV0pPbvRgY5Kr8aH9lqMN+u+Kvnf8wPyb1XyxqYvPy+vH0DS55P0jq2oXd2kFlZ&#xA;tBWOJENPU/4+HNG5e2Kvf9F1M6nZfXAkYgkkf6pLDMk8c0AY+lMrpt+8Sh49um/XFUdirsVeVfnz&#xA;+ZPmbyjpEcXl20Ml1Mhe6upIZHWO3cmIyQyKQgljkZK8gac1NDvRVjX5bfl5rvn3yrPP+aFzeXsN&#xA;zNFd6XavdFXjV4yWdliI4rJyVlRl+EUI64pe46Zp1lpmnWum2MYhsrKJLe2iFSFjiUIi777AYoS7&#xA;zj5u0Xyj5eute1iUx2dqB8K0MkkjbJFGpIqzHp95oATir5/sf+cvXEutTXmjyESIv6CtVkRo43Uk&#xA;ETvxR6MCGNOW4oKVrir571nVNT1e/m1bUrmS7u7t2aWeVizlhQkGvYVFO1MVQOKHYqvjFDz5FQpF&#xA;GXqD1HceGKX6QaXerfaZaXygBbqGOcAGopIgbY7eOKonFXYqwf8AOa08zyeQ7298s3s9lq2lFdQj&#xA;EDlDNHb/ABSwtxIqpSp49yAO+Ko78rdb17XfIWkavr0Zi1W8jkkuEMZh29VxGeBAoDGFI8euKsqx&#xA;ViWtfmx+XejtcxXWu2r3VrBLcSWsEiyy8YTR1AUkcwf2K8uu2xxViTf85KeTI9Ig1qbSNai0S5lM&#xA;EGqNaw/V2mHKsfJZ2PL4G2p2xV8t/mh58v8Azn5tvtSluZZtOSeZdIjlADRWrSExpQdNqEipxV6H&#xA;oX5KRTflp5gWK5S986Pa2epW+kRGKWRLegnHpJFJJKzSxS8asi/F8K1B5FVjv/OOllrB/OHR/qkL&#xA;crT6w1/zQ0jh9B43L/y7sFFf2iMVfYln5v8AL155mvvLNvdq+tadElxdWvcRyUow8eNRy8KjxxVO&#xA;FZWFVIIqRUb7g0P44q+b/PHmj80PPP5m3P5Z6XeRaJYW9y0/12ASxz+hbgFXlcNyPxAMqqFqSN6U&#xA;OKvT/IX5F+QfJ8KvDZLqOpkD1dRvVEr1oK+mhqsa8hUU38WOKvQgAAABQDoMVaZlVSzEKqipJ2AA&#xA;xVL4tSurjVkt7e2LaaLcTtqJZTHKZT+7WAoW5UCsX5U2K0rXZVgX5hfnh+XflEX3p3cV95k9KKP6&#xA;rZjlMyBzwDXASSJfSEzyKrt3O3xYq8F/N3879O80+U9O8q6BBdQ6dF6U99PeOWneaMN+7Lc39ROT&#xA;8t6bgU22xVivlj86/wAxvLdvp9np2qyfo7TmDLYy/vY5FDV9N+fJlTj8PFCoA6UNTir7j8vanLqu&#xA;gabqksBtZb+1gupLYnkYmmjVzGWoK8S1K0xVH4qhNWg1O406aHTLtLG/YD0LuWH6wiEMCeUXOLlU&#xA;VH2hiryf8+9A0LRrNPzFh097rzDpk0JtkVplgaUFQk9wIOL/ALlY/h+NV7Hrir5z82fnJ5u816ND&#xA;Z61cvNd2959bhnQrHFxKFDG0CKsZC0ThUV+3UnlsrbH9b89+dNdtmtda1y91G1aX1/q9zPJJGJAC&#xA;AyoxKrQMaACmKpFihU4F05KwPAbruCB4+HU4paWMiQB1I78TsT7fTirqyMSyr8KfEQBVVGw/oN8V&#xA;RGmaZqGranb6dp8JuL68lWK3gQAFnc0AHQDFX6A/l/b63beSdFtNcthaataWkdtdwCRZRygHpBua&#xA;FlPNUDde+KsgxV2KuxV2KvmT/nJb83vM9l5hbyZoks2mw26RyXt1CxSW4M0YZURloRGFejDuflir&#xA;50cRHgnKhUAcuq77n7icVZf5m/Ma68x+U9B8rHTbXTbPQjJ6RtOQWV3FOb+oz/F3Y8viJJ9sVQnn&#xA;OPyzZvYadolt8enWyJqOpPIJvrd9IA81ApaIRxGqJx8KknFUToP5sebNFvNSvrOZUvtR0uLSDcoO&#xA;Dxx26RxQyoR/uxIoQob6euKo7yl+dvnvQLnUbj6/Jfz6jbSW/qXTF2WaQjjOXPxs6UotW/DbFbT7&#xA;8uPzf8k+RUtNVtfL93qHmqa1mtdavZLv0oZBJciYOqsJyzcUQE/D071rir1v8ifzN/Llgnlby1p2&#xA;rWrXc815cvemOaCCR1GzXHqcuMhQKnw1LYqzLX9K8p+VfPth5zGnXD6x5hlj0O5uISDbp6/ErcTB&#xA;vsECBU5KRtWuKs21XVdO0nTrjUtSuEtLG1QyXFxKeKIo7k/qHfFXzd50/Pa583fmHoXl3yq8h8uQ&#xA;6hbvdXMRaCW5KSAyP6hFY4I0qTyHSpbboq9ig/Nby7Lp9zcyP9dRrqeGygsk9Z7i2huUtWnVSeLI&#xA;ryfEwP2QWAoDimnzn5o/5yLfzJpF9o91ov1TTZbUwadbWs6qttMqPHHKKRKWXhJxaMmmwK8SN1Fv&#xA;GMUOxVkvlDR7FnOuaxLbR6Tp0kbG0uZWja9k5Ai3jWNZZCCN3YLxUdWBIxS9is/+cspdKsrbT7HS&#xA;JtQhhMoe81K4X6wytM7R7QxqnwxFRTt03pUqpT+b/wDzkdP5lewh8nPqOixWTvJJe+t6EspkQLwM&#xA;cLNQLvQ8z8sVZz/zjX+a97qGgaro2v6oL7U9ODXOmR3Mrm6mgWNnkT1HrzVCu25YAn9kDFXm/wCZ&#xA;X/OSnmbzdp1zpFhaLo+kXkSR3MayPJcEgt6gEy+kCkikKylOmKvHcUOxV2KryaIAv7Qq3j1O2KVm&#xA;KGdflJosHmbzZb+Vr5/q9jrqSQT3A2f/AEdDcIY2II5holoOh6HqDilkP5C6RoFr5/vNb1m+it9I&#xA;8skSLfySrEomkm9CBmVgeSPUg9KEg18VX2jirsVdirsVdir4R/OD8wLLzv54udX0+yjs4EX6tbzj&#xA;aW4SMlVmmJoOZSgH8oAHvirBWehKyRioNGI+E7bU22/DFV0xZlUgUQAADiAdgBU0Ar7E4qp05Ltu&#xA;VG49utRiq3FCoUSgFeL8akGvWuw+7FLvXcbALQbbqrHb3IxVb8JFR8LDt2OKp9ced/NV35em8vXd&#xA;7NdWMtyl3IJ3eWQPCpRAGdm4qOZ2Hfr2xV6u35teZNY/IXVNJN2rano7wWeqzSo00lxp12TGhWSp&#xA;Cuj/ALtmI6U35HFXmflWC2s/LXmLXbuZoq240rTY0NGmubsgyD/Ujt435/6yjviqWz+ZtVm/R86S&#xA;vDPpaxrbSo7hQ8IjWKRUrxWQJEgJX7XEEitSVUu1C8e9vp7x444nuJGleOBBHEpY1IRF+FV8ANhi&#xA;qHxQ7FXYqukryqep3P8Abilbih2KuxV2KuxVtVLMFHUmg+nFXEilBWgJpX+mKWsUP0A8p+VfJknl&#xA;7yxfWOmQCKwtIp9HmaMerELiFCz1683WnI9zil8h+Zb6z8q/m95nhvtPW60Wa/vIb3Sh+6WS0nlM&#xA;sapx+z6Z4SR07qMVfT/5Wfnl5X89Q21kX+peZJEkabSyrlR6ZJrHKVCPVPipWvXbbFWUaq3nafW4&#xA;7KwjtbPRGVHl1f1PVulZTV41tnj9P4wOIbmaV5UP2cVZDirsVeCf85L/AON9GuNI826Jr/1O3sec&#xA;EOnrwSRZZV4NJGDyMxdGII4/ABXFXyoFJGwVhy3LECh60rUdsVV5kgKBmmLOrb2/EninEGqtWlO3&#xA;45Gzfk2GMeC79V8vLvtDg0Z3O7MDRRUbMDU7jtkmtaBUgxAhhTatTXxFAMVVHBJ+KgmWhavfp9rl&#xA;tXFVOQgtQUNNuQ774qsxQ2BXuB88VVBIOAV+b0+yvKig/Lf+GKUdpXl/zFqyldJsLm+V5FiZLWN5&#xA;f3jAlFZUBpWhpXwPgcVega9pt35c0Ty7+Xt4bObU7q7m1HWraQLI1lJdCOCOIzIW4EQxc24/ECfl&#xA;VV5nItv60yRMWgUuYZDsSo+zyHvQYqoYodirsVbAFDXqOmKuJLEkmpO5OKtYq7FXYq7FXYquSnLf&#xA;atRWtKVxS5kdKclK16VFMVbihlmf04kaRyCeKAsaKCxNB4AVxQ+4fyB1DzXf/l3plxrSWkVgltb2&#xA;2ix2wf1vq9tH6Be4LErycx8gF6fgFL5p/wCckbbU4vzd1iS/jRPrCwSWpj3DQCJY0Y7A8v3ZBr+r&#xA;FUq/Jzzr5o8redbT/D0cNxdau8emtZ3JIhl9eVVSrAjiQ9KN2+VcVfeeKuBB6Gv9mKuxV8s/85gr&#xA;M3mTQC1q8cCWcnHUCXMbu0prDxqVVowvKoFTy32Aoq8AkEYoxBZWoWCsuxA3/m6mtMVcXkLmgDIB&#xA;xLADZfsj4u334qtdwnwqgFKGrUY9jtsNjiq7mCvN1RqbKACten8vEbYqsaUPXmu5YuxXate3Ttir&#xA;cgQBVK8TTfqWr0oQTtuMVWxxc9wdh9od/oHfFVrMWNegGwA6AYqvJRwxNEYdB8RB61/m3xVEadqm&#xA;raTd/WdOu5rG64lfWt5GifhItGHJCDRlOKoUO4fmGIcHkGrvXrWuKFyfFFKCelH+dDxp/wANilTx&#xA;Q7FXYquRQeRPRRXb7h+JxStxQ7FXYq7FXYq7FVWvAIQiksKgmp706Hbt4YpRug6Jq2varFpml2cu&#xA;oX9yTwt4d3agLMakEAClSTir6/8AyW/I7T/KXl+5bXEg1LUtZiUXcUsCEQROjK9uGYFyGV6Sdj4d&#xA;yq9Xtba3tbaK1tolgtoEWKCGMBUREHFVVRsAAKAYq8u/PX8l4fP2mJqGmlIfM9hHwtZHNEnhBLfV&#xA;3PRfiYlG7HrsahV8cazomt+XtVk07VrSbT9StiC8MoKOp6qynuD1Vhse2Kvvb8s9ette8haHqdve&#xA;SX/q2kaT3U39608Q9Ob1Nl+ISK1T364q8H/L+b8wfL356JYea7mXy/Z+Yrm71T9FLMJLO4nuBJxj&#xA;Rg0iV5v41qB344q+nsVeV/8AOSllol5+V95FqN7HaXMMqXWmK7qhmuIq1iUN9otGzjbvQ4q+LURi&#xA;xDfCWNAlNz8gdtsVcpCopRQ5jYs5I2INABQ9v64quLIqKQ1GdTSorQbr9obnp4YqtYhpQoqP2eZO&#xA;5rUVJ6d/uxVtk4vvGVRaciwIJr41rQmm2KqJJJJPU7nFDb/CSgFKHevWoxS3L9vpSqqTXxKjf6cV&#xA;WYoX8lenIkPQDkdxQbAUpXpilYQQaHFC6IAuASQDsxHYdz9GKVuKHYq7FV8fU+NCFA3qTtTv44pa&#xA;dGRirChGKrcUOxV2KuxV2Kr3BVVVlKtuanao7fxxS+rv+cQ9F06PyZqmtCCI6lcX72puhvKII4on&#xA;ERJ+yOblqDrtXoKKve8VdirsVYz58/Lnyp540v6jrtoJGSv1a9jolxAx7xyUO3ipqp7jFWM/kHpu&#xA;n6P5V1DRNP1A6na6dqMqw3TRtCxSaKKYK0L/ABxsvqUII6798VTf84bF38hapqtnaxTazosD3+lX&#xA;MiRtJbSw0dpoWkV+LoilhTrTFXyh5r/Pb8w/NFq2n6rcQpp1zD6FxaxR8IpUaSOXk45N8StGPiWh&#xA;AJG1cVYHdatql7aWdld3k09np6ullBI7OkKO3NxGpNF5Hc0xVCuwNKdAAP6/jiq5mJCyLsw2Zh15&#xA;VJr18MVaLcl5GnIEA13r4YquZSQQ9EYCqqQQaeH+3irubH90vxpWlANyAa1774q6jookjNFrs4Px&#xA;VAH0jriqkASaDcnoMUKrxrtyYI/GrBgetT4A9sUrCqkEqa06gih/jiq0CuKFThcKgkowQbBxXj8g&#xA;RtilvkxDMFowHxMKAcTt0+mmKqWKHYq7FV0a8nAPQ9SOw8foxS4tVd/tClD7eGKrcUOxV2KuxVta&#xA;j4gK0pudwMUuZmZizGrMaknqScUPtL/nF7TRZ/lHYzgAHUbm6uW9yspgqfogxS9FuvNGg2mv2mgX&#xA;N2sOrX8Tz2du4ZfUSMhW4uRwLb/Zry70xVNMVdirsVSbSdAGm67q95bx20NnqjRXEixI4ne6ClJZ&#xA;JXLlCCipQKo3qTiqr5q0y71XyvrGl2bIl3f2NzbWzykiNZJoWRC5UMwUM29Bir8+9c0y90jUb3Sb&#xA;6IQ3unzNBcRVrxeM8TxJG6+9d+vTFUCHQ0kK0ZSNkFB0233A3HhiqN8v2kOo61p+n3MiQ2t1cxQz&#xA;SOyRhI5HAY+pJXiACdzir7NvP+ce/wAu59B0fREtBFaaXdJdXEwSMXV4EV1MdxcIqSUcvU8SOm1N&#xA;qKoPzb/zjh+Xup6BJZaHYJo2oJSS3u4Wcszxxssccryeq3pl2BegqaeOKvje50+ex1S4067AS4tp&#xA;ZbaZTUgSISh6b7MMVQsfU/y0+KtaU+j3xVWMdzwjnEbJE5ZY5QvEMygclVhQEgMKj398VUzIrMxK&#xA;hQalaDp4AUpiqxlKsVOxBoRihVkEccjDcFelNwQR33BG3XFLUhCVRAQGALE0qQaMPoxVTBINQaHx&#xA;GKF5YMiqWbnXofs7nxJ2xSsZWVirAhgaEHYgjFDWKuxVfGKhhUjatevTt9+KW4a/HT7XGgUb1qQK&#xA;fxxVaAApY9Tso2/Viq5VMuyoS4BJK9KDxAGKqeKHYqviBJZQK1U1PhT4v4Ypa4UYBiAD36ilaV2x&#xA;V9Y2X/OQX5a+XPy+n0/yvKbi60G2gtdMtrqNoBeSMArSKoq1FJLycuJJrTxxV435x/OfzH+YWjpp&#xA;2uPBY3OnOLvTBYxyqLi45qgR6tKVZY2cxspG+x+1UKvof8jvzm07zjpUGi6lKYPNthCI7qGbY3Pp&#xA;DiZo6/aagrIvUH2xV6tirsVSG/lig866R+4dpLyzvYfrIE7onpNBIEbifQTn8R5OORpxXqcVT7FX&#xA;y9/zlX+XzW+rWXm3TbKlpeAxa1JGp4CdCBFLLQ9ZFfjUD9nxOKvEfK3lLUfNHmK08vaPxl1C9Mgg&#xA;MjiOP9zG0rFjvtwQnFXsHl//AJxR88Q+ZNOk1W6086TDJFNePDLIz8UILxqpiWrbU8PfFX1firsV&#xA;ePfmF/zjT5P8yyXWo6S7aPrEqp6IiCCz5hyzvJEqc2ZwxqefWnvVV8z2vkSVPzFXyTrlydMEmoNp&#xA;zaituXQyhzHFIqOYao5ZaGoorVxV9leUvys8p+WdDk0OCFtQ0tpmuI7bUhFcrE7qquI6xigbhyIN&#xA;d64qlet/84//AJS6uZnl0GO1nmbmZrN5LcqxoKqkbCIdOnCn04q8d/P38k/I3k3ydZ63ojz2t1HM&#xA;tmYpHab6y8tXVmZmHpmNI2+yKHbbvir55UAn4jQdz1xQveVXbdQVFAppRqAAfqGKVhU703A3qPCt&#xA;MUNpVSHK8lBFa9D3ocUuenI0Nff374qtxQqemoHxOAR1ShqPHqAPxxS0ZWpQVC0IUVrQHr9/fFVm&#xA;KF5hkH2hxNaUJAIr4g9MUtkcIyOYPLfiK7EEiu22KuJVhUKtdy1TT7qEfRtirTOh3EYXtQE0/EnF&#xA;Wi5I47Ba1oP8698VXv6JfkGJjFBQgBjQUHc/fiqx+NQVFKjdd9j07/firQJBBBoRuCMUPWvzB06P&#xA;X9M0b82tKlks01CeO18zmD7dlqUPFTPHx4HjKoDinRqb1bZS+vPK1ld2Wh2sFzq0muMEUx6lKsav&#xA;LGVBQkxgK237XU96nfFU1xVj1jfazd+ddQWC5hm8tWdnFbuiGNpE1USu8yNx+MUt3iJDbbim9cVZ&#xA;DirEPze0h9W/LLzHZpMIG+pSTiQrzH+jUn4lfBvT4/TirxL/AJxG8paZeT6t5qu4BLf6fKlrpspN&#xA;BF6kb+uVUbVZXArTpXFX05irsVdirsVQ11pmm3dxbXN1aQ3FxZsXtJpY1d4malWjZgShNO2KonFX&#xA;YqoX9hZ6hZT2N9ClxZ3UbRXEEg5I6OKMrA9iMVeC3v8AziRoAsNXni1Se41aZJZNKiVI7a1jlILI&#xA;jp+8Yrz22YUHbFXy1cWc9tO8FwBFLE7RyoxHJWUkEECp2IxVasc3xcVJXozUqv39MVaCv6nAmhBK&#xA;nfoO+KtONywHwkkCnTb/AG8VWilRXp3pihc7cnLdK+JqfpOKrcVTfyhok2u+adK0WFzG+pXUVr6i&#xA;1qglYIz7A7KpJOKUuvI4oryeKLl6SSOsfOnLiGIHKm1aYqsB+CjfZ34jvU9/wxVdaW9zc3UNtaxt&#xA;LczOscESAl3dyAqqBuSSaDFXu+i/84iebLzSBdalq1tpmoSFSunlDPwQ/aEkqMqhx4KGHvirzn80&#xA;Pym8x/l7qcdvqNLrT7kVs9TiUiKQgVZCDXi6/wAp7b4qwyGvOo+0N1HcntTFVmKHAEmg6nFX0f8A&#xA;84n6Yur6L500fUCZtHuo7WOS2IqpadZ0kZa9GCoPwxS9D/KnyT+YnljzBqOl3eu3EvlDS5RFpdjd&#xA;xRzfWLaSJjG0dzs8bRPxDIBx67dMVeo6pqEOm6bd6jOrNBZwyXEqxirlYkLsFBIqaDbfFUg/Lqx0&#xA;+x0B7eyhmjV7ma8la4h9GR2vyL1eRBKyNHHcrEzqSOSkdqBVlGKtOiOjI6hkYEMpFQQdiCDiqG07&#xA;SdK0yFodNs4LKFiGaO3jSJSQoUEhAo+yoHyGKorFXYq7FXYq7FXYq7FXYq7FXwf+eOhSaR+avmWH&#xA;j+6luzdqwHw0vFFwPxkI+jFWCfExA3J6AdfoxQvUvUOvVOp7bVpvilb0j7fEQR47V/riq9CI+SuS&#xA;A678etewPTFVnCu4Ip233r8sVXrGhXc7gHmKhSDXwalfkMVei/lbdaR5Qh1Dz1qc4W/tIJYPKliR&#xA;+8ubyVTE04BV19OFWNS2xOw3FMVecSySzSySyEvI5LyOepLGpJ+k4q5hypwUniArN4nt+GKonRbS&#xA;6vNYsbO0do7q5uIoYHQ0YPI4VStCN6nxxV+jGn2r2mn21o8z3L28SRNcSU5yFFCl2ptyalTiqC80&#xA;eV9E8z6Jc6LrVstzY3K0ZTsysPsujdVdTuCMVfNl1/zh55j9W4Npr1mYhI/1VZUlDGMH936hUEBi&#xA;PtUBp74q890X8l/O+pfmC3lKWylt2tZ/Tv8AUTCzW8UAqfXLEBWDoKpU/F0xVR/OnyHZeSfPU+jW&#xA;Hr/o8QW8trJccS8geMCRgUCKR6isOgxV6x/zh0LtrvzVIihbApZqw/4sBm4U/wBiWrir6YxVbNDF&#xA;NE8MyLJFIpSSNwGVlYUKsDsQRiraIiIqIoVFACqBQADYAAYq3irsVdirsVdirsVdirsVdirsVdir&#xA;sVSfzB5O8r+YrK4sta0yC9guuBn5pR2MQIjb1F4uGQMwUhqip8cVfMf/ADkP+TaeWLmz1jylpzQ6&#xA;FcRpa3cFuZpWjnBIDPXlRJFKirMat891Xh1pFM9ysMcRlmc8Ui48mLbgUWhqa9qYqz/S/wAhfze1&#xA;LTJNQh0GSOMDksV00UE79zwimKuOvcD2xVgep6bqGmahcafqML299bOY7mCTZ0deoOKvpT8sfyA/&#xA;Lfzf+VulalO12uq3Ylkm1GFzGyyK5jMQjcPGY0Kfy1O+++KvK/zD/KrXPI3nJbGLTrjXtKPptptx&#xA;JBKY5wUHKI+ieqO1OIbwNN6YqlHnLyn+ZaTrqvmbQ7q0gCxwoy2ogt44wpKRRrEqxoAqnYd613xV&#xA;hvI0p28MUPWvy4/5x883edNKn1hpU0W1U8bIXcUgM7cKllVQpEfxCj7/AE0xS9F8qf8AOJcmleZt&#xA;M1HU9cS+060YT3EEEcltMZkHJFSQM/wiSlW+E0HYnZV9GYq7FXYqsmmihheaZxHFEpeSRjRVVRUk&#xA;nwAxV8S/85DecvL/AJu89xaroN/+kNPSxit1f05YuDI8jMvGZIz1ev04q9k/5w/sBH5H1i+OxuNS&#xA;MPTekMEbA18KynFXvOKuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kse0b8vfJGi6jcanpe&#xA;i2trqFzK08l0sYMgkcEMY2avpg1PwpQYqyHFUo1fyf5T1kyNq2jWV9JKvCSWe3jkkIpx+2y8ht0I&#xA;O2Ko7TNM0/S7CDT9Oto7SxtlCQW8KhERR2AGKonFWpI0kRo5FDxuCrowqCDsQQcVYxF+V35bw38V&#xA;/B5Y0yG6gIaJ47WFArDowVVC1HjSuKsoxV2KuxV2KuxVSu7S2vLSa0uo1mtbmNop4XFVeNwVZWHg&#xA;QaYq+d5/+cQLG41rVJU1trHSWmVtKgSL1pFiYBnWQsy/ZY8V61AqcVe6+UfKmjeU/L9poOjxGOxt&#xA;FIUueUjsxLPJI1BVmY1P4UGKpxirsVdir//Z</xapGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xap:Thumbnails>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xapMM:DocumentID>uuid:3D89CACDD5B1E31192D7CFBEED012FE8</xapMM:DocumentID>
         <xapMM:InstanceID>uuid:3E89CACDD5B1E31192D7CFBEED012FE8</xapMM:InstanceID>
         <xapMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>uuid:3C89CACDD5B1E31192D7CFBEED012FE8</stRef:instanceID>
            <stRef:documentID>uuid:3B89CACDD5B1E31192D7CFBEED012FE8</stRef:documentID>
         </xapMM:DerivedFrom>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xapTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xapG="http://ns.adobe.com/xap/1.0/g/">
         <xapTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>297.000002</stDim:w>
            <stDim:h>209.999994</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xapTPg:MaxPageSize>
         <xapTPg:NPages>1</xapTPg:NPages>
         <xapTPg:HasVisibleTransparency>False</xapTPg:HasVisibleTransparency>
         <xapTPg:HasVisibleOverprint>False</xapTPg:HasVisibleOverprint>
         <xapTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xapTPg:PlateNames>
         <xapTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xapG:groupName>Default Swatch Group</xapG:groupName>
                  <xapG:groupType>0</xapG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xapTPg:SwatchGroups>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -415.877 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 415.877 li
797.608 415.877 li
797.608 0 li
cp
clp
[1 0 0 1 0 0 ]ct
22.3408 249.928 mo
15.9473 241.521 li
19.7139 230.807 li
16.4619 228.12 li
14.0952 229.777 li
4.71484 223.365 li
3.1875 225.809 li
3.53467 233.235 li
0 237.006 li
1.05811 242.835 li
7.32129 242.474 li
14.0005 250.878 li
18.9985 253.828 li
19.2715 253.51 li
22.3408 249.928 li
cp
293.972 138.752 mo
293.511 138.869 li
289.848 139.784 li
289.541 139.861 li
289.486 140.174 li
288.876 143.684 li
288.845 143.859 li
288.939 144.015 li
291.228 147.83 li
291.387 148.096 li
291.693 148.064 li
294.593 147.759 li
295.011 147.715 li
295.029 147.293 li
295.18 143.325 li
295.183 143.25 li
295.167 143.182 li
294.097 139.215 li
293.972 138.752 li
cp
281.857 117.574 mo
281.996 121.594 li
279.396 124.193 li
279.16 124.431 li
279.298 124.736 li
281.434 129.468 li
281.546 129.717 li
281.819 129.751 li
283.862 130.006 li
283.987 131.744 li
284.012 132.104 li
284.368 132.184 li
287.055 132.781 li
288.833 133.669 li
289.459 133.982 li
289.533 133.285 li
290.751 121.71 li
291.634 117.44 li
295.271 113.512 li
299.732 112.025 li
299.886 111.975 li
299.978 111.846 li
301.808 109.251 li
301.949 109.051 li
301.872 108.818 li
301.234 106.908 li
303.441 108.312 li
303.582 108.402 li
303.748 108.386 li
306.799 108.08 li
307.113 108.049 li
307.855 105.822 li
309.463 105.945 li
309.952 105.984 li
309.984 105.493 li
310.093 103.855 li
311.925 104.542 li
312.458 104.743 li
312.571 104.183 li
312.841 102.829 li
314.026 104.111 li
314.42 104.54 li
314.771 104.073 li
316.144 102.242 li
316.216 102.146 li
316.236 102.031 li
316.566 100.047 li
318.529 101.434 li
318.847 101.658 li
319.136 101.395 li
320.628 100.038 li
323.895 100.748 li
324.174 100.81 li
324.364 100.59 li
327.123 97.3965 li
349.187 96.9414 li
349.305 96.9395 li
349.41 96.8828 li
354.751 93.9834 li
354.962 93.8682 li
355 93.6299 li
355.611 89.6621 li
355.642 89.4492 li
355.501 89.2793 li
353.213 86.5332 li
353.017 86.2969 li
352.72 86.373 li
347.38 87.7461 li
347.154 87.8047 li
347.056 88.0137 li
346.285 89.6875 li
337.621 88.9648 li
333.773 85.709 li
333.515 85.4922 li
333.22 85.6582 li
329.921 87.5225 li
326.633 86.0928 li
326.39 85.9883 li
326.172 86.1309 li
321.869 88.9492 li
318.177 88.9492 li
318.041 89.0645 li
316.56 90.2979 li
314.431 88.0352 li
313.806 87.373 li
313.605 88.2598 li
312.464 93.2461 li
310.083 93.3789 li
309.685 93.4004 li
309.628 93.7939 li
309.368 95.627 li
302.966 97.6191 li
300.689 96.623 li
300.357 96.4775 li
300.123 96.7578 li
298.595 98.5889 li
298.312 98.9297 li
300.255 100.873 li
298.101 102.908 li
293.966 101.197 li
293.412 100.968 li
293.302 101.561 li
292.769 104.498 li
289.989 104.366 li
289.508 104.343 li
289.48 104.822 li
289.344 107.141 li
285.345 109.209 li
282.792 108.358 li
282.552 108.278 li
282.349 108.431 li
279.296 110.72 li
279.113 110.857 li
279.103 111.087 li
278.951 114.443 li
278.94 114.658 li
279.091 114.81 li
281.857 117.574 li
cp
348.144 39.582 mo
347.94 39.0947 li
347.472 39.3369 li
344.738 40.7549 li
344.283 40.9902 li
344.542 41.4316 li
346.265 44.3691 li
346.574 44.8975 li
347.017 44.4756 li
349.042 42.5508 li
349.286 42.3203 li
349.158 42.0127 li
348.144 39.582 li
cp
251.595 132.54 mo
251.736 132.725 li
251.97 132.731 li
257.259 132.872 li
257.626 132.882 li
257.736 132.529 li
258.343 130.56 li
258.373 130.463 li
258.363 130.363 li
258.035 127.408 li
258.017 127.25 li
257.91 127.133 li
255.101 124.084 li
254.883 123.85 li
254.583 123.955 li
250.557 125.361 li
250.318 125.445 li
250.25 125.689 li
249.267 129.16 li
249.201 129.391 li
249.347 129.584 li
251.595 132.54 li
cp
48.8628 123.831 mo
49.0767 124.293 li
49.5288 124.057 li
55.019 121.192 li
55.2671 121.063 li
55.2788 120.785 li
55.7573 110.281 li
55.7632 110.127 li
55.6792 109.996 li
53.0542 105.938 li
52.4448 104.999 li
52.1743 106.084 li
51.145 110.205 li
49.23 108.986 li
47.1372 102.941 li
46.937 102.361 li
46.4185 102.689 li
43.9292 104.274 li
40.5054 104.047 li
39.688 103.992 li
40.0308 104.734 li
48.8628 123.831 li
cp
336.287 29.5557 mo
336.327 29.7188 li
336.458 29.8223 li
338.282 31.2402 li
338.429 31.3555 li
338.617 31.3418 li
341.059 31.1523 li
342.528 32.3467 li
342.889 32.6406 li
340.847 32.9063 li
340.779 32.916 li
340.719 32.9414 li
339.46 33.4805 li
336.789 32.7188 li
336.228 32.5586 li
336.173 33.1387 li
335.97 35.2666 li
335.948 35.4961 li
336.109 35.6563 li
338.026 37.5723 li
339.921 39.9678 li
340.376 40.543 li
340.728 39.8994 li
341.335 38.7852 li
341.423 38.625 li
341.385 38.4502 li
340.98 36.5898 li
343.014 36.1201 li
346.227 37.1904 li
346.512 37.2852 li
346.722 37.0742 li
348.85 34.9473 li
349.169 34.6289 li
348.873 34.2852 li
346.949 32.0576 li
346.867 31.9648 li
346.75 31.9199 li
345.13 31.3125 li
344.878 31.2188 li
344.667 31.3809 li
343.046 32.6211 li
342.909 32.6387 li
343.207 32.2793 li
344.22 31.0645 li
344.518 30.7051 li
344.172 30.3945 li
342.146 28.5703 li
341.943 28.3887 li
341.681 28.4668 li
340.074 28.959 li
336.413 26.5996 li
335.38 25.9336 li
335.678 27.125 li
336.287 29.5557 li
cp
278.645 121.67 mo
278.706 122.548 li
279.416 122.031 li
281.094 120.811 li
281.294 120.664 li
281.294 117.283 li
280.917 117.196 li
278.933 116.738 li
278.294 116.592 li
278.34 117.244 li
278.645 121.67 li
cp
365.398 33.6191 mo
365.439 33.6953 li
365.5 33.749 li
366.511 34.6611 li
366.812 34.9316 li
367.134 34.6836 li
368.451 33.6709 li
368.9 33.3252 li
368.489 32.9346 li
366.565 31.1113 li
366.257 30.8203 li
365.927 31.0859 li
364.914 31.8965 li
364.596 32.1504 li
364.792 32.5059 li
365.398 33.6191 li
cp
349.025 32.7598 mo
349.359 33.2236 li
349.761 32.8203 li
351.338 31.2432 li
350.958 30.8994 li
348.931 29.0762 li
348.421 28.6182 li
348.158 29.252 li
347.652 30.4668 li
347.548 30.7168 li
347.707 30.9365 li
349.025 32.7598 li
cp
355.532 41.6055 mo
355.619 41.7051 li
355.742 41.748 li
359.591 43.0645 li
360.129 43.248 li
360.226 42.6865 li
360.733 39.749 li
360.778 39.4863 li
360.578 39.3066 li
356.728 35.8623 li
356.441 35.6064 li
356.126 35.8262 li
353.089 37.9531 li
352.648 38.2617 li
353 38.668 li
355.532 41.6055 li
cp
360.183 36.2178 mo
360.222 36.418 li
360.394 36.5293 li
362.421 37.8457 li
362.824 38.1084 li
363.089 37.709 li
364.306 35.8867 li
364.46 35.6523 li
364.333 35.3984 li
363.22 33.1709 li
363.002 32.7383 li
362.57 32.9541 li
360.138 34.1699 li
359.804 34.3359 li
359.878 34.6982 li
360.183 36.2178 li
cp
358.004 52.9277 mo
358.205 52.668 li
358.04 52.3857 li
357.027 50.6641 li
356.666 50.0508 li
356.226 50.6084 li
355.112 52.0273 li
354.891 52.3076 li
355.095 52.6025 li
356.208 54.2227 li
356.586 54.7734 li
356.992 54.2441 li
358.004 52.9277 li
cp
350.582 38.2344 mo
350.115 39.0137 li
349.507 40.0254 li
349.405 40.1953 li
349.45 40.3848 li
349.855 42.1074 li
350.023 42.8203 li
350.614 42.3906 li
351.728 41.5801 li
352.054 41.3438 li
351.882 40.9795 li
350.97 39.0547 li
350.582 38.2344 li
cp
796.65 157.333 mo
794.923 156.928 li
794.78 156.893 li
794.642 156.945 li
790.376 158.57 li
789.673 158.838 li
790.205 159.369 li
792.235 161.4 li
792.547 161.711 li
792.887 161.431 li
796.85 158.182 li
797.608 157.559 li
796.65 157.333 li
cp
350.844 44.709 mo
350.739 44.8613 li
349.625 46.4814 li
349.388 46.8262 li
349.691 47.1104 li
351.313 48.6299 li
351.632 48.9287 li
351.963 48.6426 li
353.615 47.2168 li
353.183 47.7793 li
352.9 48.1475 li
353.259 48.4473 li
354.476 49.459 li
354.722 49.666 li
355.009 49.5156 li
357.136 48.4023 li
357.332 48.2988 li
357.384 48.084 li
357.991 45.5527 li
358.103 45.0859 li
357.638 44.9688 li
356.016 44.5645 li
355.708 44.4863 li
355.513 44.7402 li
354.375 46.2246 li
354.272 46.0762 li
353.158 44.4551 li
352.967 44.1777 li
352.642 44.2598 li
351.021 44.6641 li
350.844 44.709 li
cp
355.384 135.371 mo
355.085 135.467 li
353.603 135.938 li
353.154 136.08 li
353.283 136.533 li
353.822 138.418 li
353.912 138.732 li
354.236 138.768 li
356.054 138.97 li
356.464 139.016 li
356.576 138.617 li
356.912 137.404 li
356.982 137.148 li
356.805 136.949 li
355.593 135.604 li
355.384 135.371 li
cp
780.479 325.335 mo
780.49 325.318 li
781.877 323.153 li
781.99 322.979 li
781.939 322.779 li
781.335 320.266 li
781.249 319.912 li
780.883 319.896 li
778.976 319.809 li
778.423 319.783 li
778.47 320.336 li
778.623 322.083 li
777.513 323.047 li
777.494 323.061 li
777.479 323.077 li
775.14 325.501 li
775 325.647 li
775.005 325.853 li
775.179 331.657 li
775.179 331.696 li
775.182 331.717 li
775.875 336.396 li
775.912 336.643 li
776.139 336.758 li
777.004 337.19 li
777.617 337.496 li
777.704 336.816 li
778.049 334.14 li
778.572 330.587 li
778.575 330.545 li
778.74 327.823 li
780.479 325.335 li
cp
773.808 339.791 mo
773.581 339.647 li
773.339 339.76 li
771.424 340.664 li
771.374 340.689 li
771.332 340.721 li
770.281 341.549 li
770.014 341.757 li
770.118 342.077 li
771.025 344.956 li
770.697 348.699 li
770.688 348.801 li
770.722 348.901 li
771.624 351.46 li
771.797 351.955 li
772.278 351.744 li
773.216 351.331 li
773.488 351.21 li
773.505 350.913 li
773.873 344.305 li
774.929 343.074 li
775.022 342.965 li
775.042 342.818 li
775.266 341.052 li
775.305 340.746 li
775.047 340.583 li
773.808 339.791 li
cp
781.833 343.15 mo
781.81 343.046 li
781.751 342.965 li
780.701 341.496 li
780.372 341.041 li
779.967 341.431 li
778.917 342.445 li
778.774 342.585 li
778.768 342.787 li
778.732 344.481 li
778.729 344.585 li
778.771 344.684 li
779.409 346.149 li
779.588 346.565 li
780.015 346.416 li
781.931 345.736 li
782.33 345.596 li
782.246 345.184 li
781.833 343.15 li
cp
786.46 307.863 mo
786.45 307.745 li
786.388 307.645 li
784.827 305.134 li
784.503 304.611 li
784.071 305.044 li
782.25 306.863 li
782.105 307.01 li
782.111 307.218 li
782.198 311.031 li
782.285 315.017 li
782.285 315.031 li
782.372 316.851 li
782.391 317.312 li
785.107 317.312 li
785.219 316.985 li
786.781 312.478 li
786.815 312.38 li
786.806 312.284 li
786.46 307.863 li
cp
499.35 353.991 mo
497.552 355.662 li
497.497 355.713 li
497.459 355.782 li
496.862 356.855 li
496.76 357.038 li
496.822 357.234 li
497.431 359.187 li
496.709 360.989 li
494.873 361.45 li
494.525 361.537 li
494.505 361.896 li
494.384 364.054 li
491.932 368.056 li
488.234 369.205 li
488.077 369.252 li
487.984 369.382 li
485.58 372.673 li
482.87 372.438 li
482.428 372.398 li
482.35 372.839 li
481.6 377.083 li
479.549 379.389 li
472.77 382.388 li
472.71 382.416 li
468.388 382.416 li
467.611 380.753 li
469.382 379.691 li
472.076 379.307 li
472.188 379.29 li
472.284 379.223 li
477.794 375.417 li
477.873 375.364 li
477.926 375.282 li
479.884 372.283 li
483.942 368.618 li
484.038 368.53 li
484.077 368.41 li
484.981 365.699 li
487.369 361.588 li
490.281 357.089 li
490.309 357.041 li
490.329 356.987 li
492.851 350.087 li
492.854 350.078 li
492.856 350.073 li
493.089 349.436 li
493.073 349.436 li
494.564 345.049 li
494.971 343.844 li
495.25 343.029 li
495.26 342.995 li
495.266 342.95 li
496.322 336.351 li
497.954 333.466 li
499.877 333.69 li
500.243 335.999 li
499.187 341.934 li
499.178 341.987 li
499.181 342.049 li
499.58 347.859 li
499.583 347.907 li
499.597 347.964 li
500.499 351.053 li
499.35 353.991 li
cp
161.292 134.626 mo
159.058 136.786 li
159.031 136.814 li
155.14 141.201 li
155.066 141.285 li
155.036 141.393 li
153.988 145.14 li
153.919 145.387 li
153.898 145.406 li
152.238 146.994 li
148.83 146.839 li
147.536 145.483 li
148.628 145.509 li
148.804 145.513 li
148.941 145.402 li
150.729 143.969 li
150.848 144.125 li
150.976 143.771 li
151.108 143.664 li
151.044 143.582 li
151.152 143.29 li
151.637 141.948 li
151.673 141.848 li
151.666 141.746 li
151.347 137.752 li
152.777 134.967 li
157.99 129.342 li
160.867 130.023 li
161.759 131.664 li
161.292 134.626 li
cp
140.359 125.115 mo
139 126.703 li
138.875 126.85 li
138.884 127.041 li
139.041 130.209 li
138.65 132.886 li
136.648 134.429 li
136.539 134.512 li
136.49 134.641 li
135.917 136.15 li
131.947 136.227 li
130.37 133.895 li
130.226 133.682 li
126.192 133.682 li
125.323 132.608 li
131.865 124.695 li
131.984 124.551 li
131.975 124.361 li
131.785 120.326 li
131.855 120.312 li
134.947 119.699 li
138.902 120.254 li
140.435 122.405 li
140.359 125.115 li
cp
781.184 239.947 mo
781.102 238.947 li
780.06 225.895 li
780.057 225.865 li
780.046 225.82 li
778.611 219.815 li
778.578 219.678 li
778.482 219.584 li
774.328 215.431 li
774.693 209.464 li
776.75 207.771 li
777.134 207.455 li
776.808 207.08 li
769.489 198.605 li
769.613 192.973 li
772.621 189.713 li
772.794 189.524 li
772.739 189.275 li
771.955 185.881 li
771.89 185.604 li
771.615 185.523 li
765.542 183.753 li
759.465 172.961 li
760.265 172.428 li
761.948 174.784 li
762.214 175.156 li
762.599 174.916 li
765.734 172.957 li
766.265 172.625 li
765.81 172.193 li
760.979 167.625 li
760.72 167.381 li
760.415 167.551 li
758.055 168.847 li
754.132 166.299 li
754.05 166.248 li
754.005 166.138 li
752.09 161.524 li
751.963 161.225 li
746.925 161.225 li
746.855 161.629 li
746.409 164.188 li
744.383 163.994 li
735.688 146.607 li
736.166 141.483 li
739.345 140.777 li
739.833 140.669 li
739.712 140.186 li
737.447 131.125 li
741.943 134.68 li
742.718 135.292 li
742.726 134.304 li
742.856 121.968 li
747.021 117.681 li
753.477 117.555 li
754.182 117.54 li
753.916 116.887 li
750.161 107.687 li
748.358 87.793 li
748.318 87.3652 li
748.312 87.2998 li
747.032 73.166 li
747.009 72.9131 li
746.791 72.7891 li
743.546 70.9512 li
752.177 64.9951 li
752.469 64.7949 li
752.365 64.4551 li
751.059 60.1475 li
750.963 59.8311 li
750.635 59.8037 li
733.405 58.3672 li
733.141 58.3457 li
732.981 58.5586 li
731.023 61.127 li
726.538 61.5 li
726.153 61.5322 li
726.097 61.916 li
725.639 65.125 li
722.757 64.9258 li
722.757 60.6367 li
726.732 59.3125 li
726.928 59.248 li
727.015 59.0635 li
728.711 55.5391 li
728.771 55.416 li
728.759 55.2803 li
727.844 46.0137 li
727.816 45.7158 li
727.535 45.6074 li
725.838 44.9551 li
725.611 44.8672 li
725.409 44.9951 li
724.03 45.8574 li
723.931 43.3027 li
723.904 42.6211 li
723.272 42.8672 li
719.542 44.3105 li
717.183 41.6143 li
718.008 37.5811 li
720.775 40.0273 li
721.081 40.2979 li
721.398 40.043 li
723.001 38.7598 li
725.569 41.5586 li
726.075 42.1094 li
726.37 41.4238 li
728.069 37.5068 li
728.117 37.3926 li
728.108 37.2754 li
727.737 32.8262 li
730.518 30.5068 li
735.8 31.0098 li
735.989 31.0273 li
736.14 30.915 li
745.277 23.9971 li
745.687 23.6865 li
745.355 23.2949 li
743.965 21.6611 li
747.265 22.1318 li
747.835 22.2129 li
747.818 21.6377 li
747.686 17.1992 li
747.669 16.6338 li
747.116 16.7354 li
742.524 17.5801 li
741.247 14.793 li
741.142 14.5645 li
740.901 14.5156 li
735.028 13.3652 li
737.137 10.7285 li
737.455 10.332 li
737.047 10.0332 li
734.197 7.95117 li
736.778 6.12109 li
737.191 5.83008 li
736.882 5.42871 li
732.966 0.337891 li
732.706 0 li
732.337 0.216797 li
721.241 6.74316 li
721.033 6.86719 li
721.005 7.10547 li
720.368 12.3242 li
717.447 16.1348 li
717.059 16.6406 li
717.652 16.8809 li
724.039 19.457 li
721.188 20.7441 li
709.344 17.5273 li
709.133 17.4688 li
708.948 17.5908 li
694.993 26.8516 li
674.133 38.1934 li
674.021 38.2559 li
673.951 38.3672 li
668.339 47.5039 li
668.242 47.6641 li
668.275 47.8457 li
668.716 50.1494 li
665.36 51.0742 li
665.248 51.1055 li
665.166 51.1816 li
659.813 56.0107 li
659.473 56.3184 li
659.759 56.6758 li
663.545 61.375 li
663.753 61.6318 li
664.068 61.5352 li
667.261 60.5527 li
671.892 63.1641 li
671.443 67.5508 li
667.134 68.0283 li
667.031 68.041 li
666.944 68.0918 li
664.062 69.7715 li
657.656 65.752 li
656.912 65.2852 li
656.912 74.4053 li
650.317 79.3496 li
650.227 79.417 li
650.176 79.5146 li
647.595 84.5166 li
647.405 84.8887 li
647.371 84.9531 li
647.334 85.0264 li
646.068 87.4775 li
639.328 91.2773 li
634.368 86.5645 li
634.247 86.4502 li
634.078 86.4336 li
628.857 85.9121 li
628.689 85.8945 li
628.545 85.9883 li
621.106 90.8164 li
621.043 90.8584 li
620.993 90.918 li
615.904 97.1836 li
615.839 97.2637 li
615.811 97.3564 li
614.056 103.5 li
611.101 104.408 li
607.099 102.408 li
606.973 102.346 li
606.835 102.358 li
602.789 102.75 li
602.578 102.771 li
602.449 102.938 li
600.67 105.271 li
599.236 104.039 li
598.881 103.735 li
598.564 104.076 li
597.199 105.547 li
595.832 104.268 li
599.23 100.869 li
598.171 100.79 li
591.122 100.268 li
590.919 100.253 li
590.768 100.386 li
586.72 103.91 li
586.488 104.113 li
586.575 104.414 li
588.711 111.703 li
585.701 114.617 li
585.701 109.403 li
582.289 109.403 li
582.148 109.531 li
580.028 111.447 li
579.612 109.538 li
583.449 106.072 li
584.476 105.145 li
583.097 105.229 li
578.79 105.489 li
578.685 105.496 li
578.595 105.541 li
565.805 112.066 li
565.263 112.343 li
565.651 112.811 li
567.844 115.466 li
564.513 118.677 li
564.247 118.936 li
564.423 119.262 li
565.859 121.872 li
566.086 122.28 li
566.501 122.07 li
568.462 121.092 li
568.673 124.15 li
568.684 124.312 li
568.788 124.434 li
571.409 127.488 li
567.347 128.476 li
567.173 128.518 li
567.069 128.66 li
565.634 130.619 li
565.471 130.84 li
565.578 131.092 li
566.645 133.66 li
563.446 134.192 li
558.332 132.658 li
557.854 132.515 li
557.722 133.001 li
556.273 138.441 li
547.833 136.953 li
547.266 136.853 li
547.266 149.912 li
541.703 148.985 li
532.603 140.744 li
535.63 138.612 li
536.018 138.34 li
535.754 137.945 li
529.878 129.199 li
529.805 129.089 li
529.688 129.031 li
525.902 127.205 li
525.722 127.119 li
525.534 127.182 li
519.956 129.083 li
513.727 126.668 li
513.128 126.436 li
513.07 127.076 li
512.182 136.707 li
501.074 141.449 li
497.145 138.791 li
497.704 136.778 li
497.873 136.172 li
497.238 136.164 li
485.361 136.033 li
485.116 136.031 li
484.97 136.228 li
481.835 140.404 li
481.78 140.479 li
481.757 140.563 li
481.533 141.348 li
481.136 139.299 li
481.103 139.137 li
480.979 139.027 li
478.76 137.069 li
478.41 136.759 li
478.086 137.098 li
475.534 139.778 li
472.253 141.418 li
472.208 141.441 li
471.992 141.549 li
471.745 141.672 li
471.484 141.803 li
468.041 143.525 li
467.996 143.548 li
467.961 143.572 li
464.117 146.521 li
458.853 148.063 li
458.663 148.117 li
458.567 148.286 li
457.435 150.27 li
457.511 147.162 li
468.214 136.072 li
468.259 136.027 li
468.291 135.971 li
474.294 125.137 li
474.323 125.086 li
474.337 125.031 li
477.078 115.373 li
477.151 115.121 li
476.977 114.922 li
468.622 105.393 li
468.484 105.235 li
468.273 105.229 li
460.44 104.967 li
460.179 104.959 li
460.028 105.174 li
457.404 108.922 li
455.284 109.275 li
457.359 103.395 li
457.562 102.823 li
456.96 102.75 li
451.366 102.064 li
452.992 99.7246 li
453.248 99.3604 li
452.905 99.0742 li
448.989 95.8125 li
448.772 95.6309 li
448.511 95.7275 li
444.986 97.0332 li
444.839 97.0879 li
444.75 97.2197 li
439.137 105.574 li
439.015 105.756 li
439.072 105.968 li
440.227 110.357 li
434.811 110.711 li
434.315 110.742 li
434.357 111.234 li
434.488 112.801 li
434.498 112.926 li
434.571 113.033 li
436.112 115.299 li
432.984 114.635 li
432.737 114.584 li
432.551 114.758 li
430.511 116.678 li
426.086 115.863 li
425.517 113.93 li
425.414 113.575 li
425.044 113.582 li
417.997 113.713 li
417.502 113.722 li
417.519 114.213 li
417.635 117.822 li
409.583 118.938 li
409.451 118.956 li
409.347 119.039 li
403.729 123.508 li
399.455 123.633 li
399.276 123.639 li
399.147 123.752 li
395.883 126.625 li
395.769 126.725 li
395.733 126.875 li
394.296 132.75 li
394.251 132.934 li
394.343 133.098 li
396.779 137.506 li
393.31 138.373 li
382.316 136.562 li
382.286 136.557 li
382.248 136.555 li
375.851 136.425 li
375.559 136.419 li
375.417 136.675 li
373.46 140.199 li
373.402 140.301 li
373.4 140.422 li
373.138 149.559 li
373.131 149.771 li
373.285 149.92 li
377.261 153.77 li
378.89 157.568 li
374.304 157.568 li
369.613 148.82 li
369.464 148.547 li
369.156 148.564 li
365.615 148.772 li
365.599 148.773 li
365.365 148.787 li
365.115 148.802 li
362.5 148.957 li
362.153 148.977 li
362.06 149.312 li
360.966 153.25 li
357.242 149.865 li
356.667 149.342 li
356.449 150.089 li
355.275 154.137 li
355.197 154.398 li
355.382 154.6 li
359.834 159.434 li
360.014 162.392 li
352.689 155.869 li
352.451 151.562 li
355.856 147.398 li
355.953 147.28 li
355.964 147.128 li
356.486 140.209 li
356.546 139.391 li
355.801 139.729 li
354.367 140.383 li
354.179 140.468 li
354.109 140.662 li
352.455 145.244 li
350.017 147.438 li
347.384 148.189 li
347.21 148.239 li
347.112 148.388 li
344.501 152.305 li
344.419 152.426 li
344.421 152.58 li
344.55 162.748 li
338.232 172.676 li
338.146 172.812 li
338.156 172.967 li
338.546 179.102 li
338.577 179.557 li
345.332 179.557 li
350.423 185.643 li
350.423 191.428 li
346.75 195.861 li
346.55 196.104 li
346.692 196.388 li
347.735 198.477 li
347.801 198.607 li
347.931 198.682 li
349.849 199.766 li
345.907 200.682 li
344.513 195.457 li
348.591 188.319 li
348.699 188.133 li
348.629 187.926 li
346.802 182.443 li
346.706 182.158 li
346.411 182.115 li
340.015 181.201 li
339.78 181.168 li
339.609 181.332 li
336.085 184.727 li
335.947 184.859 li
335.937 185.051 li
335.554 192.569 li
329.885 198.363 li
324.639 200.283 li
324.529 200.324 li
324.449 200.408 li
321.066 204.035 li
309.367 196.815 li
309.367 194.188 li
316.899 197.656 li
317.088 197.742 li
317.279 197.668 li
321.587 195.971 li
321.631 195.953 li
321.673 195.928 li
328.591 191.488 li
328.702 191.418 li
328.762 191.297 li
333.46 181.899 li
333.531 181.758 li
333.508 181.609 li
332.746 176.65 li
340.654 157.853 li
340.669 157.816 li
340.674 157.795 li
341.588 154.533 li
341.621 154.417 li
341.595 154.301 li
340.74 150.258 li
345.763 145.484 li
345.884 145.37 li
345.91 145.205 li
346.953 138.287 li
346.984 138.086 li
346.861 137.922 li
343.318 133.236 li
346.646 132.801 li
347.123 132.738 li
347.067 132.263 li
346.456 127.227 li
346.407 126.828 li
346.006 126.799 li
341.886 126.494 li
341.408 126.459 li
341.367 126.939 li
341.062 130.602 li
341.052 130.715 li
341.094 130.82 li
341.558 131.994 li
339.996 131.369 li
339.74 131.266 li
339.52 131.434 li
335.605 134.436 li
335.557 134.471 li
335.517 134.523 li
330.841 140.497 li
327.306 143.907 li
321.95 145.183 li
321.825 145.212 li
321.728 145.304 li
318.857 148.045 li
318.542 148.344 li
318.806 148.689 li
321.485 152.221 li
318.602 157.388 li
314.482 158.637 li
314.16 158.733 li
314.138 159.068 li
314.007 161.026 li
313.994 161.24 li
314.142 161.395 li
317.717 165.094 li
316.514 168.465 li
316.463 168.607 li
316.504 168.759 li
317.158 171.107 li
317.178 171.186 li
317.226 171.254 li
318.422 172.994 li
314.331 176.754 li
313.121 174.836 li
311.833 169.305 li
311.814 169.224 li
311.772 169.155 li
306.674 160.976 li
306.548 160.773 li
306.44 160.575 li
303.955 155.996 li
303.926 155.946 li
303.884 155.9 li
297.357 148.852 li
297.21 148.693 li
291.654 148.693 li
291.568 149.072 li
290.914 151.945 li
290.904 151.988 li
290.903 152.038 li
290.781 156.076 li
287.646 157.934 li
285.871 157.578 li
285.551 157.515 li
285.371 157.785 li
284.357 159.307 li
282.74 158.031 li
285.189 155.805 li
285.349 155.659 li
285.349 152.095 li
284.867 152.089 li
275.757 151.96 li
271.315 148.659 li
271.166 148.549 li
270.982 148.566 li
264.207 149.193 li
262.392 146.711 li
265.717 146.4 li
265.984 146.375 li
266.105 146.139 li
268.324 141.832 li
268.611 141.277 li
268 141.135 li
262.388 139.83 li
262.1 139.763 li
261.908 139.994 li
259.75 142.582 li
258.788 140.852 li
258.685 140.666 li
258.48 140.615 li
244.121 137.091 li
243.855 137.025 li
242.167 138.714 li
240.422 137.078 li
240.157 136.83 li
239.843 137.014 li
232.591 141.266 li
229.164 137.95 li
230.236 134.849 li
230.291 134.691 li
230.236 134.533 li
229.22 131.603 li
233.222 130.269 li
237.332 133.133 li
237.754 133.427 li
238.024 132.988 li
240.112 129.594 li
240.185 129.475 li
240.182 129.33 li
240.053 123.194 li
240.048 123.012 li
239.925 122.877 li
234.181 116.611 li
233.589 115.966 li
233.356 116.809 li
231.708 122.767 li
224.031 127.758 li
223.852 127.874 li
223.817 128.085 li
223.191 131.836 li
219.796 134.9 li
219.576 135.101 li
219.55 135.123 li
219.374 135.283 li
219.154 135.482 li
215.685 138.615 li
214.461 136.345 li
216.427 135.951 li
217.07 135.824 li
216.763 135.246 li
213.5 129.11 li
213.337 128.806 li
212.996 128.859 li
208.155 129.625 li
203.304 127.965 li
203.194 127.928 li
203.079 127.944 li
196.943 128.857 li
196.667 128.899 li
196.564 129.158 li
193.378 137.122 li
191.523 136.048 li
188.111 128.086 li
188.623 121.807 li
188.671 121.219 li
188.085 121.285 li
182.341 121.938 li
182.016 121.975 li
181.927 122.288 li
180.361 127.77 li
180.291 128.016 li
180.455 128.213 li
182.691 130.921 li
180.826 133.409 li
177.619 131.641 li
177.001 127.474 li
176.954 127.151 li
176.928 126.973 li
176.623 124.917 li
176.996 123.174 li
177.041 122.965 li
176.914 122.791 li
175.396 120.688 li
176.794 118.125 li
181.507 112.266 li
185.415 111.005 li
185.593 110.947 li
185.687 110.786 li
188.037 106.74 li
188.083 106.658 li
188.097 106.568 li
188.98 100.701 li
189.005 100.533 li
189.002 100.529 li
189.096 99.9502 li
189.992 94.4326 li
190.763 95.5254 li
190.136 100.033 li
190.117 100.175 li
190.179 100.306 li
192.097 104.398 li
192.614 111.231 li
192.623 111.357 li
192.691 111.462 li
195.375 115.551 li
196.011 119.752 li
196.044 119.979 li
196.242 120.097 li
206.422 126.23 li
206.582 126.326 li
206.763 126.292 li
213.028 125.117 li
213.216 125.082 li
213.33 124.928 li
218.03 118.531 li
218.094 118.442 li
218.116 118.336 li
219.421 111.548 li
219.441 111.444 li
219.414 111.337 li
217.341 103.308 li
217.601 91.625 li
217.603 91.5498 li
217.581 91.4746 li
216.275 87.167 li
216.255 87.1016 li
216.222 87.0508 li
213.015 81.918 li
212.544 78.2832 li
213.333 77.7822 li
215.023 80.1494 li
215.298 80.5332 li
215.689 80.2734 li
217.646 78.9678 li
218.009 78.7266 li
217.81 78.3398 li
215.981 74.8164 li
215.925 74.707 li
215.821 74.6367 li
208.904 69.9385 li
208.8 69.8682 li
208.675 69.8555 li
198.755 68.9424 li
198.571 68.9258 li
198.423 69.0332 li
196.488 70.4531 li
191.549 73.3125 li
191.298 73.458 li
191.435 77.5186 li
188.256 82.6504 li
181.863 82.7773 li
181.634 82.7813 li
181.492 82.959 li
179.353 85.6494 li
179.197 85.8486 li
179.042 86.041 li
178.962 86.1406 li
173.554 92.9473 li
170.929 92.8281 li
170.769 92.8203 li
170.636 92.9111 li
167.117 95.2988 li
164.666 95.1777 li
164.321 95.1602 li
164.191 95.4805 li
163.157 98.0684 li
162.044 100.17 li
159.712 101.919 li
159.906 102.284 li
160.913 104.186 li
159.904 105.193 li
155.321 104.451 li
154.896 104.383 li
154.776 104.797 li
153.471 109.365 li
153.464 109.391 li
153.458 109.436 li
152.582 116.074 li
150.091 117.094 li
137.425 115.413 li
137.384 115.408 li
137.345 115.41 li
131.57 115.623 li
131.325 115.633 li
131.084 115.642 li
126.771 115.802 li
126.692 115.805 li
126.623 115.83 li
121.271 117.788 li
120.971 117.897 li
120.951 118.216 li
120.69 122.523 li
120.686 122.602 li
120.706 122.676 li
121.15 124.336 li
120.339 125.011 li
119.41 122.636 li
119.296 122.347 li
118.986 122.327 li
117.076 122.209 li
113.941 119.199 li
113.664 118.934 li
113.341 119.141 li
109.392 121.69 li
106.803 121.984 li
106.29 122.042 li
103.761 122.33 li
103.625 122.346 li
103.519 122.428 li
99.4722 125.562 li
99.4175 125.604 li
99.3745 125.662 li
97.1812 128.708 li
92.8774 128.463 li
92.5854 128.445 li
92.4331 128.698 li
89.8159 133.062 li
86.7886 133.426 li
86.3765 133.475 li
86.3608 133.891 li
86.2407 137.162 li
81.6226 140.158 li
81.3843 140.311 li
81.4019 140.592 li
81.6616 145.16 li
81.6694 145.313 li
81.7671 145.434 li
83.4839 147.609 li
81.5093 150.049 li
81.3579 150.236 li
81.4126 150.465 li
81.9351 152.684 li
82.0024 152.973 li
82.2905 153.046 li
85.1245 153.754 li
85.6802 156.54 li
84.7817 158.146 li
84.6919 158.305 li
84.5356 158.585 li
84.437 158.759 li
84.0054 159.531 li
79.8179 161.943 li
79.7104 162.004 li
79.6479 162.105 li
77.4292 165.629 li
77.4116 165.654 li
77.4019 165.676 li
75.0522 170.506 li
75.0112 170.591 li
75.0054 170.686 li
74.7437 174.602 li
74.7378 174.682 li
74.7612 174.763 li
75.3462 176.872 li
73.8081 178.766 li
73.7085 178.887 li
73.6987 179.041 li
73.6069 180.447 li
70.2163 180.167 li
67.9067 177.973 li
68.1411 175.861 li
68.189 175.424 li
67.7563 175.333 li
65.2769 174.811 li
64.8804 174.727 li
64.7271 175.104 li
63.3354 178.519 li
58.2065 182.877 li
58.0034 183.05 li
58.0405 183.313 li
58.4312 186.186 li
58.4907 186.626 li
58.9351 186.605 li
61.4917 186.483 li
63.3022 187.954 li
64.0483 191.442 li
64.1421 191.873 li
64.5786 191.824 li
66.856 191.572 li
69.1284 192.004 li
69.1284 193.27 li
65.8228 197.621 li
65.6167 197.893 li
65.5278 197.889 li
65.4165 197.885 li
65.3179 197.928 li
63.1587 198.857 li
62.9976 198.927 li
62.9175 199.088 li
61.9722 200.975 li
60.6226 201.313 li
60.2729 201.4 li
60.2554 201.762 li
60.1245 204.371 li
60.1099 204.664 li
60.3647 204.813 li
62.3101 205.959 li
61.8052 210.525 li
61.7866 210.678 li
61.7251 210.756 li
59.8394 213.097 li
59.8276 213.111 li
59.8101 213.142 li
58.896 214.576 li
58.7886 214.743 li
58.8267 214.934 li
59.2183 216.891 li
59.2661 217.13 li
59.4897 217.234 li
61.1392 218.004 li
60.9077 220.67 li
60.8804 220.963 li
61.1343 221.122 li
65.8726 224.115 li
65.9976 229.598 li
66.0015 229.713 li
66.0522 229.814 li
69.9468 237.212 li
70.019 237.35 li
70.1851 237.664 li
71.2134 239.619 li
71.0405 244.062 li
71.0396 244.062 li
71.02 244.579 li
71.02 244.602 li
71.0093 244.837 li
70.978 245.666 li
67.4116 245.551 li
67.1411 245.542 li
66.9917 245.764 li
65.5483 247.93 li
63.6831 248.162 li
63.438 248.193 li
63.3188 248.409 li
60.9243 252.692 li
57.2729 254.061 li
54.4858 249.94 li
54.3638 249.761 li
54.1431 249.729 li
47.0952 248.816 li
46.853 248.786 li
46.6831 248.96 li
43.4204 252.355 li
42.9956 252.797 li
43.5229 253.111 li
49.9175 256.899 li
48.7144 257.729 li
45.3276 255.672 li
45.0396 255.495 li
44.7749 255.703 li
42.7554 257.29 li
42.7153 257.209 li
42.6733 257.127 li
42.6089 257.068 li
37.8325 252.724 li
37.1206 252.077 li
37.0229 253.032 li
36.4429 258.602 li
34.4585 257.61 li
34.3433 257.552 li
34.2163 257.56 li
29.2573 257.821 li
29.0337 257.832 li
28.8979 258.006 li
27.5073 259.795 li
24.2153 254.271 li
23.9116 253.76 li
23.4722 254.161 li
20.6011 256.771 li
20.4292 256.925 li
20.4429 257.155 li
20.6938 261.531 li
19.3823 263.081 li
19.2065 263.289 li
19.2925 263.548 li
19.9937 265.651 li
20.1147 265.741 li
21.9995 267.153 li
21.8784 270.164 li
21.8765 270.229 li
21.8901 270.288 li
23.0483 275.437 li
22.6616 280.193 li
21.7495 288.142 li
21.728 288.33 li
21.8394 288.481 li
22.8843 289.917 li
23.1128 290.234 li
23.4712 290.077 li
25.1675 289.336 li
26.3218 291.268 li
26.5239 291.604 li
26.5757 291.691 li
29.7104 296.946 li
29.7104 300.261 li
29.8354 300.398 li
33.0034 303.895 li
33.0015 303.895 li
33.355 304.285 li
35.9819 307.187 li
36.1069 311.184 li
36.1108 311.32 li
36.1831 311.433 li
37.0151 312.723 li
37.0776 312.817 li
37.0845 312.978 li
37.2808 317.457 li
37.2944 317.749 li
37.5591 317.876 li
42.519 320.229 li
42.5454 320.704 li
42.5522 320.836 li
42.562 321.021 li
42.5796 321.339 li
42.5806 321.339 li
42.6343 322.291 li
42.645 322.519 li
42.8296 322.656 li
44.2065 323.679 li
44.3101 323.754 li
44.3452 323.847 li
45.2632 326.321 li
45.6401 328.188 li
45.5991 328.23 li
44.2095 329.624 li
44.0552 329.778 li
44.0688 329.997 li
44.3296 333.915 li
44.3394 334.048 li
44.4175 334.16 li
47.9771 339.246 li
47.7261 344.512 li
47.0835 347.079 li
47.0269 347.313 li
47.1782 347.5 li
50.4409 351.548 li
50.6704 351.831 li
51.0063 351.69 li
52.5718 351.039 li
52.7241 350.978 li
52.8062 350.834 li
53.4839 349.671 li
55.0288 350.497 li
55.0737 350.52 li
55.1128 350.53 li
57.2017 351.186 li
57.4136 351.253 li
57.605 351.132 li
60.0854 349.564 li
60.312 349.421 li
60.312 342.273 li
61.9751 332.686 li
68.1255 326.793 li
68.2573 326.664 li
68.2729 326.481 li
68.7954 320.216 li
68.8013 320.14 li
68.7847 320.063 li
68.2056 317.632 li
70.9878 315.536 li
71.0562 315.483 li
71.1489 315.485 li
75.2202 315.57 li
75.3325 315.573 li
75.4321 315.528 li
79.3247 313.733 li
79.4077 313.694 li
79.4399 313.739 li
79.5835 313.792 li
83.6772 315.281 li
83.7622 315.312 li
83.855 315.309 li
94.8198 315.048 li
95.4048 315.033 li
95.2847 314.464 li
94.4722 310.641 li
96.7251 310.211 li
97.0562 310.149 li
97.1147 309.818 li
99.2036 298.07 li
99.2388 297.865 li
99.1167 297.699 li
97.2886 295.22 li
97.1812 295.073 li
97.0093 295.031 li
94.7144 294.486 li
94.9976 292.88 li
98.269 289.857 li
98.5854 289.568 li
98.3335 289.218 li
95.6401 285.474 li
96.5903 284.977 li
98.4888 284.14 li
98.688 284.053 li
98.9038 283.982 li
103.314 282.522 li
103.585 282.432 li
103.64 282.151 li
104.25 278.983 li
107.787 277.031 li
111.766 276.004 li
111.787 275.998 li
113.214 275.563 li
113.257 275.604 li
115.579 277.813 li
115.347 280.132 li
114.708 282.177 li
114.645 282.376 li
114.745 282.556 li
116.181 285.168 li
116.399 285.561 li
116.806 285.375 li
119.679 284.069 li
119.835 283.999 li
119.912 283.845 li
121.315 281.039 li
122.784 279.458 li
126.567 280.188 li
126.789 280.233 li
126.966 280.087 li
129.066 278.357 li
130.294 278.256 li
131.319 279.051 li
131.464 279.163 li
131.648 279.151 li
135.695 278.891 li
135.738 278.888 li
135.787 278.877 li
138.787 278.093 li
140.531 277.708 li
140.4 280.472 li
140.396 280.578 li
140.437 280.68 li
142.003 284.466 li
142.159 284.839 li
142.553 284.755 li
144.38 284.364 li
144.507 284.336 li
144.605 284.249 li
145.667 283.292 li
147.818 284.316 li
147.716 285.724 li
146.971 287.342 li
146.839 287.625 li
147.046 287.864 li
147.96 288.908 li
148.045 289.004 li
148.166 289.046 li
150.539 289.878 li
151.512 293.287 li
152.518 297.686 li
151.402 300.415 li
151.319 300.617 li
152.591 303.162 li
152.827 303.634 li
153.278 303.361 li
156.095 301.646 li
156.986 301.915 li
157.78 303.614 li
158.421 306.953 li
158.458 307.142 li
158.613 307.254 li
160.57 308.689 li
160.845 308.892 li
161.127 308.703 li
163.341 307.226 li
165.312 307.341 li
169.095 308.998 li
168.988 310.616 li
168.978 310.765 li
169.052 310.891 li
169.966 312.458 li
170.078 312.649 li
170.296 312.691 li
172.384 313.082 li
172.648 313.132 li
172.83 312.936 li
174.183 311.479 li
175.655 312.949 li
175.691 312.986 li
175.746 313.02 li
177.822 314.289 li
177.345 317.629 li
177.332 317.722 li
177.354 317.814 li
177.876 319.903 li
177.906 320.019 li
177.988 320.108 li
180.336 322.721 li
180.421 322.813 li
180.546 322.855 li
182.503 323.507 li
182.714 323.577 li
182.905 323.465 li
184.673 322.403 li
185.837 322.791 li
186.921 324.962 li
187.012 325.145 li
187.208 325.206 li
192.037 326.773 li
192.274 326.85 li
192.475 326.7 li
194.564 325.133 li
194.63 325.083 li
194.673 325.023 li
196.761 322.021 li
196.917 321.794 li
196.802 321.541 li
193.111 313.458 li
193.054 313.334 li
193.023 313.313 li
193.039 313.292 li
194.396 311.506 li
199.141 311.133 li
199.541 311.102 li
199.586 310.7 li
199.95 307.426 li
201.957 306.311 li
204.146 306.426 li
207.027 308.681 li
207.353 308.937 li
207.658 308.652 li
209.485 306.956 li
209.774 306.689 li
209.568 306.35 li
207.385 302.755 li
206.433 299.424 li
208.632 297.109 li
210.439 296.579 li
213.627 300.014 li
213.759 300.157 li
213.953 300.168 li
220.992 300.609 li
221.195 300.623 li
221.403 300.671 li
228.674 302.355 li
232.785 304.926 li
233.072 305.105 li
233.341 304.892 li
235.572 303.131 li
238.948 304.939 li
239.015 304.977 li
239.083 304.99 li
251.355 307.341 li
251.505 307.369 li
251.648 307.305 li
256.108 305.269 li
256.263 305.195 li
256.404 305.195 li
259.786 305.134 li
262.645 309.981 li
262.76 310.178 li
262.989 310.214 li
265.412 310.596 li
265.663 310.636 li
265.869 310.694 li
267.421 311.146 li
267.531 313.991 li
266.487 315.151 li
266.298 315.362 li
266.387 315.629 li
267.083 317.716 li
264.654 320.511 li
264.49 320.698 li
264.548 320.94 li
265.07 323.159 li
265.138 323.453 li
265.433 323.521 li
270.701 324.745 li
270.931 327.396 li
270.968 327.821 li
271.395 327.841 li
274.083 327.97 li
275.982 328.444 li
277.636 330.304 li
275.023 332.464 li
274.847 332.609 li
274.847 335.581 li
275.474 335.39 li
278.279 334.536 li
280.712 335.876 li
280.871 335.963 li
281.05 335.921 li
283.4 335.401 li
283.521 335.373 li
283.613 335.294 li
285.471 333.683 li
290.962 332.686 li
291.199 332.644 li
291.413 332.648 li
297.065 332.775 li
295.082 334.854 li
294.827 335.12 li
295.019 335.438 li
300.675 344.787 li
300.758 344.925 li
300.793 345.094 li
307.098 375.358 li
307.193 375.811 li
307.646 375.74 li
311.041 375.221 li
311.247 375.187 li
311.367 375.016 li
313.494 371.943 li
315.107 372.605 li
315.712 375.869 li
315.753 376.097 li
315.957 376.209 li
323.136 380.124 li
323.331 380.231 li
323.537 380.152 li
328.967 378.133 li
331.625 379.287 li
333.694 383.562 li
333.769 383.719 li
333.785 383.871 li
334.242 388.361 li
334.267 388.614 li
334.488 388.738 li
338.425 390.954 li
338.546 395.113 li
338.558 395.495 li
338.929 395.577 li
342.941 396.453 li
344.529 398.411 li
344.781 398.72 li
345.131 398.534 li
349.299 396.332 li
350.05 399.018 li
350.074 399.096 li
350.115 399.158 li
353.118 403.596 li
353.244 403.783 li
353.467 403.809 li
358.167 404.331 li
358.514 404.367 li
358.662 404.048 li
359.973 401.186 li
365.94 400.938 li
366.091 400.933 li
366.21 400.843 li
370.365 397.754 li
370.531 397.63 li
370.703 397.565 li
387.431 391.274 li
393.083 390.906 li
393.972 392.237 li
394.082 392.403 li
394.275 392.442 li
402.958 394.333 li
403.558 398.049 li
403.597 398.296 li
403.82 398.405 li
407.212 400.104 li
407.292 400.144 li
407.378 400.152 li
416.908 401.196 li
420.525 401.696 li
422.372 403.418 li
422.585 403.618 li
422.862 403.522 li
425.865 402.478 li
425.952 402.446 li
426.02 402.388 li
428.761 400.04 li
428.853 399.961 li
428.896 399.852 li
430.854 395.023 li
430.963 394.754 li
430.777 394.529 li
427.638 390.763 li
427.996 385.283 li
429.765 384.73 li
430.089 384.629 li
430.105 384.289 li
430.214 381.989 li
432.515 381.88 li
432.872 381.862 li
433.68 378.76 li
444.582 383.152 li
444.617 383.166 li
444.654 383.175 li
454.548 385.458 li
456.562 393.263 li
456.615 393.474 li
456.806 393.571 li
464.246 397.489 li
464.355 397.549 li
464.482 397.543 li
469.706 397.414 li
469.833 397.411 li
469.942 397.347 li
477.196 393.019 li
482.732 394.779 li
482.819 394.808 li
482.909 394.802 li
488.61 394.431 li
490.026 396.908 li
490.158 397.142 li
490.43 397.152 li
493.881 397.299 li
494.269 397.315 li
494.378 397.321 li
496.283 397.402 li
498.373 401.334 li
498.494 401.564 li
498.757 401.59 li
515.858 403.154 li
516.018 403.171 li
516.153 403.09 li
527.534 396.234 li
531.061 396.107 li
531.404 396.097 li
531.507 395.765 li
532.642 392.105 li
538.032 387.092 li
545.48 386.719 li
547.679 388.797 li
548.007 389.108 li
548.342 388.803 li
551.431 385.958 li
565.036 388.14 li
565.429 388.204 li
565.57 387.825 li
567.471 382.621 li
572.046 379.444 li
572.366 379.223 li
572.22 378.863 li
570.31 374.156 li
572.352 361.396 li
575.767 357.981 li
575.989 357.763 li
575.876 357.471 li
573.529 351.205 li
573.422 350.921 li
573.125 350.891 li
568.886 350.443 li
572.009 344.658 li
578.132 340.409 li
578.303 340.291 li
578.498 340.192 li
587.209 335.713 li
593.801 337.996 li
593.917 338.035 li
594.034 338.016 li
602.013 336.749 li
613.848 348.455 li
628.722 363.849 li
628.95 364.085 li
629.253 363.964 li
634.932 361.691 li
638.398 363.301 li
638.605 363.399 li
638.816 363.293 li
641.251 362.076 li
646.026 363.585 li
646.124 363.615 li
646.234 363.602 li
648.921 363.254 li
648.929 363.251 li
652.808 369.385 li
652.847 369.443 li
652.901 369.491 li
657.078 373.146 li
657.319 373.358 li
657.608 373.218 li
666.483 368.91 li
666.671 368.82 li
666.736 368.62 li
667.878 365.064 li
674.398 357.776 li
677.83 356.201 li
681.146 361.619 li
679.908 365.587 li
679.86 365.739 li
679.911 365.891 li
682.037 371.971 li
682.087 372.117 li
682.084 372.277 li
681.582 387.517 li
681.579 387.654 li
681.646 387.774 li
684.002 391.811 li
674.066 392.659 li
673.783 392.682 li
673.665 392.942 li
670.14 400.644 li
670.002 400.947 li
670.232 401.183 li
680.029 411.237 li
680.276 414.844 li
680.349 415.877 li
681.096 415.164 li
686.438 410.077 li
695.635 410.207 li
695.813 410.207 li
695.948 410.1 li
702.736 404.617 li
702.817 404.55 li
702.865 404.455 li
706.909 396.363 li
706.954 396.276 li
706.962 396.187 li
708.917 374.029 li
711.65 362.447 li
711.669 362.366 li
711.656 362.273 li
709.833 348.68 li
709.804 348.472 li
709.822 348.27 li
711.006 332.873 li
711.015 332.775 li
710.982 332.677 li
709.285 327.849 li
709.277 327.823 li
709.263 327.796 li
701.691 312.394 li
701.663 312.335 li
701.629 312.295 li
699.225 309.386 li
697.032 298.671 li
697.02 298.618 li
697.006 298.581 li
695.843 295.81 li
702.171 299.241 li
704.586 305.597 li
704.612 305.664 li
704.66 305.727 li
708.423 310.528 li
712.981 317.822 li
716.245 323.17 li
716.29 323.246 li
716.366 323.305 li
720.034 326.085 li
721.16 329.34 li
721.16 329.343 li
722.205 332.346 li
722.272 332.536 li
722.455 332.623 li
726.917 334.732 li
727.533 339.17 li
727.552 339.302 li
727.633 339.403 li
732.461 345.54 li
733.236 346.523 li
733.329 345.273 li
733.719 339.92 li
733.725 339.869 li
733.713 339.811 li
733.146 336.289 li
736.402 336.064 li
736.489 336.059 li
736.567 336.021 li
737.792 335.466 li
741.106 337.185 li
742.392 337.853 li
741.766 336.544 li
738.893 330.539 li
738.761 330.262 li
734.379 330.262 li
730.08 328.366 li
725.154 324.827 li
721.946 316.617 li
720.25 311.655 li
723.715 309.691 li
730.911 309.305 li
732.36 309.229 li
731.158 308.417 li
714.737 297.34 li
703.208 286.977 li
697.896 277.003 li
697.84 276.896 li
697.748 276.832 li
690.496 271.782 li
687.148 267.533 li
686.916 267.238 li
686.57 267.39 li
684.222 268.435 li
683.992 268.535 li
683.941 268.78 li
683.418 271.26 li
683.354 271.571 li
683.618 271.757 li
687.847 274.706 li
689.954 277.865 li
689.055 279.034 li
687.275 278.587 li
686.789 278.467 li
686.682 278.955 li
686.031 281.957 li
685.963 282.261 li
686.216 282.449 li
690.289 285.505 li
693.931 293.815 li
689.151 291.841 li
687.471 289.827 li
689.027 286.715 li
689.263 286.246 li
688.777 286.05 li
684.598 284.351 li
684.559 284.334 li
684.502 284.325 li
675.757 282.758 li
675.594 282.729 li
675.448 282.806 li
668.663 286.327 li
668.46 286.432 li
668.41 286.653 li
666.287 295.972 li
664.045 293.116 li
663.664 292.63 li
663.281 293.118 li
660.568 296.59 li
658.119 289.473 li
657.922 288.9 li
657.406 289.218 li
651.814 292.649 li
647.595 291.964 li
647.826 287.911 li
654.064 272.321 li
654.086 272.26 li
654.094 272.189 li
655.659 256.557 li
657.476 249.021 li
657.504 248.901 li
657.476 248.789 li
655.946 242.666 li
657.982 237.198 li
658.027 237.077 li
658.009 236.956 li
657.133 231.196 li
669.958 218.625 li
673.886 219.361 li
674.335 219.445 li
674.445 219.001 li
674.838 217.436 li
674.889 217.232 li
674.774 217.055 li
673.858 215.631 li
675.299 214.682 li
675.419 214.602 li
675.707 214.414 li
679.2 212.109 li
679.225 212.094 li
679.245 212.078 li
681.508 210.191 li
684.66 209.435 li
685.095 209.33 li
685.028 208.889 li
684.047 202.643 li
689.392 200.941 li
689.491 200.908 li
689.569 200.842 li
693.875 197.042 li
696.779 196.948 li
694.33 200.463 li
694.08 200.82 li
694.412 201.107 li
697.282 203.588 li
697.646 203.9 li
697.964 203.543 li
702.14 198.844 li
702.239 198.734 li
702.258 198.588 li
703.263 191.433 li
706.777 190.1 li
706.909 190.049 li
706.994 189.939 li
709.996 186.023 li
710.293 185.635 li
709.9 185.341 li
706.769 182.991 li
706.392 182.71 li
706.097 183.074 li
703.691 186.057 li
701.337 183.813 li
700.565 170.561 li
700.562 170.498 li
700.544 170.442 li
698.096 162.58 li
698.849 156.931 li
703.474 150.306 li
705.977 150.187 li
706.308 150.171 li
706.415 149.854 li
707.423 146.832 li
712.481 153.772 li
712.658 154.016 li
712.953 153.967 li
716.869 153.314 li
717.239 153.252 li
717.273 152.879 li
717.534 150.007 li
717.537 149.947 li
717.528 149.889 li
716.616 144.015 li
716.607 143.977 li
715.616 139.84 li
715.604 139.793 li
718.034 137.527 li
718.371 137.212 li
718.076 136.859 li
711.585 129.098 li
713.006 124.363 li
717.8 122.7 li
715.208 126.59 li
715.096 126.757 li
715.135 126.954 li
715.918 130.87 li
715.958 131.061 li
716.121 131.174 li
721.213 134.699 li
721.326 134.777 li
721.46 134.785 li
723.336 134.889 li
723.221 138.068 li
723.207 138.467 li
723.597 138.559 li
725.356 138.973 li
723.359 148.954 li
723.322 149.137 li
723.42 149.299 li
725.709 153.113 li
726.485 165.135 li
726.488 165.179 li
726.496 165.215 li
728.324 173.047 li
728.333 173.083 li
730.728 180.649 li
728.049 183.574 li
727.861 183.778 li
727.942 184.042 li
728.785 186.809 li
727.367 188.701 li
727.13 189.014 li
727.386 189.31 li
731.33 193.887 li
731.967 201.174 li
731.981 201.33 li
732.09 201.453 li
737.643 207.723 li
737.947 208.066 li
737.963 208.086 li
744.229 215.159 li
744.271 215.205 li
744.322 215.24 li
780.349 239.389 li
781.184 239.947 li
cp
789.376 292.142 mo
789.294 291.908 li
789.056 291.838 li
786.975 291.231 li
786.691 291.149 li
786.489 291.363 li
784.93 293.009 li
784.722 293.229 li
784.827 293.512 li
786.04 296.804 li
786.191 297.219 li
786.616 297.106 li
790.255 296.152 li
790.769 296.02 li
790.589 295.52 li
789.376 292.142 li
cp
775.839 242.652 mo
775.417 242.922 li
773.261 244.317 li
772.983 244.5 li
773.05 244.826 li
773.368 246.348 li
773.41 246.548 li
773.581 246.657 li
775.546 247.927 li
776.044 248.247 li
776.263 247.696 li
777.215 245.283 li
777.302 245.062 li
777.176 244.856 li
776.097 243.079 li
775.839 242.652 li
cp
789.242 161.931 mo
789.121 161.719 li
788.879 161.691 li
784.613 161.184 li
784.532 161.173 li
784.45 161.192 li
780.487 162.105 li
779.81 162.263 li
780.189 162.844 li
781.711 165.18 li
781.83 165.36 li
782.046 165.395 li
787.834 166.309 li
787.992 166.333 li
788.132 166.26 li
790.468 165.041 li
790.921 164.805 li
790.666 164.367 li
789.242 161.931 li
cp
744.488 145.355 mo
744.415 145.345 li
742.485 145.039 li
742.081 144.975 li
741.951 145.367 li
740.429 149.937 li
740.339 150.203 li
740.525 150.412 li
746.313 156.912 li
747.063 157.754 li
747.161 156.63 li
747.975 147.287 li
748.003 146.944 li
747.689 146.803 li
744.541 145.381 li
744.488 145.355 li
cp
472.453 136.195 mo
472.129 136.183 li
470.037 136.098 li
469.762 136.088 li
469.61 136.318 li
468.439 138.121 li
468.397 138.188 li
468.377 138.264 li
468.083 139.396 li
468.023 139.63 li
468.172 139.818 li
469.135 141.035 li
469.402 141.373 li
469.767 141.149 li
473.115 139.094 li
473.458 138.885 li
473.318 138.511 li
472.565 136.498 li
472.453 136.195 li
cp
184.454 116.315 mo
184.314 116.211 li
183.275 115.431 li
182.884 115.137 li
182.593 115.532 li
181.783 116.637 li
181.707 116.741 li
181.691 116.867 li
181.561 117.939 li
181.535 118.158 li
181.686 118.324 li
182.69 119.428 li
182.97 119.737 li
183.32 119.505 li
184.681 118.594 li
184.963 118.406 li
184.883 118.077 li
184.495 116.484 li
184.454 116.315 li
cp
781.973 257.928 mo
781.386 257.666 li
781.296 258.304 li
780.979 260.525 li
780.958 260.666 li
781.018 260.795 li
782.035 263.017 li
782.237 263.458 li
782.675 263.258 li
785.466 261.988 li
785.677 261.894 li
785.736 261.669 li
786.119 260.208 li
786.222 259.81 li
785.846 259.641 li
781.973 257.928 li
cp
782.922 253.339 mo
782.897 253.004 li
782.453 247.039 li
782.439 246.851 li
782.296 246.719 li
780.583 245.132 li
780.496 245.051 li
780.383 245.02 li
778.543 244.512 li
777.976 244.356 li
777.928 244.941 li
777.42 250.971 li
777.404 251.156 li
777.521 251.305 li
779.87 254.353 li
780.108 254.661 li
780.462 254.496 li
782.619 253.479 li
782.922 253.339 li
cp
787.008 275.956 mo
786.893 275.739 li
786.649 275.706 li
785.436 275.531 li
785.099 275.483 li
784.939 275.79 li
783.9 277.781 li
783.762 278.042 li
783.93 278.281 li
785.489 280.536 li
785.812 281.003 li
786.222 280.612 li
788.129 278.792 li
788.399 278.537 li
788.222 278.211 li
787.008 275.956 li
cp
780.954 240.616 mo
780.625 240.326 li
780.304 240.624 li
779.415 241.45 li
779.302 241.554 li
779.271 241.703 li
778.954 243.163 li
778.864 243.57 li
779.254 243.719 li
781.414 244.545 li
781.723 244.663 li
781.948 244.416 li
783.09 243.146 li
783.419 242.781 li
783.048 242.455 li
780.954 240.616 li
cp
786.225 284.64 mo
786.056 284.99 li
785.104 286.982 li
784.992 287.218 li
785.125 287.439 li
786.166 289.176 li
786.371 289.516 li
786.742 289.383 li
788.216 288.863 li
788.5 288.763 li
788.537 288.465 li
788.884 285.69 li
788.938 285.255 li
788.508 285.159 li
786.601 284.727 li
786.225 284.64 li
cp
340.479 40.5664 mo
340.34 41.0537 li
339.936 42.4717 li
339.833 42.8281 li
340.154 43.0205 li
341.673 43.9326 li
342.365 44.3477 li
342.408 43.541 li
342.508 41.6162 li
342.528 41.249 li
342.175 41.1309 li
340.96 40.7266 li
340.479 40.5664 li
cp
452.023 90.9316 mo
452.087 91.2373 li
452.394 91.3066 li
455.975 92.1211 li
456.643 92.2734 li
456.565 91.5918 li
456.402 90.209 li
456.374 89.9736 li
456.171 89.8496 li
452.587 87.6504 li
452.051 87.3223 li
451.872 87.9268 li
451.627 88.7412 li
451.59 88.8574 li
451.616 88.9785 li
452.023 90.9316 li
cp
434.801 90.6094 mo
434.855 90.7998 li
435.914 94.626 li
436.11 95.3379 li
436.684 94.875 li
441.125 91.3086 li
445.774 90.9922 li
445.958 90.9805 li
448.611 88.3281 li
448.74 88.1973 li
448.751 88.0098 li
449.077 82.1484 li
449.086 81.9658 li
448.974 81.8223 li
446.289 78.4033 li
445.949 77.9727 li
445.561 78.3594 li
443.637 80.2842 li
442.9 79.498 li
443.052 76.2012 li
443.092 75.3438 li
442.336 75.752 li
438.43 77.8691 li
438.195 77.9961 li
438.175 78.2607 li
437.614 85.4814 li
434.897 90.4375 li
434.801 90.6094 li
cp
475.275 128.961 mo
475.131 129.318 li
473.96 132.254 li
473.826 132.588 li
474.11 132.813 li
477.123 135.202 li
477.544 135.538 li
477.836 135.081 li
479.215 132.9 li
479.257 132.832 li
479.277 132.762 li
479.738 130.959 li
479.825 130.617 li
479.522 130.429 li
477.847 129.381 li
477.757 129.323 li
477.663 129.311 li
475.654 129.017 li
475.275 128.961 li
cp
367.61 42.668 mo
367.27 42.3496 li
365.75 40.9326 li
365.366 40.5742 li
365.039 40.9873 li
363.521 42.9121 li
363.15 43.3789 li
363.683 43.6455 li
365.506 44.5566 li
365.845 44.7266 li
366.091 44.4395 li
367.308 43.0215 li
367.61 42.668 li
cp
420.906 55.165 mo
421.697 55.3105 li
421.458 54.543 li
420.319 50.8789 li
420.209 50.5313 li
419.843 50.5391 li
416.423 50.6211 li
416.002 50.6309 li
415.953 51.0488 li
415.627 53.7344 li
415.571 54.1875 li
416.022 54.2695 li
420.906 55.165 li
cp
533.979 94.8516 mo
534.007 94.9727 li
534.085 95.0635 li
536.72 98.1387 li
536.948 98.4023 li
537.271 98.2734 li
538.919 97.6143 li
539.424 97.4111 li
539.164 96.9316 li
537.186 93.3076 li
537.122 93.1885 li
537.006 93.1211 li
534.041 91.3633 li
533.078 90.793 li
533.322 91.8867 li
533.979 94.8516 li
cp
423.557 106.357 mo
423.247 106.98 li
422.365 108.744 li
422.591 108.989 li
423.486 109.967 li
423.817 110.327 li
424.175 109.995 li
425.314 108.938 li
425.672 108.604 li
425.336 108.248 li
424.035 106.864 li
423.557 106.357 li
cp
426.744 105.498 mo
427.02 105.336 li
428.404 104.521 li
428.789 104.296 li
428.595 103.895 li
427.619 101.858 li
427.381 101.363 li
426.919 101.659 li
424.64 103.125 li
424.047 103.506 li
424.613 103.924 li
426.485 105.308 li
426.744 105.498 li
cp
538.585 92.166 mo
538.599 92.3008 li
538.686 92.4121 li
540.708 94.9668 li
541.453 97.835 li
541.523 98.1055 li
541.792 98.1807 li
546.076 99.3887 li
546.16 99.4131 li
546.247 99.4063 li
550.201 99.0762 li
550.684 99.0361 li
550.645 98.5537 li
550.361 94.9678 li
552.63 95.2305 li
552.94 95.2656 li
553.099 94.998 li
555.119 91.668 li
557.419 92.1475 li
557.694 92.2051 li
557.882 91.9951 li
559.641 90.0176 li
559.944 89.6758 li
559.621 89.3506 li
557.863 87.5938 li
557.773 87.5049 li
557.652 87.4697 li
553.948 86.4121 li
551.47 83.4893 li
552.909 83.1133 li
555.026 86.3359 li
555.136 86.5049 li
555.335 86.5459 li
559.619 87.4238 li
560.188 87.541 li
560.2 86.959 li
560.309 82.0156 li
560.312 81.877 li
560.245 81.7598 li
558.815 79.3438 li
558.686 79.1221 li
558.427 79.1055 li
553.375 78.7754 li
553.207 78.7656 li
553.066 78.8652 li
550.591 80.6172 li
546.721 79.9902 li
546.221 79.9082 li
546.163 80.4121 li
545.833 83.1572 li
545.806 83.3818 li
545.966 83.5488 li
548.078 85.7578 li
547.356 86.5996 li
543.879 83.7188 li
543.725 83.5918 li
543.525 83.6104 li
538.911 84.0498 li
538.506 84.0879 li
538.473 84.4902 li
538.141 88.2246 li
538.138 88.2715 li
538.144 88.3223 li
538.585 92.166 li
cp
563.339 81.2236 mo
563.468 81.5 li
563.775 81.5029 li
573.661 81.6133 li
573.953 81.6162 li
574.093 81.3574 li
576.947 76.0859 li
577.062 75.875 li
576.96 75.6543 li
575.093 71.5908 li
574.787 70.9219 li
574.292 71.4668 li
572.369 73.5947 li
568.541 73.2832 li
568.238 73.2598 li
568.083 73.5234 li
567.128 75.1494 li
564.789 75.1494 li
564.727 75.5664 li
564.46 77.3301 li
562.261 77.2383 li
561.463 77.2051 li
561.803 77.9287 li
563.339 81.2236 li
cp
632.267 85.9268 mo
632.517 86.0938 li
632.781 85.9395 li
634.648 84.8418 li
634.974 84.6504 li
634.871 84.29 li
634.21 81.9834 li
634.086 81.5518 li
633.648 81.6387 li
631.453 82.0781 li
631.179 82.1328 li
631.087 82.3945 li
630.43 84.2617 li
630.303 84.6191 li
630.618 84.8281 li
632.267 85.9268 li
cp
666.197 27.1943 mo
666.537 27.5986 li
666.913 27.2227 li
668.14 25.9922 li
668.247 25.8867 li
668.275 25.7441 li
669.8 18.1064 li
671.609 14.5811 li
671.747 14.3145 li
671.566 14.0723 li
669.519 11.3018 li
669.356 11.084 li
669.089 11.1055 li
663.969 11.5156 li
663.734 11.5352 li
663.601 11.7324 li
660.529 16.3506 li
660.448 16.4736 li
660.448 20.3867 li
660.566 20.5234 li
666.197 27.1943 li
cp
560.107 103.239 mo
560.107 108.638 li
560.694 108.513 li
565.856 107.414 li
565.917 107.401 li
565.98 107.369 li
570.813 104.842 li
571.217 104.631 li
571.035 104.217 li
569.386 100.482 li
569.277 100.235 li
569.007 100.197 li
565.844 99.7617 li
563.446 99.2168 li
563.121 99.1426 li
562.935 99.4199 li
561.194 102.031 li
560.233 103.099 li
560.107 103.239 li
cp
557.27 98.043 mo
556.956 98.3574 li
555.635 99.6748 li
555.451 99.8633 li
555.506 100.122 li
556.385 104.186 li
556.467 104.57 li
559.376 104.57 li
559.43 104.141 li
559.868 100.516 li
559.899 100.258 li
559.697 100.088 li
557.61 98.3301 li
557.27 98.043 li
cp
415.883 70.4365 mo
415.926 70.6133 li
416.078 70.7178 li
419.498 73.0781 li
419.745 73.25 li
420.007 73.1055 li
422.368 71.8027 li
422.542 71.707 li
422.599 71.5156 li
423.333 69.0732 li
423.441 68.7129 li
423.511 68.7754 li
423.798 68.6445 li
430.474 65.6328 li
430.761 65.5039 li
430.761 62.9531 li
433.193 61.627 li
433.598 61.4063 li
433.398 60.9902 li
432.435 58.9844 li
430.814 54.3652 li
430.772 54.2441 li
430.679 54.1611 li
427.749 51.5566 li
427.405 51.252 li
427.082 51.5762 li
424.51 54.1465 li
421.95 55.8271 li
421.672 56.0088 li
421.74 56.332 li
422.348 59.293 li
419.792 62.7012 li
419.693 62.832 li
419.693 65.3203 li
419.856 65.4678 li
423.274 68.5605 li
423.291 68.5752 li
423.039 68.4805 li
417.911 66.5254 li
417.703 66.4473 li
417.507 66.5527 li
415.554 67.6113 li
415.22 67.792 li
415.313 68.1563 li
415.883 70.4365 li
cp
559.61 64.5771 mo
560.026 64.6699 li
560.171 64.2705 li
560.941 62.1836 li
561.11 61.7285 li
560.652 61.5605 li
558.565 60.791 li
558.071 60.6094 li
557.93 61.1201 li
557.27 63.5371 li
557.138 64.0273 li
557.635 64.1377 li
559.61 64.5771 li
cp
548.193 108.596 mo
547.805 108.545 li
542.752 107.886 li
541.911 107.775 li
542.245 108.557 li
543.233 110.863 li
543.292 111.005 li
543.424 111.086 li
545.733 112.514 li
545.913 112.625 li
546.115 112.568 li
548.092 112.02 li
548.482 111.912 li
548.449 111.51 li
548.23 108.984 li
548.193 108.596 li
cp
433.375 68.3018 mo
433.172 69.8613 li
432.326 70.1152 li
431.314 66.2871 li
431.163 65.7129 li
430.629 65.9756 li
424.361 69.0684 li
424.195 69.1514 li
424.125 69.3223 li
421.845 74.9395 li
421.816 75.0137 li
421.812 75.0996 li
421.73 76.8926 li
421.714 77.2207 li
422.017 77.3555 li
424.313 78.3848 li
428.411 81.9199 li
428.434 81.9404 li
428.454 81.9551 li
433.095 85.1289 li
433.336 85.2949 li
433.596 85.1563 li
435.875 83.9346 li
436.091 83.8184 li
436.128 83.5791 li
436.617 80.4043 li
436.651 80.1875 li
436.507 80.0176 li
434.943 78.1699 li
436.874 75.0508 li
436.939 74.9463 li
436.947 74.8281 li
437.191 71.165 li
437.206 70.9414 li
437.045 70.7842 li
434.196 68.0166 li
433.5 67.3418 li
433.375 68.3018 li
cp
372.044 40.2188 mo
372.201 40.7129 li
372.683 40.5254 li
374.506 39.8164 li
374.925 39.6533 li
374.795 39.2227 li
374.086 36.8936 li
373.9 36.2773 li
373.359 36.627 li
371.637 37.7412 li
371.326 37.9414 li
371.438 38.2949 li
372.044 40.2188 li
cp
386.136 131.424 mo
385.857 131.352 li
384.308 130.947 li
383.945 130.852 li
383.761 131.182 li
382.751 133 li
382.568 133.332 li
382.847 133.591 li
384.665 135.273 li
385.009 135.592 li
386.55 134.051 li
386.744 133.855 li
386.678 133.588 li
386.207 131.703 li
386.136 131.424 li
cp
385.784 69.0039 mo
385.921 69.1426 li
386.12 69.1465 li
388.337 69.1953 li
388.857 69.207 li
388.832 68.6885 li
388.733 66.7119 li
388.724 66.5605 li
388.636 66.4424 li
387.108 64.418 li
386.875 64.1084 li
386.523 64.2666 li
384.648 65.1055 li
384.416 65.21 li
384.369 65.458 li
384.074 66.9893 li
384.025 67.2402 li
384.207 67.4238 li
385.784 69.0039 li
cp
383.478 118.801 mo
383.525 118.854 li
383.576 118.89 li
384.855 119.766 li
385.113 119.941 li
385.38 119.778 li
387.265 118.634 li
387.671 118.388 li
387.437 117.978 li
386.359 116.092 li
386.263 115.924 li
386.072 115.867 li
384.456 115.396 li
384.203 115.322 li
384.003 115.496 li
382.455 116.842 li
382.093 117.156 li
382.401 117.521 li
383.478 118.801 li
cp
367.375 45.5771 mo
367.205 45.9492 li
366.699 47.0635 li
366.63 47.21 li
366.667 47.3701 li
367.173 49.5977 li
367.261 49.9863 li
367.659 49.9766 li
371.913 49.875 li
372.177 49.8691 li
372.316 49.6406 li
374.037 46.8057 li
374.19 46.5527 li
374.037 46.3018 li
372.619 43.9717 li
372.231 43.334 li
371.806 43.9492 li
370.175 46.3037 li
367.77 45.6797 li
367.375 45.5771 li
cp
363.814 144.029 mo
363.281 144.323 li
360.587 145.805 li
360.46 145.874 li
360.392 146.006 li
359.65 147.42 li
359.396 147.906 li
359.912 148.1 li
362.066 148.907 li
362.189 148.953 li
362.32 148.931 li
364.542 148.525 li
365.072 148.43 li
364.925 147.916 li
363.982 144.617 li
363.814 144.029 li
cp
366.316 47.8125 mo
366.183 47.415 li
365.373 44.9844 li
365.302 44.7725 li
365.097 44.6875 li
362.16 43.4727 li
361.888 43.3594 li
361.664 43.5479 li
359.132 45.6758 li
358.97 45.8105 li
358.959 46.0195 li
358.857 47.7412 li
358.844 47.9717 li
359.017 48.1289 li
361.144 50.0527 li
361.39 50.2754 li
361.687 50.127 li
365.94 48.001 li
366.316 47.8125 li
cp
371.105 141.409 mo
370.876 141.289 li
369.328 140.481 li
368.939 140.279 li
368.699 140.641 li
366.947 143.268 li
366.754 143.557 li
366.966 143.832 li
369.188 146.727 li
369.419 147.029 li
369.768 146.877 li
371.317 146.204 li
371.647 146.061 li
371.607 145.704 li
371.134 141.664 li
371.105 141.409 li
cp
373.396 123.43 mo
373.339 123.713 li
373.07 125.059 li
373.026 125.275 li
373.164 125.451 li
374.308 126.933 li
374.655 127.382 li
375.044 126.971 li
376.255 125.691 li
376.443 125.494 li
376.374 125.233 li
375.834 123.213 li
375.706 122.727 li
375.225 122.873 li
373.676 123.344 li
373.396 123.43 li
cp
394.22 53.6836 mo
394.246 54.0107 li
394.562 54.1094 li
396.632 54.751 li
396.763 54.792 li
396.897 54.7578 li
399.164 54.1641 li
399.72 54.0186 li
399.487 53.4971 li
398.156 50.5332 li
398.105 50.4229 li
398.013 50.3506 li
396.338 49.0176 li
396.005 48.7529 li
395.699 49.0469 li
394.515 50.1836 li
394.394 50.3008 li
394.373 50.4707 li
394.125 52.3477 li
394.119 52.4043 li
394.121 52.4482 li
394.22 53.6836 li
cp
407.892 100.902 mo
407.921 101.152 li
408.141 101.273 li
410.503 102.576 li
411.156 102.937 li
411.22 102.191 li
411.383 100.318 li
411.402 100.117 li
411.267 99.959 li
409.719 98.168 li
409.404 97.8027 li
409.037 98.1172 li
407.897 99.0938 li
407.701 99.2637 li
407.73 99.5176 li
407.892 100.902 li
cp
391.542 127.947 mo
391.589 128.08 li
391.703 128.167 li
392.847 129.043 li
393.25 129.351 li
393.541 128.934 li
394.619 127.385 li
394.889 126.996 li
394.505 126.717 li
392.755 125.437 li
392.472 125.229 li
392.187 125.432 li
391.246 126.105 li
390.942 126.322 li
391.07 126.668 li
391.542 127.947 li
cp
388.453 133.248 mo
387.874 132.6 li
387.626 133.436 li
387.087 135.253 li
386.99 135.578 li
387.267 135.781 li
388.277 136.521 li
388.73 136.855 li
388.993 136.356 li
389.667 135.077 li
389.822 134.779 li
389.597 134.528 li
388.453 133.248 li
cp
389.762 128.972 mo
389.695 130.453 li
389.682 130.728 li
389.91 130.879 li
390.919 131.553 li
391.366 131.852 li
391.619 131.373 li
392.225 130.229 li
392.431 129.839 li
392.06 129.596 li
390.511 128.586 li
389.8 128.123 li
389.762 128.972 li
cp
387.578 111.377 mo
387.441 111.705 li
386.968 112.85 li
386.867 113.099 li
387.023 113.316 li
388.033 114.729 li
388.377 115.212 li
388.782 114.781 li
389.859 113.637 li
389.981 113.507 li
389.991 113.328 li
390.058 112.049 li
390.082 111.578 li
389.611 111.539 li
387.928 111.404 li
387.578 111.377 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
0 0 0 0 cmyk
f
631.525 82.5811 mo
630.865 84.4492 li
632.514 85.5469 li
634.378 84.4492 li
633.721 82.1426 li
631.525 82.5811 li
631.525 82.5811 li
cp
0.721569 0.662745 0.647059 0.752941 cmyk
ef
474.39 132.457 mo
477.401 134.848 li
478.783 132.667 li
479.244 130.864 li
477.57 129.816 li
475.561 129.522 li
474.39 132.457 li
474.39 132.457 li
cp
ef
468.532 139.545 mo
469.493 140.76 li
472.84 138.705 li
472.087 136.693 li
469.995 136.609 li
468.824 138.412 li
468.532 139.545 li
468.532 139.545 li
cp
ef
542.668 108.393 mo
547.721 109.051 li
547.94 111.578 li
545.963 112.127 li
543.658 110.698 li
542.668 108.393 li
542.668 108.393 li
cp
ef
555.958 100.045 mo
556.837 104.108 li
558.924 104.108 li
559.363 100.484 li
557.276 98.7266 li
555.958 100.045 li
555.958 100.045 li
cp
ef
560.57 103.449 mo
560.57 108.063 li
565.732 106.965 li
570.566 104.438 li
568.92 100.703 li
565.732 100.264 li
563.317 99.7148 li
561.559 102.352 li
560.57 103.449 li
560.57 103.449 li
cp
ef
562.219 77.749 mo
563.758 81.0439 li
573.641 81.1533 li
576.498 75.8809 li
574.629 71.8174 li
572.543 74.125 li
568.479 73.7949 li
567.381 75.6611 li
565.185 75.6611 li
564.856 77.8584 li
562.219 77.749 li
562.219 77.749 li
cp
ef
558.374 61.2734 mo
557.716 63.6895 li
559.694 64.1289 li
560.46 62.042 li
558.374 61.2734 li
558.374 61.2734 li
cp
ef
553.102 82.5811 mo
555.411 86.0957 li
559.694 86.9746 li
559.803 82.0313 li
558.374 79.6152 li
553.322 79.2871 li
550.687 81.1533 li
546.624 80.4941 li
546.294 83.2402 li
548.709 85.7666 li
547.393 87.3047 li
543.547 84.1191 li
538.933 84.5586 li
538.605 88.293 li
539.045 92.1367 li
541.129 94.7725 li
541.899 97.7383 li
546.182 98.9463 li
550.136 98.6172 li
549.808 94.4434 li
552.665 94.7725 li
554.861 91.1484 li
557.495 91.6973 li
559.253 89.7207 li
557.495 87.9629 li
553.653 86.8652 li
550.578 83.2402 li
553.102 82.5811 li
553.102 82.5811 li
cp
ef
533.771 91.8066 mo
534.431 94.7725 li
537.066 97.8477 li
538.714 97.1895 li
536.737 93.5645 li
533.771 91.8066 li
533.771 91.8066 li
cp
ef
647.742 85.2744 mo
646.411 87.8555 li
639.229 91.9023 li
634.011 86.9414 li
628.79 86.4199 li
621.347 91.25 li
616.258 97.5156 li
614.429 103.911 li
611.037 104.955 li
606.858 102.867 li
602.813 103.258 li
600.724 106 li
598.896 104.433 li
597.199 106.262 li
595.113 104.303 li
598.112 101.301 li
591.065 100.778 li
587.018 104.303 li
589.237 111.874 li
585.19 115.789 li
585.19 109.916 li
582.449 109.916 li
579.708 112.396 li
579.056 109.393 li
583.103 105.738 li
578.794 106 li
566.002 112.526 li
568.482 115.528 li
564.828 119.053 li
566.263 121.663 li
568.875 120.357 li
569.136 124.144 li
572.268 127.799 li
567.437 128.973 li
566.002 130.932 li
567.308 134.063 li
563.393 134.717 li
558.171 133.15 li
556.605 139.023 li
547.727 137.457 li
547.727 150.51 li
541.463 149.467 li
531.802 140.721 li
535.327 138.241 li
529.455 129.495 li
525.668 127.668 li
519.925 129.625 li
513.53 127.146 li
512.615 137.066 li
500.999 142.026 li
496.561 139.023 li
497.212 136.675 li
485.335 136.544 li
482.201 140.721 li
481.417 143.463 li
480.636 139.416 li
478.415 137.457 li
475.806 140.199 li
472.186 142.008 li
471.986 144.495 li
473.677 146.749 li
473.71 146.795 li
473.722 146.85 li
474.489 150.871 li
480.083 158.783 li
480.128 158.847 li
480.128 158.922 li
480.128 164.074 li
482.982 167.498 li
483.142 167.688 li
482.948 167.844 li
476.429 173.02 li
476.053 176.024 li
476.044 176.082 li
476.013 176.13 li
474.486 178.421 li
473.334 183.998 li
473.287 184.217 li
473.068 184.19 li
469.872 183.814 li
464.712 188.017 li
464.693 188.033 li
464.67 188.045 li
462.937 188.939 li
467.029 195.195 li
467.063 195.248 li
467.069 195.309 li
468.458 212.795 li
468.467 212.896 li
468.397 212.976 li
464.799 216.954 li
467.172 218.781 li
467.293 218.873 li
467.262 219.022 li
466.293 223.669 li
468.397 225.964 li
468.458 226.032 li
468.458 226.127 li
468.458 229.376 li
470.939 231.092 li
471.093 231.201 li
471.029 231.379 li
469.834 234.555 li
469.821 234.597 li
469.795 234.628 li
466.066 239.142 li
465.707 242.374 li
471.792 242.374 li
471.876 242.374 li
471.944 242.428 li
474.587 244.503 li
477.42 242.615 li
477.606 242.492 li
477.747 242.666 li
479.336 244.651 li
479.462 244.814 li
479.452 244.826 li
481.533 247.979 li
481.667 248.185 li
481.459 248.319 li
479.1 249.819 li
479.1 252.611 li
481.712 252.813 li
483.889 251.288 li
484.117 251.131 li
484.243 251.375 li
486.942 256.549 li
486.972 256.604 li
486.97 256.67 li
486.75 262.817 li
490.219 264.77 li
490.379 264.859 li
490.337 265.039 li
488.781 271.479 li
490.728 275.801 li
495.121 277.118 li
495.378 277.197 li
495.272 277.447 li
491.916 285.283 li
491.25 295.031 li
494.625 298.618 li
498.277 295.826 li
498.335 295.781 li
498.415 295.778 li
503.9 295.56 li
505.857 292.076 li
506.014 291.799 li
506.242 292.023 li
509.205 294.986 li
513.061 290.49 li
519.119 277.475 li
519.172 277.36 li
519.298 277.338 li
523.349 276.663 li
523.417 276.652 li
523.478 276.678 li
531.35 279.826 li
531.455 279.868 li
531.491 279.975 li
533.204 285.117 li
537.908 282.977 li
538.032 282.921 li
538.147 282.999 li
541.071 285.024 li
541.126 285.063 li
541.155 285.126 li
546.452 297.138 li
553.335 309.896 li
557.667 307.063 li
557.686 307.049 li
557.708 307.041 li
562.208 305.24 li
562.339 305.187 li
562.452 305.276 li
565.889 308.071 li
567.757 306.408 li
567.923 306.263 li
568.085 306.411 li
570.838 308.953 li
573.372 306.42 li
573.445 306.344 li
573.551 306.347 li
579.848 306.574 li
579.929 306.577 li
579.992 306.625 li
583.932 309.689 li
591.677 306.813 li
591.81 306.766 li
591.917 306.855 li
594.498 309.007 li
605.156 304.122 li
605.229 304.086 li
605.307 304.103 li
608.385 304.763 li
611.731 303.51 li
611.315 301.008 li
611.284 300.834 li
611.441 300.752 li
619.687 296.464 li
617.625 290.65 li
617.575 290.513 li
617.676 290.405 li
620.446 287.437 li
619.299 284.572 li
614.025 281.123 li
613.842 281.003 li
613.944 280.809 li
616.718 275.453 li
611.556 271.881 li
611.334 271.726 li
611.511 271.523 li
613.916 268.715 li
613.916 256.896 li
613.916 256.731 li
614.073 256.67 li
624.195 252.824 li
624.591 248.252 li
624.611 248.045 li
624.818 248.03 li
630.82 247.632 li
632.185 243.924 li
631.983 240.074 li
631.974 239.911 li
632.124 239.841 li
635.016 238.492 li
632.836 230.767 li
628.804 227.941 li
628.661 227.843 li
628.708 227.677 li
631.354 218.308 li
627.689 208.527 li
627.641 208.4 li
627.722 208.295 li
629.775 205.625 li
629.882 205.486 li
630.045 205.543 li
637.17 207.984 li
641.717 206.996 li
643.307 204.215 li
643.366 204.113 li
643.484 204.096 li
648.871 203.297 li
649.832 199.842 li
640.867 181.244 li
640.833 181.17 li
640.847 181.092 li
641.756 176.545 li
641.777 176.451 li
641.855 176.394 li
647.865 172.152 li
645.599 167.794 li
645.514 167.631 li
645.649 167.505 li
651.468 162.049 li
651.528 161.992 li
651.609 161.984 li
656.791 161.448 li
659.765 158.123 li
660.292 152.322 li
656.928 149.313 li
656.853 149.244 li
656.847 149.143 li
656.669 145.393 li
654.521 142.174 li
654.409 142.002 li
654.561 141.861 li
657.12 139.473 li
654.359 136.193 li
654.207 136.016 li
654.378 135.859 li
661.107 129.676 li
661.138 129.646 li
661.18 129.631 li
664.206 128.385 li
666.45 125.104 li
662.211 116.276 li
656.909 116.276 li
656.858 116.276 li
656.81 116.256 li
652.628 114.438 li
652.536 114.396 li
652.5 114.302 li
650.317 108.664 li
650.263 108.529 li
650.359 108.42 li
658.846 98.4854 li
658.846 93.6035 li
647.742 85.2744 li
647.742 85.2744 li
cp
ef
660.914 20.2354 mo
666.544 26.9063 li
667.775 25.6748 li
669.311 17.9785 li
671.154 14.3867 li
669.106 11.6162 li
663.986 12.0264 li
660.914 16.6445 li
660.914 20.2354 li
660.914 20.2354 li
cp
ef
747.807 87.3691 mo
746.527 73.2363 li
742.611 71.0176 li
751.879 64.6211 li
750.574 60.3135 li
733.343 58.877 li
731.256 61.6191 li
726.555 62.0098 li
726.036 65.665 li
722.25 65.4043 li
722.25 60.3135 li
726.555 58.877 li
728.254 55.3535 li
727.338 46.0859 li
725.642 45.4336 li
723.552 46.7383 li
723.423 43.3447 li
719.376 44.9102 li
716.635 41.7783 li
717.68 36.6875 li
721.073 39.6895 li
723.03 38.123 li
725.903 41.2559 li
727.599 37.3398 li
727.209 32.6406 li
730.34 30.0303 li
735.823 30.5527 li
744.959 23.6348 li
742.741 21.0234 li
747.31 21.6758 li
747.181 17.2383 li
742.221 18.1523 li
740.783 15.0195 li
734.126 13.7139 li
736.739 10.4512 li
733.343 7.9707 li
736.477 5.75195 li
732.559 0.660156 li
721.465 7.1875 li
720.811 12.5391 li
717.809 16.4551 li
725.251 19.457 li
721.205 21.2852 li
709.195 18.0215 li
695.228 27.2891 li
674.344 38.6455 li
668.73 47.7832 li
669.252 50.5234 li
665.466 51.5674 li
660.116 56.3975 li
663.902 61.0967 li
667.294 60.0527 li
672.386 62.9248 li
671.864 68.0156 li
667.166 68.5371 li
664.031 70.3643 li
657.375 66.1875 li
657.375 74.6719 li
650.586 79.7637 li
647.966 84.8379 li
659.234 93.2891 li
659.333 93.3623 li
659.333 93.4824 li
659.333 98.5742 li
659.333 98.6631 li
659.273 98.7324 li
650.82 108.625 li
652.915 114.032 li
656.957 115.789 li
662.363 115.789 li
662.514 115.789 li
662.582 115.929 li
664.708 120.357 li
668.218 120.885 li
668.336 120.902 li
668.393 121.006 li
670.645 124.991 li
675.352 122.726 li
675.439 122.684 li
675.532 122.713 li
679.947 124.125 li
683.297 121.127 li
683.36 121.07 li
683.444 121.064 li
688.625 120.707 li
692.473 116.683 li
691.768 112.803 li
691.729 112.594 li
691.934 112.528 li
695.81 111.295 li
696.866 107.601 li
696.911 107.443 li
697.074 107.426 li
700.374 107.078 li
701.416 103.953 li
701.458 103.824 li
701.589 103.794 li
707.67 102.363 li
709.254 99.5469 li
709.319 99.4316 li
709.451 99.4229 li
718.544 98.877 li
718.724 98.8672 li
718.787 99.0371 li
720.89 104.822 li
727.217 102.889 li
727.254 102.877 li
727.293 102.878 li
734.208 103.056 li
739.789 87.0381 li
739.881 86.7715 li
740.131 86.9023 li
743.499 88.6748 li
747.807 87.3691 li
747.807 87.3691 li
cp
ef
790.525 159.051 mo
792.558 161.082 li
796.518 157.833 li
794.791 157.426 li
790.525 159.051 li
790.525 159.051 li
cp
ef
773.502 244.75 mo
773.82 246.275 li
775.789 247.545 li
776.741 245.132 li
775.662 243.354 li
773.502 244.75 li
773.502 244.75 li
cp
ef
779.723 241.832 mo
779.406 243.292 li
781.563 244.115 li
782.706 242.846 li
780.611 241.006 li
779.723 241.832 li
779.723 241.832 li
cp
ef
778.389 245.006 mo
777.883 251.035 li
780.232 254.083 li
782.388 253.066 li
781.945 247.101 li
780.232 245.514 li
778.389 245.006 li
778.389 245.006 li
cp
ef
781.753 258.396 mo
781.436 260.618 li
782.453 262.84 li
785.245 261.57 li
785.626 260.112 li
781.753 258.396 li
781.753 258.396 li
cp
ef
785.346 276.04 mo
784.307 278.031 li
785.866 280.283 li
787.773 278.467 li
786.559 276.211 li
785.346 276.04 li
785.346 276.04 li
cp
ef
785.52 287.218 mo
786.559 288.951 li
788.031 288.432 li
788.379 285.656 li
786.472 285.224 li
785.52 287.218 li
785.52 287.218 li
cp
ef
786.818 291.723 mo
785.259 293.368 li
786.472 296.663 li
790.112 295.708 li
788.899 292.329 li
786.818 291.723 li
786.818 291.723 li
cp
ef
784.391 305.414 mo
782.574 307.234 li
782.658 311.046 li
782.746 315.033 li
782.833 316.854 li
784.74 316.854 li
786.298 312.346 li
785.953 307.928 li
784.391 305.414 li
784.391 305.414 li
cp
ef
778.934 320.319 mo
780.838 320.406 li
781.445 322.917 li
780.06 325.085 li
778.241 327.684 li
778.066 330.542 li
777.546 334.095 li
777.201 336.783 li
776.333 336.351 li
775.64 331.672 li
775.468 325.863 li
777.808 323.437 li
779.108 322.311 li
778.934 320.319 li
778.934 320.319 li
cp
ef
772.059 351.325 mo
773 350.91 li
773.374 344.139 li
774.539 342.785 li
774.763 341.016 li
773.525 340.227 li
771.609 341.128 li
770.559 341.956 li
771.498 344.928 li
771.16 348.767 li
772.059 351.325 li
772.059 351.325 li
cp
ef
779.193 344.515 mo
779.833 345.98 li
781.746 345.304 li
781.333 343.273 li
780.282 341.805 li
779.232 342.821 li
779.193 344.515 li
779.193 344.515 li
cp
ef
742.389 145.544 mo
740.865 150.114 li
746.656 156.613 li
747.467 147.271 li
744.319 145.849 li
742.389 145.544 li
742.389 145.544 li
cp
ef
780.574 162.605 mo
782.096 164.941 li
787.885 165.855 li
790.221 164.637 li
788.8 162.199 li
784.535 161.691 li
780.574 162.605 li
780.574 162.605 li
cp
ef
675.417 214.034 mo
678.911 211.73 li
681.261 209.771 li
684.525 208.988 li
683.48 202.332 li
689.224 200.504 li
693.662 196.588 li
697.708 196.457 li
694.707 200.766 li
697.58 203.246 li
701.755 198.546 li
702.8 191.106 li
706.583 189.67 li
709.585 185.754 li
706.455 183.404 li
703.713 186.799 li
700.842 184.057 li
700.059 170.612 li
697.58 162.65 li
698.36 156.775 li
703.191 149.857 li
705.932 149.728 li
707.238 145.812 li
712.849 153.514 li
716.767 152.86 li
717.028 149.988 li
716.113 144.114 li
715.122 139.978 li
711.352 137.852 li
711.251 137.796 li
711.232 137.686 li
710.512 133.916 li
708.085 131.662 li
704.163 132.018 li
703.98 132.035 li
703.913 131.863 li
701.579 125.756 li
698.228 125.052 li
698.132 125.031 li
698.077 124.951 li
692.704 117.144 li
688.91 121.11 li
688.841 121.18 li
688.75 121.186 li
683.559 121.544 li
680.167 124.579 li
680.062 124.672 li
679.93 124.629 li
675.476 123.204 li
670.654 125.527 li
670.449 125.625 li
670.336 125.426 li
668.031 121.349 li
664.963 120.888 li
666.947 125.021 li
667.008 125.148 li
666.929 125.263 li
664.565 128.719 li
664.523 128.778 li
664.456 128.806 li
661.405 130.063 li
654.878 136.06 li
657.639 139.337 li
657.788 139.514 li
657.62 139.671 li
655.041 142.076 li
657.111 145.178 li
657.148 145.232 li
657.15 145.301 li
657.328 149.02 li
660.706 152.043 li
660.798 152.123 li
660.788 152.245 li
660.24 158.246 li
660.234 158.327 li
660.181 158.387 li
657.088 161.842 li
657.027 161.912 li
656.934 161.922 li
651.741 162.459 li
646.116 167.732 li
648.393 172.115 li
648.492 172.304 li
648.318 172.427 li
642.214 176.734 li
641.341 181.108 li
650.185 199.461 li
654.266 196.742 li
654.364 196.676 li
654.476 196.715 li
663.716 199.795 li
663.851 199.84 li
663.879 199.977 li
664.905 205.109 li
664.921 205.195 li
664.879 205.273 li
662.683 209.27 li
664.343 212.592 li
668.013 209.889 li
668.079 209.842 li
668.157 209.842 li
672.878 209.842 li
673.021 209.842 li
673.088 209.964 li
675.417 214.034 li
675.417 214.034 li
cp
ef
682.545 372.319 mo
682.045 387.556 li
684.787 392.254 li
674.083 393.17 li
670.558 400.871 li
680.478 411.052 li
680.739 414.838 li
686.221 409.617 li
695.619 409.746 li
702.407 404.264 li
706.455 396.172 li
708.412 373.979 li
711.153 362.363 li
709.33 348.77 li
706.648 348.009 li
706.501 347.97 li
706.474 347.823 li
705.822 344.571 li
701.362 341.384 li
696.366 345.13 li
699.332 348.343 li
704.056 348.739 li
704.314 348.759 li
704.278 349.014 li
703.205 356.375 li
703.176 356.577 li
702.974 356.583 li
699.621 356.71 li
700.129 361.402 li
700.143 361.549 li
700.023 361.63 li
695.203 364.843 li
695.15 364.877 li
695.085 364.883 li
687.166 365.41 li
685.179 368.014 li
686.718 371.089 li
686.859 371.367 li
686.556 371.435 li
682.545 372.319 li
682.545 372.319 li
cp
ef
678.175 355.897 mo
681.652 361.579 li
680.349 365.759 li
682.472 371.836 li
686.146 371.027 li
684.679 368.096 li
684.612 367.958 li
684.705 367.84 li
686.845 365.028 li
686.913 364.938 li
687.022 364.933 li
694.987 364.402 li
699.629 361.307 li
699.11 356.502 li
699.082 356.243 li
699.343 356.232 li
702.752 356.105 li
703.758 349.202 li
699.197 348.82 li
699.104 348.812 li
699.04 348.744 li
695.827 345.265 li
695.644 345.065 li
695.861 344.905 li
701.213 340.889 li
701.357 340.782 li
701.5 340.886 li
706.184 344.231 li
706.263 344.287 li
706.283 344.383 li
706.923 347.582 li
709.313 348.259 li
710.501 332.862 li
708.805 328.034 li
701.233 312.633 li
698.753 309.63 li
696.535 298.795 li
695.023 295.191 li
694.493 294.607 li
688.833 292.268 li
686.873 289.92 li
688.572 286.524 li
684.396 284.828 li
675.65 283.261 li
668.862 286.785 li
666.511 297.099 li
663.641 293.441 li
660.377 297.621 li
657.636 289.658 li
651.893 293.181 li
647.062 292.399 li
647.323 287.83 li
653.589 272.167 li
655.156 256.504 li
656.982 248.932 li
655.417 242.666 li
657.504 237.055 li
656.591 231.05 li
669.775 218.127 li
673.951 218.908 li
674.344 217.343 li
673.17 215.516 li
675.009 214.303 li
672.738 210.328 li
668.236 210.328 li
664.399 213.155 li
664.168 213.325 li
664.04 213.068 li
662.192 209.371 li
662.132 209.258 li
662.195 209.146 li
664.411 205.119 li
663.427 200.209 li
654.437 197.212 li
650.297 199.971 li
649.297 203.58 li
649.252 203.732 li
649.098 203.756 li
643.672 204.559 li
642.088 207.332 li
642.035 207.426 li
641.928 207.447 li
637.204 208.475 li
637.139 208.488 li
637.075 208.467 li
630.053 206.061 li
628.189 208.482 li
631.837 218.212 li
631.865 218.288 li
631.845 218.362 li
629.222 227.644 li
633.185 230.418 li
633.258 230.469 li
633.281 230.55 li
635.539 238.56 li
635.595 238.757 li
635.41 238.844 li
632.477 240.211 li
632.673 243.949 li
632.676 244 li
632.66 244.045 li
631.222 247.946 li
631.168 248.095 li
631.011 248.106 li
625.06 248.502 li
624.667 253.019 li
624.653 253.17 li
624.509 253.224 li
614.402 257.065 li
614.402 268.805 li
614.402 268.895 li
614.342 268.963 li
612.053 271.633 li
617.17 275.175 li
617.347 275.299 li
617.25 275.486 li
614.474 280.837 li
619.628 284.207 li
619.693 284.249 li
619.721 284.319 li
620.954 287.4 li
621.01 287.544 li
620.906 287.656 li
618.131 290.627 li
620.123 296.239 li
628.309 291.981 li
628.472 291.895 li
628.601 292.031 li
631.3 294.955 li
631.41 295.073 li
631.339 295.223 li
627.321 303.935 li
627.764 308.142 li
627.779 308.299 li
627.644 308.377 li
624.625 310.102 li
624.827 313.545 li
631.57 313.545 li
631.699 313.545 li
631.772 313.651 li
634.845 318.261 li
638.218 318.05 li
643.72 312.986 li
644.605 309.234 li
644.647 309.046 li
644.84 309.046 li
648.963 309.046 li
650.247 306.481 li
650.326 306.324 li
650.5 306.35 li
653.423 306.799 li
653.572 306.821 li
653.617 306.968 li
656.316 315.289 li
656.364 315.43 li
656.257 315.533 li
654.459 317.334 li
654.404 317.387 li
654.325 317.401 li
647.671 318.474 li
649.334 322.005 li
649.402 322.153 li
649.292 322.274 li
646.641 325.145 li
645.978 328.899 li
645.966 328.964 li
645.924 329.015 li
642.006 333.587 li
643.68 335.68 li
643.795 335.825 li
643.683 335.974 li
641.035 339.507 li
641.035 343.776 li
648.098 347.307 li
648.152 347.335 li
648.185 347.383 li
653.87 355.255 li
657.425 351.882 li
657.499 351.814 li
657.597 351.817 li
665.225 351.949 li
665.309 351.952 li
665.374 352.002 li
668.75 354.729 li
678.93 351.292 li
679.349 351.151 li
679.242 351.581 li
678.175 355.897 li
678.175 355.897 li
cp
ef
649.294 362.981 mo
653.199 369.151 li
657.375 372.806 li
666.25 368.5 li
667.423 364.843 li
674.083 357.403 li
677.714 355.737 li
678.667 351.896 li
668.778 355.232 li
668.651 355.277 li
668.55 355.193 li
665.135 352.435 li
657.687 352.303 li
654.024 355.78 li
649.294 362.981 li
649.294 362.981 li
cp
ef
578.252 339.785 mo
587.147 335.213 li
593.936 337.561 li
602.159 336.258 li
614.168 348.135 li
629.048 363.537 li
634.923 361.189 li
638.578 362.886 li
641.189 361.579 li
646.149 363.146 li
648.834 362.796 li
653.542 355.628 li
647.829 347.714 li
640.684 344.145 li
640.549 344.074 li
640.549 343.925 li
640.549 339.429 li
640.549 339.347 li
640.597 339.282 li
643.183 335.834 li
641.501 333.73 li
641.377 333.573 li
641.506 333.421 li
645.511 328.751 li
646.174 324.993 li
646.189 324.92 li
646.236 324.869 li
648.823 322.063 li
647.095 318.39 li
646.956 318.098 li
647.275 318.047 li
654.167 316.935 li
655.808 315.295 li
653.202 307.26 li
650.601 306.858 li
649.332 309.396 li
649.264 309.534 li
649.112 309.534 li
645.035 309.534 li
644.177 313.169 li
644.161 313.242 li
644.105 313.292 li
638.482 318.466 li
638.417 318.521 li
638.333 318.527 li
634.733 318.755 li
634.595 318.764 li
634.516 318.646 li
631.441 314.031 li
624.599 314.031 li
624.369 314.031 li
624.355 313.801 li
624.13 309.979 li
624.122 309.826 li
624.251 309.754 li
627.265 308.032 li
626.83 303.917 li
626.824 303.85 li
626.852 303.791 li
630.832 295.166 li
628.369 292.498 li
611.821 301.104 li
612.242 303.628 li
612.276 303.825 li
612.087 303.895 li
608.49 305.243 li
608.422 305.269 li
608.355 305.254 li
605.282 304.597 li
594.562 309.509 li
594.421 309.574 li
594.306 309.476 li
591.714 307.315 li
583.974 310.191 li
583.844 310.239 li
583.741 310.155 li
579.752 307.055 li
573.641 306.838 li
571.015 309.462 li
570.852 309.627 li
570.681 309.467 li
567.917 306.92 li
566.058 308.571 li
565.904 308.709 li
565.744 308.577 li
562.255 305.746 li
557.914 307.481 li
553.689 310.248 li
559.029 313.807 li
559.236 313.946 li
559.093 314.151 li
557.5 316.379 li
559.963 318.842 li
564.42 316.365 li
564.631 316.247 li
564.752 316.458 li
566.884 320.232 li
570.302 319.421 li
570.577 319.354 li
570.599 319.64 li
571.102 326.352 li
574.584 328.344 li
574.815 328.476 li
574.664 328.694 li
572.706 331.467 li
578.252 339.785 li
578.252 339.785 li
cp
ef
695.023 295.191 mo
694.838 294.748 li
702.539 298.927 li
705.019 305.451 li
708.805 310.281 li
713.372 317.592 li
716.635 322.942 li
720.421 325.815 li
721.595 329.208 li
722.64 332.211 li
727.338 334.43 li
727.993 339.128 li
732.821 345.265 li
733.214 339.912 li
732.559 335.864 li
736.345 335.604 li
737.781 334.952 li
741.305 336.78 li
738.435 330.775 li
734.255 330.775 li
729.818 328.818 li
724.729 325.161 li
721.465 316.809 li
719.637 311.455 li
723.552 309.236 li
730.863 308.847 li
714.417 297.75 li
702.8 287.308 li
697.447 277.256 li
690.136 272.167 li
686.744 267.858 li
684.396 268.903 li
683.874 271.384 li
688.179 274.386 li
690.53 277.91 li
689.224 279.606 li
687.134 279.084 li
686.483 282.087 li
690.659 285.218 li
694.838 294.748 li
694.493 294.607 li
695.023 295.191 li
695.023 295.191 li
cp
ef
70.5913 237.462 mo
71.6812 239.534 li
71.4937 244.343 li
74.8159 246.118 li
74.8325 246.126 li
77.2349 247.671 li
79.4585 246.132 li
79.5269 246.084 li
79.6099 246.09 li
82.98 246.267 li
86.5171 244.106 li
86.9019 241.413 li
86.9351 241.178 li
87.1733 241.208 li
91.1274 241.736 li
93.2144 241.082 li
93.4106 241.023 li
93.5034 241.206 li
95.062 244.326 li
98.5757 245.578 li
99.355 244.885 li
99.5933 240.964 li
97.3345 239.265 li
97.2437 239.197 li
97.2358 239.085 li
97.0737 236.555 li
95.6382 235.198 li
93.4487 233.595 li
93.3413 233.516 li
93.3491 233.384 li
93.5952 229.53 li
89.2192 226.141 li
89.1431 226.079 li
89.1284 225.983 li
88.7261 223.402 li
87.0659 222.61 li
86.9272 222.544 li
86.9272 222.392 li
86.9272 220.761 li
86.2632 219.577 li
83.7788 219.427 li
83.3394 220.455 li
83.2876 220.577 li
83.1558 220.598 li
82.1421 220.768 li
82.0024 220.792 li
81.9136 220.681 li
81.2261 219.841 li
80.1655 219.841 li
78.5425 221.312 li
78.5425 224.085 li
78.5425 224.162 li
78.4956 224.227 li
77.5366 225.558 li
78.3599 226.177 li
78.4507 226.244 li
78.4565 226.356 li
78.5425 227.711 li
78.5581 227.98 li
78.2886 227.969 li
76.4907 227.891 li
75.7671 229.123 li
76.2563 231.572 li
76.2817 231.699 li
76.1919 231.791 li
70.5913 237.462 li
70.5913 237.462 li
cp
ef
62.0796 211.086 mo
60.1948 213.427 li
59.2817 214.863 li
59.6733 216.82 li
61.6304 217.734 li
61.3696 220.737 li
66.3296 223.87 li
66.4604 229.612 li
70.354 237.013 li
75.7554 231.541 li
75.272 229.129 li
75.2554 229.039 li
75.3022 228.958 li
76.147 227.517 li
76.2212 227.391 li
76.3667 227.398 li
78.0396 227.472 li
77.98 226.497 li
77.0552 225.804 li
76.8657 225.66 li
77.0054 225.467 li
78.0562 224.008 li
78.0562 221.303 li
74.4604 217.618 li
70.8989 216.871 li
70.854 216.861 li
70.814 216.836 li
68.2788 215.143 li
68.2056 215.094 li
68.1812 215.009 li
67.5483 212.869 li
66.2622 212.654 li
64.9839 213.374 li
64.8374 213.457 li
64.7075 213.347 li
62.0796 211.086 li
62.0796 211.086 li
cp
ef
65.4878 198.399 mo
63.3276 199.33 li
62.2837 201.418 li
60.7163 201.811 li
60.5854 204.42 li
62.8062 205.727 li
62.2651 210.605 li
64.894 212.867 li
66.0972 212.188 li
66.1724 212.147 li
66.2563 212.161 li
67.7769 212.415 li
67.9272 212.44 li
67.9712 212.587 li
68.6226 214.788 li
71.0435 216.406 li
74.6313 217.157 li
74.7026 217.173 li
74.7554 217.227 li
78.3101 220.869 li
79.9116 219.417 li
79.9819 219.354 li
80.0737 219.354 li
81.3413 219.354 li
81.4546 219.354 li
81.5288 219.443 li
82.2007 220.266 li
82.9429 220.142 li
83.3452 219.205 li
81.7388 217.032 li
81.6948 216.975 li
81.689 216.904 li
81.5337 214.783 li
79.8315 214.239 li
79.729 214.207 li
79.6841 214.11 li
79.1772 213.011 li
79.1548 212.96 li
79.1548 212.908 li
79.1548 211.128 li
78.3599 210.093 li
78.3101 210.026 li
78.3101 209.945 li
78.3101 206.131 li
72.5991 198.668 li
65.4878 198.399 li
65.4878 198.399 li
cp
ef
73.5757 180.96 mo
69.9849 180.664 li
67.3745 178.184 li
67.6353 175.834 li
65.1558 175.312 li
63.7183 178.836 li
58.4976 183.273 li
58.8901 186.146 li
61.6304 186.016 li
63.7183 187.712 li
64.5024 191.367 li
66.8521 191.106 li
69.5933 191.628 li
69.5933 193.455 li
66.1851 197.939 li
72.6479 198.185 li
80.6938 192.295 li
80.0581 191.253 li
80.021 191.193 li
80.021 191.127 li
80.021 189.826 li
80.021 189.725 li
80.0933 189.654 li
81.0503 188.695 li
81.0718 188.676 li
81.0991 188.659 li
82.4663 187.853 li
82.3101 186.77 li
80.6841 186.653 li
79.7993 187.349 li
79.6694 187.449 li
79.5288 187.369 li
78.0913 186.547 li
78.0298 186.512 li
77.9956 186.448 li
77.106 184.737 li
77.0815 184.691 li
77.0796 184.635 li
77.0103 183.061 li
77.0093 182.992 li
77.0444 182.93 li
77.8755 181.489 li
74.022 181.24 li
73.9507 181.236 li
73.8931 181.193 li
73.5757 180.96 li
73.5757 180.96 li
cp
ef
84.9292 158.862 mo
84.3433 159.909 li
80.0347 162.389 li
77.8159 165.914 li
75.4673 170.743 li
75.2065 174.658 li
75.8589 177.009 li
74.1616 179.097 li
74.0562 180.711 li
74.1226 180.76 li
78.2358 181.025 li
79.894 180.296 li
79.9409 180.275 li
79.9956 180.275 li
83.2524 180.343 li
85.0288 178.699 li
85.105 178.628 li
85.2056 178.634 li
87.6011 178.771 li
87.7729 178.78 li
87.8198 178.945 li
88.8286 182.41 li
89.7241 181.884 li
89.7983 181.84 li
89.8823 181.852 li
91.6626 182.126 li
91.7651 182.143 li
91.8237 182.228 li
92.7017 183.48 li
97.3608 183.021 li
100.144 181.23 li
103.231 176.803 li
103.35 175.734 li
101.226 173.145 li
101.182 173.091 li
101.172 173.023 li
100.853 170.667 li
95.6226 169.74 li
95.5679 169.73 li
95.521 169.696 li
92.9897 167.848 li
92.9429 167.814 li
92.9175 167.766 li
89.564 161.47 li
89.5581 161.459 li
89.5542 161.45 li
88.4937 158.93 li
87.4878 158.397 li
85.4585 158.922 li
85.4077 158.935 li
85.3618 158.928 li
84.9292 158.862 li
84.9292 158.862 li
cp
ef
73.0679 198.479 mo
78.7456 205.902 li
78.7964 205.969 li
78.7964 206.051 li
78.7964 209.863 li
79.5894 210.898 li
79.6401 210.965 li
79.6401 211.046 li
79.6401 212.856 li
80.0815 213.812 li
81.8042 214.36 li
84.439 214.489 li
85.2554 213.046 li
85.2788 213.004 li
85.314 212.977 li
90.3032 208.932 li
90.8218 204.842 li
88.6558 202.873 li
88.6206 202.84 li
88.5991 202.795 li
87.5044 200.398 li
87.48 200.346 li
87.4819 200.291 li
87.6147 196.13 li
81.0376 192.645 li
73.0679 198.479 li
73.0679 198.479 li
cp
ef
90.4976 209.398 mo
85.6558 213.324 li
84.7866 214.857 li
84.7144 214.988 li
84.5659 214.98 li
82.0269 214.857 li
82.1694 216.801 li
83.7495 218.938 li
86.4253 219.101 li
86.5581 219.108 li
86.6226 219.225 li
87.3823 220.578 li
87.4146 220.635 li
87.4146 220.697 li
87.4146 222.238 li
89.0503 223.018 li
89.1655 223.072 li
89.1851 223.201 li
89.5933 225.814 li
93.8765 229.138 li
95.9565 228.177 li
96.5093 226.888 li
96.1831 224.805 li
95.5806 223.534 li
95.5269 223.421 li
95.5894 223.311 li
96.479 221.736 li
96.519 221.668 li
96.5894 221.636 li
100.25 219.94 li
102.406 217.981 li
102.47 215.595 li
101.957 213.994 li
100.029 212.465 li
99.9771 212.422 li
99.9526 212.359 li
99.3218 210.653 li
97.4858 210.469 li
94.603 211.812 li
94.5425 211.838 li
94.4761 211.832 li
92.4233 211.626 li
92.3237 211.616 li
92.2593 211.539 li
90.4976 209.398 li
90.4976 209.398 li
cp
ef
102.896 217.722 mo
102.886 218.099 li
102.884 218.202 li
102.808 218.271 li
100.55 220.325 li
100.522 220.35 li
100.488 220.366 li
96.8628 222.044 li
96.0737 223.438 li
96.6362 224.627 li
96.6499 224.656 li
96.6558 224.694 li
96.9985 226.885 li
97.0093 226.952 li
96.9819 227.017 li
96.3667 228.452 li
96.3296 228.539 li
96.2446 228.578 li
94.0796 229.578 li
93.8433 233.28 li
95.9331 234.811 li
95.9399 234.816 li
95.9556 234.83 li
97.4761 236.271 li
97.5464 236.336 li
97.5522 236.431 li
97.7144 238.944 li
99.9058 240.591 li
103.115 240.034 li
109.532 236.724 li
110.342 235.603 li
110.41 230.271 li
110.41 230.252 li
110.412 230.235 li
111.029 226.606 li
111.041 226.542 li
111.082 226.492 li
113.889 223.162 li
111.635 220.665 li
110.302 221.514 li
110.273 221.532 li
110.242 221.542 li
109.078 221.885 li
108.978 221.912 li
108.888 221.861 li
107.109 220.834 li
107.05 220.8 li
107.017 220.74 li
105.44 217.849 li
102.896 217.722 li
102.896 217.722 li
cp
ef
88.1001 196.129 mo
87.9692 200.25 li
89.019 202.545 li
91.2417 204.566 li
91.3354 204.652 li
91.3179 204.777 li
90.7847 208.984 li
92.5718 211.154 li
94.4585 211.343 li
97.3413 210.001 li
97.3999 209.974 li
97.4683 209.98 li
99.2935 210.163 li
99.4624 209.09 li
99.4722 209.029 li
99.5054 208.982 li
100.806 207.203 li
100.814 207.193 li
100.824 207.182 li
103.429 204.377 li
103.429 202.625 li
103.429 202.523 li
103.5 202.453 li
105.06 200.891 li
104.742 197.703 li
102.859 196.534 li
102.798 196.497 li
102.767 196.434 li
101.949 194.73 li
97.9702 194.923 li
97.0142 196.072 li
96.8794 196.233 li
96.7007 196.125 li
93.2397 194.02 li
92.271 193.717 li
88.1001 196.129 li
88.1001 196.129 li
cp
ef
103.783 204.709 mo
101.191 207.5 li
99.9321 209.225 li
99.7456 210.4 li
100.384 212.127 li
102.317 213.658 li
102.375 213.704 li
102.397 213.774 li
102.945 215.485 li
102.957 215.525 li
102.956 215.565 li
102.911 217.236 li
105.599 217.371 li
105.736 217.377 li
105.8 217.497 li
107.41 220.449 li
109.041 221.389 li
110.072 221.085 li
111.548 220.146 li
111.722 220.035 li
111.859 220.188 li
114.35 222.949 li
116.025 223.528 li
117.535 223.466 li
122.535 219.006 li
122.544 218.998 li
122.558 218.988 li
125.21 217.112 li
124.591 215.438 li
124.591 215.438 li
123.572 212.654 li
118.449 204.025 li
115.324 203.898 li
114.235 204.859 li
114.094 204.984 li
113.94 204.881 li
112.707 204.059 li
112.703 204.055 li
111.486 203.203 li
110.875 203.703 li
110.832 203.736 li
110.779 203.75 li
108.589 204.297 li
108.508 204.318 li
108.431 204.283 li
107.208 203.734 li
106.37 204.514 li
106.303 204.574 li
106.216 204.578 li
103.783 204.709 li
103.783 204.709 li
cp
ef
101.977 194.242 mo
102.72 193.314 li
103.906 191.6 li
103.906 187.574 li
102.048 186.549 li
101.996 186.52 li
101.961 186.467 li
100.523 184.208 li
100.496 184.163 li
100.488 184.113 li
100.134 181.814 li
97.5747 183.461 li
97.5269 183.492 li
97.4683 183.498 li
92.6069 183.977 li
92.4673 183.99 li
92.3862 183.874 li
91.4868 182.592 li
89.8931 182.346 li
88.8062 182.986 li
88.5386 183.145 li
88.4497 182.845 li
87.4038 179.246 li
85.2817 179.125 li
83.5093 180.765 li
83.437 180.832 li
83.3394 180.83 li
80.0405 180.762 li
78.4497 181.463 li
77.4995 183.11 li
77.562 184.56 li
78.395 186.16 li
79.6284 186.865 li
80.4565 186.213 li
80.5308 186.154 li
80.6245 186.162 li
82.5405 186.299 li
82.7368 186.313 li
82.7632 186.508 li
82.9683 187.944 li
82.9927 188.105 li
82.8521 188.188 li
81.3745 189.061 li
80.5083 189.928 li
80.5083 191.059 li
81.189 192.175 li
87.8569 195.708 li
92.1206 193.244 li
92.2124 193.19 li
92.314 193.222 li
93.4097 193.563 li
93.4351 193.571 li
93.4624 193.589 li
96.7739 195.602 li
97.6675 194.53 li
97.7358 194.447 li
97.8433 194.443 li
101.977 194.242 li
101.977 194.242 li
cp
ef
100.573 181.467 mo
100.961 183.992 li
102.336 186.152 li
104.267 187.219 li
104.394 187.287 li
104.394 187.432 li
104.394 191.674 li
104.394 191.75 li
104.35 191.813 li
103.119 193.592 li
103.107 193.605 li
102.381 194.512 li
103.175 196.158 li
105.1 197.354 li
105.201 197.416 li
105.212 197.536 li
105.555 200.959 li
105.566 201.074 li
105.486 201.154 li
103.914 202.727 li
103.914 204.217 li
106.103 204.098 li
106.996 203.27 li
107.115 203.158 li
107.261 203.225 li
108.553 203.807 li
110.607 203.293 li
111.32 202.711 li
111.461 202.594 li
111.612 202.699 li
112.976 203.654 li
112.976 203.654 li
114.054 204.373 li
115.078 203.469 li
115.15 203.404 li
115.248 203.408 li
118.462 203.539 li
119.673 201.693 li
120.5 199.342 li
119.727 198.628 li
119.71 198.613 li
119.699 198.6 li
118.262 196.752 li
118.237 196.719 li
118.222 196.677 li
117.06 193.119 li
117.035 193.043 li
117.06 192.969 li
117.88 190.437 li
117.896 190.389 li
117.927 190.352 li
120.597 187.272 li
120.609 187.26 li
120.617 187.252 li
122.269 185.732 li
122.64 183.871 li
120.533 181.379 li
115.514 181.446 li
115.441 181.447 li
115.38 181.408 li
109.836 177.849 li
109.717 177.771 li
109.726 177.631 li
109.852 175.531 li
109.195 175.202 li
108.634 175.764 li
108.578 175.82 li
108.496 175.832 li
103.755 176.49 li
103.707 176.918 li
103.7 176.98 li
103.666 177.03 li
100.573 181.467 li
100.573 181.467 li
cp
ef
122.285 186.379 mo
120.953 187.604 li
118.327 190.633 li
117.546 193.042 li
118.671 196.485 li
120.072 198.286 li
120.946 199.092 li
121.062 199.2 li
121.01 199.352 li
120.121 201.883 li
120.111 201.914 li
120.095 201.936 li
118.877 203.795 li
123.876 212.216 li
127.362 210.131 li
127.417 210.099 li
127.48 210.097 li
131.902 209.949 li
136.763 207.018 li
135.747 204.172 li
130.988 198.074 li
128.634 197.044 li
128.586 197.023 li
128.551 196.986 li
126.744 195.027 li
126.607 194.879 li
126.728 194.717 li
128.054 192.949 li
128.612 190.719 li
127.507 189.615 li
125.118 191.584 li
124.943 191.729 li
124.787 191.564 li
122.525 189.152 li
122.466 189.089 li
122.46 189.002 li
122.285 186.379 li
122.285 186.379 li
cp
ef
128.732 190.151 mo
129.054 190.472 li
129.151 190.568 li
129.117 190.703 li
128.515 193.113 li
128.501 193.16 li
128.472 193.2 li
127.238 194.847 li
128.875 196.62 li
131.238 197.654 li
131.295 197.678 li
131.332 197.728 li
136.154 203.904 li
136.179 203.938 li
136.192 203.973 li
137.216 206.844 li
138.786 206.531 li
139.925 204.891 li
139.992 204.795 li
140.109 204.787 li
143.025 204.563 li
143.13 204.555 li
143.208 204.629 li
144.349 205.701 li
146.176 204.656 li
146.707 198.314 li
143.833 196.734 li
143.714 196.668 li
143.707 196.533 li
143.562 193.922 li
142.233 192.727 li
140.107 193.436 li
140.009 193.469 li
139.917 193.42 li
132.9 189.688 li
128.732 190.151 li
128.732 190.151 li
cp
ef
135.867 190.715 mo
140.055 192.942 li
142.214 192.222 li
142.349 192.177 li
142.454 192.271 li
143.96 193.627 li
144.035 193.694 li
144.041 193.795 li
144.183 196.372 li
147.08 197.965 li
147.218 198.041 li
147.205 198.197 li
146.671 204.564 li
155.308 204.637 li
156.37 203.93 li
156.433 203.887 li
156.51 203.889 li
159.351 203.965 li
159.519 203.969 li
159.576 204.125 li
160.363 206.346 li
162.658 207.35 li
162.702 207.369 li
162.734 207.402 li
164.693 209.395 li
167.883 206.145 li
167.957 206.07 li
168.06 206.072 li
175.808 206.219 li
175.951 201.336 li
175.954 201.246 li
176.014 201.178 li
177.515 199.541 li
175.818 197.844 li
171.732 198.865 li
171.637 198.89 li
171.551 198.839 li
165.373 195.223 li
165.315 195.188 li
165.283 195.129 li
161.547 188.257 li
155.929 184.855 li
147.333 184.411 li
144.388 186.473 li
144.332 186.514 li
144.261 186.518 li
140.921 186.662 li
139.934 188.213 li
139.904 188.26 li
139.855 188.29 li
135.867 190.715 li
135.867 190.715 li
cp
ef
122.969 183.507 mo
126.662 181.836 li
126.153 180.105 li
126.136 180.051 li
126.147 179.995 li
127.283 173.741 li
127.323 173.527 li
127.539 173.541 li
130.728 173.762 li
134.771 169.828 li
134.242 165.16 li
130.292 165.185 li
130.266 165.44 li
129.912 165.125 li
125.557 161.246 li
122.95 161.404 li
122.855 161.41 li
122.783 161.35 li
119.664 158.801 li
119.602 158.75 li
119.582 158.669 li
119.029 156.375 li
116.707 154.722 li
115.855 155.377 li
115.462 157.505 li
115.423 157.723 li
115.204 157.704 li
109.46 157.211 li
109.381 157.205 li
109.32 157.15 li
107.394 155.463 li
101.789 153.997 li
101.744 153.985 li
101.707 153.959 li
98.7534 151.821 li
98.7397 151.812 li
98.7241 151.796 li
97.1636 150.23 li
95.6499 151.744 li
94.7632 155.441 li
94.7534 155.483 li
94.731 155.518 li
93.0718 158.079 li
93.0161 158.166 li
92.9155 158.186 li
89.0229 158.938 li
89.9985 161.254 li
93.3198 167.489 li
95.7603 169.27 li
101.112 170.219 li
101.288 170.25 li
101.311 170.426 li
101.644 172.891 li
103.79 175.506 li
103.856 175.586 li
103.845 175.686 li
103.811 175.991 li
108.347 175.361 li
108.974 174.734 li
109.098 174.611 li
109.255 174.689 li
110.212 175.169 li
110.356 175.24 li
110.347 175.4 li
110.218 177.518 li
115.582 180.96 li
120.641 180.893 li
120.756 180.891 li
120.83 180.979 li
122.969 183.507 li
122.969 183.507 li
cp
ef
146.882 184.137 mo
143.727 181.123 li
143.623 181.023 li
143.662 180.883 li
144.878 176.455 li
142.534 173.578 li
140.496 173.686 li
140.417 173.689 li
140.353 173.647 li
135.057 170.227 li
130.99 174.186 li
130.911 174.262 li
130.804 174.254 li
127.722 174.041 li
126.634 180.023 li
127.187 181.902 li
127.247 182.105 li
127.054 182.191 li
123.117 183.973 li
122.736 185.874 li
122.94 188.884 li
124.984 191.065 li
127.372 189.1 li
127.542 188.96 li
127.697 189.115 li
128.292 189.712 li
132.923 189.197 li
132.999 189.188 li
133.063 189.224 li
135.369 190.449 li
139.555 187.905 li
140.58 186.295 li
140.649 186.188 li
140.774 186.182 li
144.169 186.035 li
146.882 184.137 li
146.882 184.137 li
cp
ef
141.003 277.557 mo
140.864 280.52 li
142.429 284.306 li
144.257 283.915 li
145.562 282.738 li
148.304 284.044 li
148.173 285.873 li
147.39 287.569 li
148.304 288.613 li
150.914 289.526 li
151.958 293.181 li
153.002 297.75 li
151.828 300.623 li
153.002 302.971 li
156.005 301.146 li
157.31 301.536 li
158.224 303.493 li
158.876 306.889 li
160.833 308.324 li
163.185 306.757 li
165.404 306.889 li
169.58 308.715 li
169.449 310.672 li
170.363 312.239 li
172.452 312.633 li
174.148 310.804 li
175.976 312.633 li
178.326 314.067 li
177.803 317.722 li
178.326 319.811 li
180.675 322.42 li
182.632 323.074 li
184.591 321.897 li
186.158 322.42 li
187.333 324.771 li
192.162 326.338 li
194.25 324.771 li
196.339 321.769 li
192.646 313.686 li
192.315 313.461 li
192.25 313.413 li
192.222 313.334 li
191.415 310.913 li
191.361 310.751 li
191.496 310.646 li
193.501 309.077 li
193.986 307.625 li
192.995 305.477 li
187.82 303.893 li
185.412 304.529 li
184.164 307.468 li
184.093 307.63 li
183.916 307.613 li
180.792 307.311 li
180.705 307.302 li
180.644 307.24 li
177.798 304.395 li
172.536 303.192 li
172.426 303.168 li
172.375 303.066 li
171.232 300.856 li
171.154 300.704 li
171.271 300.581 li
173.324 298.388 li
172.035 297.028 li
171.961 296.952 li
171.966 296.849 li
172.042 295.478 li
172.052 295.307 li
172.216 295.259 li
174.11 294.697 li
174.312 291.481 li
171.605 291.616 li
170.288 292.495 li
169.958 292.714 li
169.912 292.321 li
169.455 288.513 li
169.432 288.324 li
169.608 288.257 li
170.833 287.779 li
170.971 285.521 li
169.744 284.151 li
169.679 284.078 li
169.682 283.982 li
169.833 278.657 li
168.355 276.591 li
168.31 276.525 li
168.31 276.45 li
168.31 269.342 li
166.884 266.19 li
166.851 266.114 li
166.87 266.036 li
167.527 263.188 li
165.644 261.067 li
165.565 261.399 li
165.562 261.413 li
164.589 264.629 li
164.583 264.651 li
164.572 264.674 li
163.824 266.092 li
163.791 266.156 li
163.726 266.193 li
158.179 269.3 li
156.792 271.855 li
156.745 271.942 li
156.651 271.971 li
152.837 273.167 li
152.818 273.172 li
152.8 273.175 li
150.849 273.465 li
146.94 276.857 li
146.88 276.91 li
146.8 276.916 li
141.152 277.357 li
141.003 277.557 li
141.003 277.557 li
cp
ef
113.57 275.276 mo
116.062 277.649 li
115.8 280.258 li
115.149 282.348 li
116.583 284.96 li
119.456 283.654 li
120.891 280.78 li
122.589 278.955 li
126.636 279.738 li
128.855 277.91 li
130.42 277.778 li
131.595 278.694 li
135.642 278.433 li
138.644 277.649 li
140.662 277.203 li
140.784 277.04 li
140.854 275.268 li
140.64 273.773 li
138.655 270.906 li
138.605 270.833 li
138.611 270.746 li
138.904 267.252 li
136.646 264.412 li
136.613 264.37 li
136.599 264.32 li
135.778 261.104 li
135.772 261.084 li
135.771 261.062 li
135.631 259.203 li
133.768 258.582 li
133.744 258.573 li
133.729 258.565 li
128.195 255.574 li
128.07 255.507 li
128.067 255.366 li
127.997 252.35 li
122.584 251.412 li
122.541 251.403 li
122.503 251.384 li
116.744 248.017 li
116.624 247.946 li
116.624 247.809 li
116.624 245.927 li
115.82 244.522 li
113.029 244.233 li
112.911 244.222 li
112.849 244.124 li
108.751 237.673 li
103.302 240.483 li
103.27 240.501 li
103.234 240.506 li
100.076 241.054 li
99.8335 245.011 li
99.8276 245.112 li
99.7524 245.177 li
98.8804 245.958 li
99.1323 249.106 li
100.771 251.249 li
103.22 251.763 li
103.289 251.777 li
103.339 251.827 li
107.748 256.103 li
107.822 256.172 li
107.822 256.276 li
107.822 259.48 li
107.822 259.57 li
107.759 259.641 li
105.812 261.849 li
105.697 263.93 li
107.269 264.042 li
109.085 263.264 li
109.41 263.123 li
109.423 263.48 li
109.554 267.014 li
110.66 268.611 li
113.235 269.125 li
113.425 269.165 li
113.43 269.358 li
113.57 275.276 li
113.57 275.276 li
cp
ef
136.119 259.181 mo
136.253 261.006 li
137.058 264.151 li
139.343 267.024 li
139.404 267.104 li
139.396 267.195 li
139.105 270.701 li
141.074 273.546 li
141.107 273.594 li
141.114 273.649 li
141.338 275.22 li
141.341 275.239 li
141.339 275.265 li
141.277 276.86 li
146.685 276.438 li
150.587 273.052 li
150.64 273.004 li
150.71 272.992 li
152.71 272.697 li
156.414 271.535 li
157.787 269.005 li
157.82 268.942 li
157.88 268.909 li
163.427 265.803 li
164.13 264.469 li
165.093 261.281 li
165.441 259.82 li
162.677 255.824 li
161.496 254.771 li
160.23 255.636 li
160.189 255.664 li
160.142 255.675 li
159.019 255.897 li
158.864 255.931 li
158.773 255.799 li
156.523 252.566 li
155.843 253.074 li
153.015 256.052 li
152.992 256.077 li
152.962 256.094 li
151.318 257.065 li
151.232 257.116 li
151.134 257.091 li
149.041 256.568 li
148.985 256.555 li
148.94 256.515 li
145.736 253.684 li
143.573 252.097 li
141.574 252.311 li
138.244 252.746 li
136.923 254.622 li
136.865 255.442 li
137.917 255.967 li
138.078 256.046 li
138.046 256.223 li
137.673 258.394 li
137.651 258.523 li
137.529 258.576 li
136.119 259.181 li
136.119 259.181 li
cp
ef
128.48 252.246 mo
128.548 255.215 li
133.943 258.13 li
135.851 258.765 li
137.216 258.181 li
137.537 256.318 li
136.502 255.802 li
136.357 255.729 li
136.369 255.568 li
136.443 254.521 li
136.447 254.453 li
136.487 254.397 li
137.908 252.378 li
137.97 252.291 li
138.076 252.277 li
141.515 251.83 li
141.521 251.827 li
143.615 251.605 li
143.708 251.595 li
143.785 251.65 li
146.027 253.297 li
146.033 253.299 li
146.044 253.311 li
149.214 256.11 li
151.156 256.597 li
152.688 255.692 li
155.506 252.727 li
155.519 252.712 li
155.536 252.698 li
156.231 252.176 li
154.147 249.605 li
154.019 249.446 li
154.151 249.294 li
155.055 248.249 li
154.859 246.017 li
150.654 245.73 li
150.539 245.725 li
150.472 245.629 li
148.072 242.211 li
145.05 242.067 li
144.896 242.06 li
144.836 241.916 li
143.728 239.184 li
140.427 235.249 li
139.979 235.799 li
139.392 238.731 li
139.382 238.779 li
139.355 238.818 li
138.609 239.939 li
138.505 240.097 li
138.326 240.034 li
133.264 238.276 li
133.264 243.545 li
133.264 243.638 li
133.203 243.705 li
132.117 244.927 li
133.087 246.798 li
133.136 246.89 li
133.101 246.991 li
132.652 248.264 li
132.633 248.314 li
132.588 248.356 li
128.48 252.246 li
128.48 252.246 li
cp
ef
117.463 223.954 mo
116 224.016 li
115.955 224.018 li
115.912 224.002 li
114.29 223.44 li
111.497 226.753 li
110.894 230.297 li
110.827 235.684 li
110.826 235.76 li
110.781 235.824 li
109.891 237.055 li
109.857 237.103 li
109.806 237.131 li
109.187 237.448 li
113.196 243.765 li
115.994 244.051 li
116.119 244.064 li
116.181 244.172 li
117.079 245.741 li
117.111 245.798 li
117.111 245.862 li
117.111 247.668 li
122.71 250.94 li
128.158 251.887 li
132.212 248.047 li
132.607 246.93 li
131.609 245.003 li
131.533 244.854 li
131.644 244.73 li
132.779 243.452 li
132.779 238.161 li
130.835 238.029 li
130.693 238.018 li
130.63 237.889 li
129.265 234.937 li
126.137 234.381 li
125.103 235.276 li
124.884 235.465 li
124.736 235.218 li
122.791 232.002 li
122.761 231.954 li
122.757 231.898 li
122.475 228.306 li
119.185 228.306 li
119.015 228.306 li
118.957 228.144 li
117.463 223.954 li
117.463 223.954 li
cp
ef
125.476 217.52 mo
122.851 219.376 li
117.917 223.777 li
119.356 227.82 li
122.701 227.82 li
122.925 227.82 li
122.943 228.045 li
123.238 231.8 li
125.002 234.721 li
125.908 233.938 li
125.996 233.861 li
126.108 233.881 li
129.472 234.479 li
129.599 234.502 li
129.652 234.617 li
131.011 237.555 li
132.779 237.676 li
132.779 237.594 li
133.099 237.706 li
138.306 239.515 li
138.925 238.588 li
139.513 235.645 li
139.525 235.586 li
139.564 235.538 li
140.228 234.727 li
141.308 232.926 li
141.371 231.643 li
139.93 230.816 li
139.828 230.758 li
139.81 230.64 li
139.603 229.115 li
138.715 228.615 li
138.24 229.388 li
138.171 229.497 li
138.042 229.502 li
134.535 229.646 li
134.144 230.623 li
134.072 230.803 li
133.877 230.771 li
132.083 230.472 li
131.964 230.452 li
131.909 230.348 li
130.039 226.832 li
130.017 226.792 li
130.013 226.741 li
129.498 221.592 li
125.476 217.52 li
125.476 217.52 li
cp
ef
141.858 231.634 mo
141.79 233.011 li
141.787 233.072 li
141.755 233.123 li
140.722 234.845 li
144.126 238.902 li
144.152 238.931 li
144.166 238.967 li
144.644 240.146 li
147.164 239.422 li
147.176 239.417 li
147.2 239.414 li
150.529 238.989 li
150.878 236.408 li
150.894 236.288 li
151 236.229 li
152.72 235.257 li
152.751 235.24 li
152.781 235.231 li
156.208 234.375 li
156.558 231.511 li
155.619 226.455 li
149.095 224.353 li
145.362 225.41 li
145.003 229.283 li
144.994 229.393 li
144.904 229.457 li
141.858 231.634 li
141.858 231.634 li
cp
ef
124.088 212.654 mo
125.047 215.271 li
125.047 215.271 li
125.713 217.069 li
129.904 221.312 li
129.964 221.373 li
129.972 221.459 li
130.491 226.644 li
132.283 230.014 li
133.765 230.261 li
134.142 229.32 li
134.201 229.174 li
134.358 229.168 li
137.892 229.022 li
138.423 228.16 li
138.545 227.961 li
138.75 228.076 li
139.945 228.75 li
140.05 228.809 li
140.068 228.93 li
140.275 230.454 li
141.608 231.216 li
144.532 229.126 li
144.896 225.2 li
144.912 225.032 li
145.072 224.987 li
148.863 223.915 li
149.041 218.25 li
149.048 218.025 li
149.273 218.016 li
152.698 217.867 li
154.541 216.393 li
154.675 216.285 li
154.821 216.377 li
158.511 218.692 li
161.425 214.613 li
161.567 214.414 li
161.765 214.559 li
165.232 217.064 li
167.644 216 li
168.699 214.748 li
166.645 212.072 li
162.421 207.775 li
160.072 206.748 li
159.974 206.705 li
159.939 206.605 li
159.173 204.445 li
156.576 204.377 li
155.517 205.082 li
155.457 205.123 li
155.38 205.121 li
146.472 205.049 li
144.435 206.213 li
144.279 206.301 li
144.147 206.178 li
142.955 205.057 li
140.26 205.264 li
139.129 206.887 li
139.074 206.969 li
138.976 206.988 li
137.148 207.354 li
132.1 210.397 li
132.046 210.43 li
131.982 210.433 li
127.557 210.58 li
124.088 212.654 li
124.088 212.654 li
cp
ef
158.361 219.171 mo
154.708 216.88 li
152.938 218.295 li
152.876 218.344 li
152.797 218.349 li
149.519 218.49 li
149.349 223.925 li
155.905 226.038 li
156.042 226.082 li
156.07 226.225 li
157.041 231.46 li
157.049 231.496 li
157.045 231.533 li
156.72 234.192 li
158.486 233.493 li
158.511 233.482 li
158.542 233.479 li
164.026 232.718 li
164.081 232.71 li
164.132 232.727 li
168.017 233.945 li
168.105 233.974 li
168.153 234.053 li
169.369 236.08 li
171.355 234.227 li
171.208 229.887 li
170.327 227.759 li
167.667 224.805 li
160.818 223.601 li
160.758 223.591 li
160.708 223.55 li
159.108 222.254 li
159.043 222.201 li
159.025 222.119 li
158.361 219.171 li
158.361 219.171 li
cp
ef
171.363 234.884 mo
169.48 236.639 li
169.261 236.844 li
169.107 236.586 li
167.784 234.381 li
164.039 233.207 li
158.639 233.957 li
156.654 234.743 li
156.651 234.766 li
156.488 234.805 li
152.927 235.695 li
151.343 236.591 li
150.986 239.239 li
150.962 239.422 li
150.777 239.447 li
147.285 239.895 li
144.828 240.599 li
145.228 241.591 li
148.214 241.73 li
148.333 241.736 li
148.402 241.835 li
150.802 245.253 li
155.099 245.545 li
155.306 245.559 li
155.327 245.767 li
155.55 248.312 li
155.558 248.409 li
155.491 248.488 li
154.651 249.457 li
156.62 251.887 li
156.635 251.875 li
156.779 252.08 li
159.08 255.389 li
159.999 255.206 li
161.377 254.263 li
161.535 254.156 li
161.677 254.282 li
163.023 255.479 li
163.042 255.495 li
163.061 255.521 li
165.902 259.635 li
165.964 259.725 li
165.94 259.829 li
165.781 260.492 li
167.973 262.958 li
168.058 263.051 li
168.028 263.174 li
167.363 266.064 li
168.71 269.047 li
169.31 269.047 li
170.16 267.134 li
170.16 267.134 li
171.226 264.772 li
171.294 264.623 li
171.458 264.629 li
173.286 264.705 li
173.349 264.707 li
173.404 264.741 li
175.799 266.222 li
176.373 265.421 li
175.944 262.781 li
174.246 261.084 li
174.161 260.997 li
174.177 260.877 li
174.558 258.211 li
174.593 257.976 li
174.828 258.004 li
179.271 258.531 li
182.885 257.374 li
183.357 254.411 li
182.076 254.221 li
181.985 254.206 li
181.926 254.136 li
181.087 253.147 li
180.919 252.948 li
181.13 252.794 li
183.029 251.406 li
183.126 250.763 li
181.474 250.566 li
181.301 250.544 li
181.265 250.375 li
181.036 249.309 li
181.016 249.219 li
181.061 249.14 li
182.025 247.421 li
181.406 246.955 li
178.191 248.71 li
178.113 248.752 li
178.027 248.735 li
174.218 247.975 li
174.116 247.952 li
174.06 247.862 li
172.46 245.272 li
172.443 245.244 li
172.435 245.219 li
171.445 242.096 li
171.435 242.063 li
171.433 242.022 li
171.363 234.884 li
171.363 234.884 li
cp
ef
172.429 243.59 mo
172.891 245.045 li
174.416 247.517 li
178.037 248.241 li
181.31 246.455 li
181.446 246.382 li
181.571 246.475 li
182.485 247.16 li
182.655 247.286 li
182.552 247.472 li
181.531 249.297 li
181.703 250.104 li
183.434 250.311 li
183.685 250.342 li
183.646 250.589 li
183.495 251.58 li
183.479 251.679 li
183.398 251.737 li
181.626 253.032 li
182.238 253.754 li
183.65 253.965 li
185.903 253.965 li
188.192 251.893 li
188.267 246.665 li
188.271 246.407 li
188.525 246.427 li
190.617 246.57 li
192.792 244.177 li
194.148 240.641 li
194.165 240.596 li
194.197 240.563 li
196.297 238.31 li
198.728 232.05 li
197.5 231.095 li
197.484 231.081 li
197.466 231.062 li
196.033 229.412 li
194.114 229.77 li
193.994 229.792 li
193.904 229.707 li
191.379 227.331 li
187.447 227.191 li
187.38 228.551 li
187.38 228.57 li
187.152 230.475 li
187.14 230.569 li
187.066 230.632 li
184.248 232.993 li
184.129 233.092 li
183.989 233.024 li
181.747 231.979 li
180.006 231.845 li
178.233 238.279 li
178.191 238.431 li
178.035 238.453 li
174.212 239.043 li
172.429 243.59 li
172.429 243.59 li
cp
ef
188.529 252.24 mo
186.159 254.389 li
186.088 254.451 li
185.996 254.451 li
183.841 254.451 li
183.341 257.599 li
183.318 257.745 li
183.175 257.79 li
179.368 259.009 li
179.316 259.025 li
179.265 259.021 li
175.005 258.515 li
174.675 260.826 li
176.343 262.491 li
176.398 262.545 li
176.41 262.626 li
176.867 265.443 li
176.883 265.542 li
176.826 265.623 li
176.064 266.688 li
175.931 266.873 li
175.739 266.755 li
173.203 265.188 li
171.602 265.12 li
170.603 267.333 li
170.602 267.333 li
169.689 269.387 li
169.625 269.532 li
169.467 269.532 li
168.796 269.532 li
168.796 276.371 li
170.275 278.441 li
170.323 278.506 li
170.32 278.587 li
170.169 283.901 li
171.401 285.274 li
171.468 285.351 li
171.461 285.451 li
171.31 287.965 li
171.3 288.119 li
171.154 288.176 li
169.96 288.642 li
170.348 291.869 li
171.39 291.175 li
171.445 291.139 li
171.513 291.136 li
174.559 290.981 li
174.831 290.97 li
174.814 291.239 li
174.584 294.896 li
174.575 295.064 li
174.411 295.115 li
172.519 295.675 li
172.458 296.77 li
173.833 298.219 li
173.991 298.382 li
173.833 298.551 li
171.742 300.786 li
172.755 302.743 li
177.976 303.938 li
178.046 303.951 li
178.093 304.002 li
180.927 306.836 li
183.785 307.113 li
185.009 304.229 li
185.058 304.122 li
185.173 304.092 li
187.609 303.445 li
187.964 301.249 li
188.269 298.963 li
188.292 298.795 li
188.455 298.758 li
191.566 298.033 li
191.924 295.531 li
191.931 295.486 li
191.956 295.444 li
194.544 291.026 li
194.58 290.97 li
194.636 290.937 li
198.978 288.499 li
199.09 288.437 li
199.207 288.496 li
201.364 289.61 li
202.416 289.61 li
203.204 286.819 li
203.24 286.689 li
203.367 286.65 li
205.533 285.979 li
206.732 285.033 li
205.058 283.292 li
204.08 283.749 li
202.484 284.586 li
202.392 284.634 li
202.294 284.601 li
195.364 282.317 li
195.324 282.303 li
195.288 282.274 li
193.689 280.978 li
193.644 280.943 li
193.62 280.888 li
191.791 276.775 li
191.753 276.688 li
191.783 276.599 li
192.62 274.161 li
192.649 274.077 li
192.725 274.032 li
196 272.052 li
196.068 272.01 li
196.146 272.018 li
197.974 272.17 li
198.081 272.178 li
198.147 272.266 li
199.595 274.17 li
199.642 274.234 li
199.644 274.313 li
199.716 277.473 li
201.035 278.528 li
202.728 277.753 li
202.787 277.725 li
202.851 277.73 li
204.451 277.883 li
204.517 277.888 li
204.568 277.928 li
205.636 278.688 li
205.648 278.699 li
205.664 278.714 li
208.125 281.101 li
209.271 280.463 li
210.084 278.834 li
208.576 276.823 li
208.539 276.773 li
208.529 276.711 li
208.3 275.113 li
208.291 275.034 li
208.326 274.964 li
209.906 272.032 li
210.246 269.647 li
208.962 269.454 li
208.93 269.448 li
208.901 269.438 li
204.406 267.454 li
204.38 267.443 li
204.352 267.424 li
202.449 265.898 li
202.392 265.854 li
202.37 265.783 li
201.677 263.641 li
199.843 264.117 li
199.683 264.157 li
199.586 264.025 li
198.748 262.882 li
198.712 262.834 li
198.703 262.775 li
198.398 260.795 li
198.4 260.795 li
198.131 259.588 li
196.068 259.091 li
195.897 259.048 li
195.883 258.874 li
195.671 256.192 li
190.86 255.973 li
190.626 255.965 li
190.626 255.731 li
190.626 252.173 li
188.529 252.24 li
188.529 252.24 li
cp
ef
203.347 210.933 mo
200.134 212.401 li
200.041 212.443 li
199.946 212.407 li
190.804 208.883 li
187.718 212.342 li
187.566 212.514 li
187.386 212.369 li
185.933 211.208 li
185.841 211.133 li
185.841 211.018 li
185.841 205.543 li
185.085 203.75 li
185.027 203.609 li
185.129 203.494 li
192.451 195.308 li
192.145 191.771 li
190.021 189.193 li
187.143 189.648 li
182.988 192.364 li
182.923 192.407 li
182.845 192.404 li
179.143 192.25 li
178.623 193.551 li
181.247 196.021 li
181.426 196.189 li
181.253 196.367 li
178.029 199.697 li
178.025 199.703 li
176.433 201.439 li
176.285 206.471 li
176.279 206.713 li
176.04 206.707 li
168.158 206.559 li
165.033 209.74 li
166.998 211.74 li
167.004 211.745 li
167.017 211.763 li
169.204 214.607 li
169.322 214.761 li
169.197 214.911 li
167.978 216.357 li
167.939 216.4 li
167.89 216.423 li
165.3 217.566 li
165.173 217.622 li
165.06 217.541 li
161.677 215.095 li
158.837 219.073 li
159.48 221.931 li
160.963 223.133 li
167.834 224.34 li
167.917 224.354 li
167.973 224.418 li
170.714 227.464 li
170.742 227.494 li
170.757 227.533 li
171.672 229.744 li
171.689 229.783 li
171.691 229.828 li
171.843 234.322 li
171.846 234.432 li
171.843 234.435 li
171.919 241.98 li
172.196 242.854 li
173.811 238.734 li
173.863 238.603 li
174.001 238.582 li
177.806 237.998 li
179.592 231.521 li
179.646 231.328 li
179.843 231.345 li
181.826 231.496 li
181.867 231.499 li
181.91 231.519 li
184.054 232.521 li
186.679 230.319 li
186.896 228.517 li
186.972 226.93 li
186.983 226.691 li
187.223 226.699 li
191.49 226.852 li
191.58 226.854 li
191.646 226.916 li
194.146 229.27 li
196.083 228.91 li
196.217 228.885 li
196.308 228.991 li
197.814 230.722 li
198.99 231.637 li
200.996 229.382 li
202.556 227.267 li
200.781 225.714 li
200.699 225.641 li
200.699 225.531 li
200.699 222.979 li
200.699 222.819 li
200.847 222.756 li
207.609 219.91 li
207.381 216.269 li
203.347 210.933 li
203.347 210.933 li
cp
ef
354.266 138.311 mo
356.085 138.512 li
356.421 137.301 li
355.208 135.953 li
353.728 136.425 li
354.266 138.311 li
354.266 138.311 li
cp
ef
360.058 147.67 mo
362.212 148.479 li
364.435 148.074 li
363.492 144.775 li
360.797 146.256 li
360.058 147.67 li
360.058 147.67 li
cp
ef
365.135 149.312 mo
362.505 149.467 li
361.199 154.166 li
356.892 150.25 li
355.716 154.296 li
360.287 159.256 li
360.548 163.563 li
352.193 156.123 li
351.933 151.424 li
355.456 147.117 li
355.978 140.199 li
354.542 140.852 li
352.845 145.551 li
350.235 147.9 li
347.494 148.684 li
344.883 152.6 li
345.013 162.911 li
338.617 172.962 li
339.009 179.097 li
345.537 179.097 li
350.888 185.493 li
350.888 191.628 li
347.101 196.197 li
348.146 198.285 li
351.149 199.982 li
345.537 201.287 li
343.97 195.413 li
348.146 188.104 li
346.32 182.621 li
339.923 181.707 li
336.398 185.102 li
336.007 192.803 li
330.132 198.807 li
324.781 200.766 li
321.126 204.682 li
308.857 197.11 li
308.857 193.455 li
317.08 197.24 li
321.388 195.545 li
328.306 191.106 li
333.005 181.707 li
332.222 176.617 li
340.185 157.689 li
341.097 154.427 li
340.185 150.119 li
345.406 145.159 li
346.451 138.241 li
342.404 132.889 li
346.56 132.346 li
345.951 127.31 li
341.829 127.004 li
341.524 130.667 li
342.404 132.889 li
339.792 131.845 li
335.876 134.848 li
331.177 140.852 li
327.522 144.375 li
322.04 145.682 li
319.167 148.422 li
322.04 152.207 li
318.908 157.82 li
314.6 159.126 li
314.469 161.084 li
318.255 165 li
316.949 168.654 li
317.603 171.004 li
319.038 173.093 li
314.208 177.53 li
312.642 175.051 li
311.336 169.438 li
306.239 161.258 li
303.32 163.689 li
305.035 166.738 li
305.101 166.857 li
305.035 166.977 li
301.458 173.333 li
302.837 177.867 li
302.872 177.975 li
302.81 178.068 li
300.593 181.493 li
300.547 181.564 li
300.466 181.592 li
296.905 182.779 li
294.531 185.549 li
294.462 185.628 li
294.357 185.633 li
285.375 186.033 li
280.802 189.809 li
280.738 189.862 li
280.652 189.863 li
277.71 189.91 li
277.447 197.548 li
277.445 197.621 li
277.402 197.682 li
273.886 202.631 li
276.164 207.439 li
284.82 208.094 li
284.892 208.1 li
284.951 208.145 li
289.083 211.344 li
289.173 211.414 li
289.177 211.529 li
289.306 215.691 li
290.765 217.029 li
300.677 217.558 li
300.787 217.564 li
300.853 217.65 li
303.919 221.515 li
303.97 221.577 li
303.972 221.657 li
304.235 227.978 li
305.921 230.182 li
305.974 230.252 li
305.972 230.337 li
305.845 234.484 li
312.394 234.484 li
312.488 234.484 li
312.556 234.55 li
318.527 239.986 li
326.752 243.57 li
326.824 243.602 li
326.863 243.666 li
329.9 248.682 li
335.265 251.954 li
340.715 252.474 li
345.172 249.196 li
345.333 249.075 li
345.482 249.213 li
349.54 253.01 li
353.708 252.881 li
353.839 252.875 li
353.914 252.987 li
357.046 257.554 li
358.664 257.678 li
358.754 257.687 li
358.818 257.751 li
361.823 260.756 li
368.039 252.858 li
368.429 247.767 li
368.435 247.696 li
368.474 247.643 li
372.587 241.961 li
371.827 237.389 li
367.135 233.87 li
367.015 233.78 li
367.041 233.634 li
368.216 226.98 li
365.097 222.691 li
365.042 222.617 li
365.052 222.524 li
366.036 213.281 li
362.123 208.193 li
362.043 208.09 li
362.083 207.969 li
363.644 203.287 li
362.091 199.596 li
361.983 199.338 li
362.251 199.266 li
367.299 197.907 li
369.435 192.482 li
368.316 186.086 li
363.038 184.767 li
362.955 184.746 li
362.903 184.678 li
358.052 178.275 li
357.982 178.184 li
358.01 178.07 li
358.98 174.189 li
359.009 174.076 li
359.119 174.027 li
366.38 170.777 li
367.109 167.872 li
364.041 161.354 li
364.007 161.285 li
364.022 161.208 li
364.796 156.939 li
364.83 156.771 li
364.997 156.743 li
368.173 156.214 li
365.205 149.908 li
365.187 149.871 li
365.183 149.826 li
365.135 149.312 li
365.135 149.312 li
cp
ef
256.375 304.734 mo
260.039 304.667 li
263.04 309.759 li
265.463 310.142 li
265.538 310.06 li
266.335 307.931 li
266.357 307.875 li
266.397 307.838 li
270.685 303.816 li
271.349 300.767 li
271.363 300.704 li
271.406 300.656 li
273.988 297.806 li
274.08 297.702 li
274.213 297.73 li
277.446 298.376 li
278.285 297.059 li
278.802 294.728 li
277.914 292.318 li
275.166 291.271 li
275.052 291.226 li
275.019 291.107 li
274.611 289.613 li
274.578 289.493 li
274.658 289.395 li
275.968 287.821 li
276.369 283.822 li
276.378 283.735 li
276.442 283.674 li
281.058 279.194 li
281.23 279.025 li
281.399 279.194 li
283.978 281.775 li
284.123 281.918 li
284.005 282.087 li
282.593 284.086 li
284.394 284.424 li
284.447 284.432 li
284.49 284.463 li
289.164 287.802 li
292.733 287.271 li
292.814 287.26 li
292.886 287.302 li
296.23 289.173 li
299.486 289.305 li
303.892 286.282 li
296.017 280.376 li
295.97 280.34 li
295.945 280.292 li
292.143 272.824 li
292.138 272.813 li
289.335 266.541 li
287.145 266.024 li
287.13 266.021 li
287.109 266.014 li
282.493 264.112 li
282.451 264.096 li
282.417 264.064 li
280.103 261.871 li
279.417 263.702 li
279.355 263.865 li
279.181 263.859 li
275.496 263.728 li
274.621 264.728 li
274.591 264.761 li
274.552 264.783 li
272.244 266.005 li
272.166 266.044 li
272.08 266.027 li
270.29 265.643 li
269.156 266.524 li
269.09 266.575 li
269.006 266.575 li
266.699 266.575 li
266.65 266.575 li
266.602 266.556 li
263.687 265.286 li
262.433 267.668 li
262.379 267.771 li
262.264 267.794 li
258.132 268.603 li
255.473 273.195 li
255.402 273.321 li
255.255 273.315 li
247.892 273.074 li
245.886 277.317 li
246.008 281.455 li
246.014 281.643 li
245.83 281.696 li
243.873 282.241 li
243.2 285.519 li
244.875 289.395 li
244.879 289.408 li
244.886 289.431 li
245.569 291.989 li
248.667 292.936 li
248.72 292.953 li
248.759 292.989 li
251.63 295.59 li
251.707 295.66 li
251.71 295.762 li
251.795 298.438 li
256.023 302.134 li
256.093 302.195 li
256.104 302.291 li
256.373 304.712 li
256.375 304.729 li
256.375 304.734 li
256.375 304.734 li
cp
ef
221.489 300.222 mo
228.841 301.926 li
233.017 304.538 li
235.498 302.58 li
239.153 304.538 li
251.423 306.889 li
255.883 304.853 li
255.888 304.749 li
255.63 302.438 li
251.396 298.732 li
251.318 298.663 li
251.314 298.559 li
251.228 295.879 li
248.474 293.386 li
245.298 292.414 li
245.169 292.374 li
245.134 292.245 li
244.421 289.574 li
242.724 285.643 li
242.693 285.572 li
242.708 285.496 li
243.388 282.185 li
239.898 280.525 li
237.314 281.817 li
237.138 281.904 li
237.014 281.747 li
234.906 279.025 li
230.386 277.458 li
225.244 279.031 li
225.517 280.478 li
225.521 280.5 li
225.52 280.528 li
225.431 285.19 li
225.429 285.311 li
225.333 285.381 li
218.339 290.607 li
218.175 293.127 li
223.429 296.278 li
223.632 296.401 li
223.516 296.606 li
221.489 300.222 li
221.489 300.222 li
cp
ef
192.629 313.025 mo
194.119 311.065 li
199.081 310.672 li
199.471 307.147 li
201.82 305.844 li
204.302 305.974 li
207.304 308.324 li
209.13 306.628 li
206.912 302.971 li
205.868 299.317 li
208.347 296.705 li
210.566 296.054 li
213.96 299.707 li
221 300.151 li
221.001 300.132 li
221.008 300.087 li
221.031 300.047 li
222.977 296.573 li
217.799 293.467 li
217.671 293.391 li
217.681 293.245 li
217.861 290.465 li
217.869 290.353 li
217.958 290.285 li
224.949 285.063 li
225.036 280.545 li
224.426 277.326 li
222.556 275.537 li
221.548 276.155 li
221.462 276.208 li
221.363 276.186 li
219.569 275.736 li
219.514 275.723 li
219.47 275.686 li
212.033 269.311 li
210.739 269.637 li
210.38 272.142 li
210.375 272.184 li
210.354 272.223 li
208.792 275.121 li
209.001 276.582 li
210.564 278.666 li
210.654 278.784 li
210.585 278.919 li
209.671 280.747 li
209.638 280.814 li
209.572 280.851 li
208.201 281.612 li
208.044 281.699 li
207.916 281.572 li
205.339 279.073 li
204.339 278.359 li
202.871 278.22 li
201.101 279.031 li
200.965 279.093 li
200.85 279 li
199.326 277.781 li
199.236 277.708 li
199.236 277.596 li
199.161 274.399 li
197.827 272.647 li
196.183 272.51 li
193.052 274.402 li
192.273 276.669 li
194.039 280.638 li
195.557 281.867 li
202.351 284.106 li
203.858 283.316 li
203.868 283.314 li
205.011 282.78 li
205.167 282.707 li
205.289 282.831 li
207.269 284.887 li
207.455 285.08 li
207.244 285.246 li
205.797 286.39 li
205.761 286.417 li
205.717 286.432 li
203.636 287.077 li
202.834 289.92 li
202.784 290.097 li
202.599 290.097 li
201.305 290.097 li
201.248 290.097 li
201.194 290.071 li
199.101 288.987 li
194.929 291.33 li
192.399 295.646 li
192.025 298.267 li
192.001 298.433 li
191.839 298.469 li
188.727 299.193 li
188.445 301.312 li
188.443 301.316 li
188.097 303.471 li
193.24 305.044 li
193.345 305.077 li
193.39 305.176 li
194.466 307.507 li
194.507 307.594 li
194.476 307.684 li
193.938 309.299 li
193.915 309.369 li
193.857 309.414 li
191.929 310.925 li
192.629 313.025 li
192.629 313.025 li
cp
ef
244.722 218.442 mo
243.449 220.625 li
242.535 222.717 li
242.521 222.745 li
242.505 222.767 li
238.312 228.317 li
238.302 228.331 li
238.288 228.346 li
231.997 234.513 li
231.964 234.544 li
231.926 234.561 li
226.634 236.968 li
226.521 239.344 li
228.218 242.615 li
228.293 242.762 li
228.185 242.885 li
225.892 245.542 li
225.531 249.044 li
225.523 249.114 li
225.478 249.171 li
223.997 251.021 li
223.929 251.105 li
223.82 251.111 li
218.824 251.35 li
218.125 254.498 li
218.103 254.597 li
218.019 254.65 li
215.921 256.007 li
215.748 256.119 li
215.609 255.965 li
213.603 253.737 li
210.815 258.152 li
210.751 258.254 li
210.634 258.265 li
206.044 258.748 li
202.111 263.401 li
202.809 265.566 li
204.628 267.021 li
209.066 268.977 li
210.509 269.192 li
212.035 268.808 li
212.158 268.777 li
212.251 268.858 li
219.742 275.279 li
221.38 275.688 li
222.46 275.023 li
222.619 274.928 li
222.755 275.057 li
224.818 277.028 li
224.875 277.085 li
224.89 277.16 li
225.152 278.554 li
230.32 276.973 li
230.394 276.95 li
230.468 276.976 li
235.134 278.59 li
235.203 278.612 li
235.246 278.672 li
237.277 281.292 li
239.789 280.036 li
239.896 279.983 li
240.002 280.033 li
243.687 281.789 li
245.517 281.277 li
245.399 277.272 li
245.398 277.214 li
245.423 277.163 li
247.519 272.723 li
247.587 272.58 li
247.748 272.583 li
255.126 272.824 li
257.692 268.396 li
255.802 265.559 li
255.755 265.488 li
255.763 265.404 li
256.009 262.688 li
256.009 262.677 li
256.727 257.773 li
251.679 254.526 li
251.613 254.484 li
251.583 254.411 li
250.72 252.189 li
250.669 252.058 li
250.759 251.948 li
253.646 248.46 li
253.05 245.488 li
253.05 245.486 li
252.065 240.181 li
252.045 240.079 li
252.106 239.995 li
254.525 236.608 li
254.406 232.665 li
251.617 225.996 li
246.875 223.198 li
246.785 223.146 li
246.763 223.041 li
246.037 219.78 li
244.722 218.442 li
244.722 218.442 li
cp
ef
277.224 189.918 mo
274.394 189.963 li
270.322 193.57 li
270.259 193.626 li
270.174 193.631 li
266.494 193.824 li
266.352 193.832 li
266.277 193.713 li
265.074 191.822 li
259.14 197.106 li
258.191 200.523 li
258.171 200.594 li
258.119 200.641 li
251.851 206.232 li
244.976 218.007 li
246.433 219.488 li
246.48 219.538 li
246.496 219.606 li
247.212 222.834 li
251.933 225.618 li
252.003 225.659 li
252.035 225.733 li
254.873 232.519 li
254.888 232.559 li
254.89 232.605 li
255.013 236.676 li
255.015 236.757 li
254.968 236.824 li
252.561 240.194 li
253.529 245.394 li
253.529 245.394 li
254.146 248.477 li
254.168 248.592 li
254.094 248.679 li
251.224 252.147 li
252.007 254.161 li
257.123 257.45 li
257.253 257.534 li
257.232 257.688 li
256.492 262.747 li
256.492 262.747 li
256.253 265.359 li
258.091 268.114 li
262.058 267.339 li
263.361 264.862 li
263.466 264.662 li
263.673 264.752 li
266.747 266.089 li
268.923 266.089 li
270.08 265.19 li
270.169 265.12 li
270.28 265.143 li
272.094 265.533 li
274.285 264.373 li
275.207 263.32 li
275.282 263.233 li
275.397 263.238 li
279.025 263.368 li
279.777 261.359 li
279.906 261.017 li
280.171 261.27 li
282.718 263.683 li
287.271 265.556 li
289.564 266.095 li
289.681 266.123 li
289.73 266.232 li
292.577 272.603 li
292.577 272.603 li
296.355 280.022 li
304.325 286.002 li
308.71 283.491 li
309.222 280.803 li
309.242 280.702 li
309.329 280.643 li
311.996 278.91 li
312.07 278.862 li
312.156 278.874 li
315.289 279.25 li
318.027 270.513 li
318.048 270.439 li
318.112 270.392 li
321.976 267.46 li
322.075 267.384 li
322.191 267.418 li
326.323 268.62 li
326.363 268.628 li
326.39 268.647 li
331.93 272.341 li
340.386 272.476 li
340.466 272.476 li
340.529 272.521 li
346.398 276.826 li
353.458 272.773 li
353.593 272.695 li
353.722 272.785 li
357.375 275.396 li
361.515 274.88 li
366.054 272.934 li
366.875 270.824 li
361.723 267.861 li
361.601 267.791 li
361.601 267.65 li
361.601 261.222 li
358.537 258.158 li
356.895 258.031 li
356.779 258.023 li
356.711 257.925 li
353.587 253.369 li
349.456 253.499 li
349.357 253.501 li
349.283 253.434 li
345.298 249.704 li
340.927 252.92 li
340.854 252.974 li
340.761 252.965 li
335.163 252.432 li
335.108 252.426 li
335.06 252.397 li
329.595 249.063 li
329.542 249.033 li
329.513 248.982 li
326.488 243.983 li
318.294 240.416 li
318.257 240.399 li
318.227 240.374 li
312.3 234.974 li
305.595 234.974 li
305.345 234.974 li
305.353 234.724 li
305.484 230.409 li
303.802 228.211 li
303.757 228.151 li
303.753 228.073 li
303.491 221.755 li
300.542 218.038 li
290.654 217.51 li
290.568 217.506 li
290.504 217.447 li
288.905 215.98 li
288.829 215.91 li
288.825 215.808 li
288.695 211.658 li
284.711 208.574 li
275.987 207.914 li
275.846 207.902 li
275.787 207.775 li
273.386 202.709 li
273.326 202.58 li
273.409 202.465 li
276.964 197.459 li
277.224 189.918 li
277.224 189.918 li
cp
ef
107.058 134.551 mo
105.879 135.494 li
105.167 137.346 li
105.316 143.477 li
105.322 143.657 li
105.149 143.713 li
100.623 145.173 li
100.342 147.28 li
100.317 147.473 li
100.123 147.49 li
98.6343 147.627 li
98.2261 149.121 li
98.2095 149.186 li
98.1636 149.229 li
97.5073 149.888 li
99.0532 151.438 li
101.957 153.539 li
107.572 155.007 li
107.628 155.021 li
107.671 155.06 li
109.58 156.732 li
115.025 157.2 li
115.394 155.198 li
115.412 155.107 li
115.486 155.049 li
116.552 154.228 li
116.695 154.117 li
116.841 154.222 li
119.384 156.031 li
119.457 156.083 li
119.48 156.173 li
120.035 158.475 li
123.015 160.913 li
125.628 160.754 li
125.73 160.749 li
125.804 160.815 li
129.881 164.446 li
130.074 162.584 li
129.366 160.299 li
127.515 158.284 li
127.388 158.146 li
127.49 157.988 li
129.25 155.265 li
128.935 152.27 li
127.314 149.104 li
127.275 149.027 li
127.292 148.945 li
127.732 146.732 li
126.185 146.521 li
126.022 146.499 li
125.982 146.339 li
125.617 144.873 li
122.847 144.797 li
122.708 144.793 li
122.642 144.672 li
121.821 143.191 li
121.757 143.076 li
121.818 142.961 li
122.523 141.627 li
122.378 139.883 li
120.236 139.166 li
119.602 140.013 li
119.519 140.124 li
119.381 140.109 li
117.904 139.944 li
117.827 139.936 li
117.769 139.885 li
116.293 138.561 li
113.943 138.875 li
113.781 138.896 li
113.7 138.754 li
112.343 136.355 li
110.794 135.617 li
108.113 136.961 li
107.857 137.088 li
107.773 136.814 li
107.058 134.551 li
107.058 134.551 li
cp
ef
135.255 169.777 mo
140.549 173.196 li
142.632 173.087 li
142.753 173.08 li
142.832 173.177 li
145.333 176.246 li
145.412 176.344 li
145.378 176.463 li
144.167 180.872 li
147.366 183.927 li
156.016 184.374 li
156.078 184.378 li
156.128 184.408 li
161.853 187.875 li
161.91 187.907 li
161.942 187.967 li
165.677 194.839 li
171.71 198.369 li
175.833 197.339 li
175.968 197.307 li
176.064 197.402 li
177.848 199.188 li
180.734 196.206 li
178.168 193.791 li
178.048 193.678 li
178.109 193.524 li
178.755 191.91 li
178.82 191.75 li
178.992 191.757 li
182.787 191.916 li
186.808 189.285 li
186.808 186.499 li
184.039 185.113 li
183.844 185.016 li
183.92 184.813 li
184.8 182.465 li
182.225 181.605 li
180.535 182.374 li
180.301 182.48 li
180.208 182.24 li
178.168 177.063 li
173.162 176.906 li
173.055 176.902 li
172.986 176.822 li
169.781 173.137 li
166.744 171.219 li
166.724 171.205 li
166.707 171.19 li
163.801 168.445 li
163.795 168.441 li
163.786 168.43 li
155.23 158.742 li
155.156 158.659 li
155.17 158.551 li
155.816 153.707 li
155.826 153.635 li
155.875 153.579 li
159.024 149.979 li
156.95 149.287 li
156.781 149.231 li
156.781 149.058 li
156.781 145.751 li
154.21 145.782 li
152.474 147.441 li
152.4 147.514 li
152.297 147.51 li
148.687 147.346 li
148.59 147.34 li
148.521 147.27 li
146.828 145.494 li
145.208 145.455 li
142.822 146.252 li
138.965 149.15 li
136.447 154.442 li
136.375 154.594 li
136.208 154.58 li
132.011 154.256 li
129.669 155.508 li
128.001 158.094 li
129.76 160.01 li
129.796 160.051 li
129.814 160.104 li
130.552 162.488 li
130.566 162.535 li
130.56 162.584 li
130.343 164.699 li
134.457 164.673 li
134.675 164.672 li
134.699 164.889 li
135.255 169.777 li
135.255 169.777 li
cp
ef
106.32 122.551 mo
103.792 122.838 li
99.7456 125.971 li
97.396 129.234 li
92.8276 128.973 li
90.0874 133.542 li
86.8237 133.934 li
86.6929 137.457 li
81.8638 140.59 li
82.1245 145.159 li
84.0825 147.639 li
81.8638 150.381 li
82.3862 152.6 li
85.5171 153.383 li
86.1704 156.646 li
85.1831 158.408 li
85.3882 158.438 li
87.4595 157.904 li
87.5503 157.881 li
87.6323 157.924 li
88.7202 158.5 li
92.7222 157.729 li
94.3013 155.287 li
95.1958 151.563 li
95.2124 151.493 li
95.2593 151.446 li
97.7749 148.93 li
98.2104 147.336 li
98.2554 147.174 li
98.4233 147.158 li
99.8872 147.025 li
100.163 144.958 li
100.182 144.805 li
100.328 144.758 li
104.828 143.307 li
104.681 137.311 li
104.68 137.264 li
104.697 137.219 li
105.451 135.258 li
105.474 135.197 li
105.525 135.156 li
106.974 133.996 li
108.425 129.502 li
106.525 126.432 li
106.492 126.379 li
106.489 126.315 li
106.32 122.551 li
106.32 122.551 li
cp
ef
131.08 116.152 mo
126.767 116.312 li
121.414 118.27 li
121.154 122.577 li
121.674 124.535 li
120.109 125.841 li
118.933 122.838 li
116.845 122.708 li
113.582 119.574 li
109.537 122.186 li
106.803 122.496 li
106.972 126.23 li
108.897 129.342 li
108.957 129.438 li
108.921 129.544 li
107.438 134.141 li
108.15 136.398 li
110.685 135.129 li
110.792 135.076 li
110.898 135.127 li
112.621 135.949 li
112.689 135.98 li
112.726 136.049 li
114.041 138.373 li
116.341 138.064 li
116.451 138.051 li
116.534 138.125 li
118.035 139.471 li
119.297 139.611 li
119.952 138.735 li
120.056 138.596 li
120.222 138.651 li
122.684 139.474 li
122.837 139.523 li
122.85 139.684 li
123.014 141.657 li
123.02 141.727 li
122.986 141.789 li
122.309 143.072 li
122.999 144.315 li
125.814 144.395 li
125.999 144.398 li
126.043 144.578 li
126.414 146.063 li
128.054 146.286 li
128.311 146.322 li
128.261 146.574 li
127.787 148.96 li
129.386 152.09 li
129.408 152.131 li
129.412 152.175 li
129.703 154.94 li
131.847 153.795 li
131.91 153.76 li
131.979 153.766 li
136.08 154.082 li
138.551 148.889 li
138.576 148.837 li
138.625 148.8 li
142.563 145.84 li
142.595 145.816 li
142.632 145.803 li
145.092 144.981 li
145.132 144.969 li
145.173 144.969 li
148.615 145.049 li
150.412 143.609 li
147.085 139.268 li
144.961 138.873 li
144.816 138.846 li
144.772 138.704 li
143.763 135.359 li
142.435 135.486 li
142.212 137.51 li
142.181 137.781 li
141.916 137.721 li
140.849 137.474 li
140.746 137.449 li
140.694 137.358 li
139.886 135.961 li
138.837 136.271 li
138.685 138.65 li
138.666 138.933 li
138.39 138.871 li
136.912 138.543 li
136.797 138.517 li
136.746 138.41 li
135.91 136.66 li
131.8 136.739 li
131.669 136.742 li
131.594 136.633 li
129.945 134.191 li
126.053 134.191 li
125.938 134.191 li
125.865 134.102 li
124.798 132.785 li
124.673 132.631 li
124.798 132.478 li
131.468 124.41 li
131.08 116.152 li
131.08 116.152 li
cp
ef
188.593 99.8975 mo
189.682 93.207 li
191.25 95.4258 li
190.596 100.126 li
192.554 104.303 li
193.076 111.221 li
195.817 115.398 li
196.468 119.705 li
206.651 125.841 li
212.916 124.666 li
217.616 118.27 li
218.919 111.482 li
216.832 103.389 li
217.093 91.6406 li
215.789 87.334 li
212.525 82.1123 li
212.003 78.0654 li
213.438 77.1523 li
215.397 79.8926 li
217.355 78.5879 li
215.527 75.0645 li
208.609 70.3643 li
198.689 69.4512 li
196.73 70.8867 li
191.77 73.7588 li
191.9 77.6738 li
188.506 83.1563 li
181.85 83.2871 li
179.632 86.0762 li
184.503 92.5693 li
184.569 92.6572 li
184.546 92.7627 li
183.777 96.6172 li
187.807 98.6328 li
187.872 98.6641 li
187.908 98.7266 li
188.593 99.8975 li
188.593 99.8975 li
cp
ef
176.424 127.068 mo
176.107 124.927 li
176.499 123.1 li
174.8 120.75 li
176.369 117.878 li
181.197 111.874 li
185.245 110.568 li
187.593 106.521 li
188.476 100.654 li
187.527 99.0352 li
183.392 96.9688 li
183.226 96.8848 li
183.263 96.7031 li
184.049 92.7725 li
179.322 86.4688 li
173.757 93.4688 li
170.886 93.3379 li
167.23 95.8184 li
164.621 95.6875 li
163.576 98.2979 li
162.402 100.517 li
160.313 102.084 li
161.487 104.303 li
160.052 105.738 li
155.221 104.955 li
153.917 109.523 li
153.002 116.441 li
150.13 117.617 li
137.339 115.92 li
131.565 116.134 li
131.739 119.859 li
134.868 119.239 li
134.907 119.232 li
134.948 119.238 li
139.05 119.813 li
139.154 119.828 li
139.214 119.913 li
140.855 122.215 li
140.902 122.281 li
140.9 122.362 li
140.818 125.24 li
140.816 125.326 li
140.759 125.392 li
139.345 127.044 li
139.504 130.237 li
139.507 130.262 li
139.503 130.283 li
139.093 133.079 li
139.08 133.176 li
139 133.235 li
136.921 134.838 li
136.327 136.402 li
137.134 138.094 li
138.218 138.336 li
138.363 136.07 li
138.375 135.9 li
138.539 135.853 li
139.933 135.441 li
140.115 135.389 li
140.21 135.553 li
141.06 137.024 li
141.758 137.186 li
141.974 135.237 li
141.996 135.041 li
142.194 135.021 li
143.917 134.857 li
144.115 134.84 li
144.172 135.029 li
145.197 138.423 li
147.265 138.807 li
147.357 138.824 li
147.414 138.897 li
150.671 143.15 li
151.159 141.809 li
150.833 137.749 li
150.829 137.682 li
150.861 137.619 li
152.338 134.742 li
152.353 134.713 li
152.376 134.688 li
157.709 128.934 li
157.806 128.828 li
157.943 128.86 li
161.06 129.601 li
161.166 129.625 li
161.217 129.722 li
162.202 131.53 li
162.242 131.603 li
162.228 131.684 li
161.736 134.807 li
161.722 134.889 li
161.666 134.945 li
159.371 137.161 li
155.481 141.549 li
154.433 145.294 li
157.023 145.264 li
157.269 145.26 li
157.269 145.506 li
157.269 148.883 li
159.374 149.584 li
160.882 147.925 li
160.955 147.845 li
161.062 147.845 li
162.964 147.845 li
163.73 144.324 li
163.744 144.257 li
163.792 144.207 li
167.376 140.467 li
166.503 139.011 li
166.501 139.008 li
165.371 137.07 li
165.321 136.982 li
165.347 136.885 li
166.155 133.979 li
166.173 133.916 li
166.216 133.871 li
169.713 130.373 li
170.023 128.515 li
170.068 128.251 li
170.326 128.319 li
172.732 128.962 li
174.214 129.258 li
176.058 127.26 li
176.089 127.226 li
176.133 127.205 li
176.424 127.068 li
176.424 127.068 li
cp
ef
231.396 153.51 mo
226.581 159.725 li
228.261 162.324 li
228.339 162.445 li
228.273 162.571 li
227.187 164.588 li
227.972 167.89 li
228.014 168.064 li
227.857 168.156 li
224.791 169.932 li
224.662 170.006 li
224.539 169.926 li
220.566 167.384 li
216.767 167.542 li
216.566 167.551 li
216.52 167.352 li
215.896 164.533 li
206.322 157.157 li
205.261 158.751 li
207.925 163.139 li
207.975 163.222 li
207.955 163.314 li
207.148 167.027 li
207.132 167.099 li
207.082 167.149 li
204.793 169.438 li
205.828 171.214 li
205.857 171.263 li
205.861 171.316 li
206.022 173.253 li
206.044 173.505 li
205.789 173.516 li
202.03 173.672 li
199.077 177.558 li
198.93 179.896 li
202.48 181.375 li
203.978 179.575 li
204.023 179.522 li
204.089 179.5 li
207.48 178.37 li
207.679 178.305 li
207.773 178.492 li
209.871 182.689 li
209.959 182.865 li
209.806 182.988 li
201.982 189.215 li
201.825 192.656 li
201.82 192.77 li
201.729 192.838 li
198.986 194.938 li
198.875 195.021 li
198.747 194.969 li
195.329 193.57 li
192.871 195.566 li
185.593 203.703 li
186.308 205.402 li
186.329 205.449 li
186.328 205.496 li
186.328 210.901 li
187.508 211.848 li
190.552 208.434 li
190.664 208.309 li
190.821 208.369 li
200.025 211.917 li
203.234 210.451 li
205.038 205.988 li
205.107 205.818 li
205.287 205.836 li
211.389 206.418 li
211.483 206.426 li
211.548 206.498 li
216.07 211.598 li
221.027 214.172 li
227.975 214.934 li
230.718 213.421 li
230.862 213.341 li
230.99 213.446 li
238.492 219.601 li
243.106 220.247 li
251.452 205.955 li
251.471 205.922 li
251.5 205.896 li
257.743 200.326 li
258.692 196.907 li
258.711 196.838 li
258.763 196.791 li
264.963 191.27 li
265.177 191.08 li
265.33 191.321 li
266.609 193.332 li
270.065 193.15 li
274.142 189.541 li
274.208 189.48 li
274.297 189.479 li
280.558 189.381 li
285.126 185.605 li
285.189 185.555 li
285.271 185.551 li
294.231 185.152 li
296.581 182.412 li
296.625 182.361 li
296.689 182.34 li
300.233 181.158 li
302.341 177.9 li
300.963 173.374 li
300.933 173.273 li
300.984 173.184 li
302.63 170.258 li
300.907 169.944 li
299.787 171.625 li
299.714 171.733 li
299.583 171.733 li
297.464 171.733 li
294.712 174.287 li
294.619 174.375 li
294.492 174.346 li
291.21 173.574 li
288.689 176.484 li
288.623 176.561 li
288.523 176.568 li
281.07 177.172 li
280.982 177.18 li
280.91 177.127 li
248.574 154.03 li
245.464 155.002 li
245.418 155.017 li
245.369 155.011 li
231.396 153.51 li
231.396 153.51 li
cp
ef
182.021 118.021 mo
183.027 119.127 li
184.389 118.217 li
184 116.625 li
182.962 115.845 li
182.152 116.949 li
182.021 118.021 li
182.021 118.021 li
cp
ef
279.107 121.663 mo
280.787 120.441 li
280.787 117.695 li
278.802 117.237 li
279.107 121.663 li
279.107 121.663 li
cp
ef
305.992 160.833 mo
303.505 156.254 li
296.978 149.205 li
292.018 149.205 li
291.367 152.076 li
291.236 156.385 li
287.71 158.473 li
285.751 158.082 li
284.448 160.039 li
281.968 158.082 li
284.839 155.471 li
284.839 152.6 li
275.572 152.469 li
271.003 149.075 li
263.954 149.728 li
261.474 146.334 li
265.652 145.942 li
267.871 141.635 li
262.257 140.329 li
259.647 143.463 li
258.341 141.112 li
243.984 137.588 li
242.156 139.416 li
240.067 137.457 li
232.497 141.896 li
228.58 138.109 li
229.755 134.717 li
228.58 131.322 li
233.279 129.756 li
237.587 132.758 li
239.675 129.365 li
239.544 123.229 li
233.801 116.965 li
232.105 123.1 li
224.272 128.189 li
223.621 132.105 li
219.878 135.485 li
221.347 143.313 li
225.455 149.475 li
229.218 149.945 li
229.328 149.959 li
229.389 150.051 li
231.423 153.025 li
245.369 154.523 li
248.544 153.53 li
248.658 153.494 li
248.758 153.564 li
281.119 176.68 li
288.386 176.09 li
290.939 173.145 li
291.037 173.033 li
291.178 173.066 li
294.478 173.843 li
297.203 171.313 li
297.274 171.247 li
297.369 171.247 li
299.454 171.247 li
300.591 169.543 li
300.678 169.41 li
300.835 169.438 li
302.881 169.811 li
304.544 166.857 li
302.797 163.752 li
302.699 163.577 li
302.853 163.447 li
305.992 160.833 li
305.992 160.833 li
cp
ef
294.521 147.301 mo
291.621 147.606 li
289.333 143.791 li
289.943 140.281 li
293.605 139.365 li
294.673 143.333 li
294.521 147.301 li
294.521 147.301 li
cp
ef
249.711 129.316 mo
251.958 132.272 li
257.248 132.412 li
257.858 130.442 li
257.529 127.487 li
254.72 124.438 li
250.695 125.846 li
249.711 129.316 li
249.711 129.316 li
cp
ef
289.027 133.261 mo
290.249 121.663 li
291.164 117.237 li
294.978 113.117 li
299.558 111.591 li
301.388 108.996 li
300.32 105.791 li
303.677 107.929 li
306.729 107.623 li
307.494 105.334 li
309.477 105.486 li
309.628 103.197 li
312.071 104.113 li
312.529 101.824 li
314.36 103.808 li
315.734 101.977 li
316.191 99.2285 li
318.787 101.061 li
320.464 99.5352 li
323.975 100.298 li
326.875 96.9414 li
349.155 96.4824 li
354.497 93.584 li
355.106 89.6152 li
352.818 86.8691 li
347.476 88.2412 li
346.56 90.2256 li
337.404 89.4629 li
333.437 86.1055 li
329.926 88.0889 li
326.416 86.5635 li
321.991 89.4629 li
318.328 89.4629 li
316.498 90.9883 li
314.055 88.3945 li
312.833 93.7363 li
310.086 93.8887 li
309.782 96.0244 li
302.916 98.1611 li
300.473 97.0938 li
298.947 98.9238 li
300.931 100.908 li
298.183 103.503 li
293.757 101.672 li
293.147 105.029 li
289.943 104.877 li
289.791 107.471 li
285.365 109.76 li
282.618 108.844 li
279.565 111.133 li
279.414 114.49 li
282.312 117.39 li
282.464 121.815 li
279.718 124.563 li
281.854 129.293 li
284.296 129.599 li
284.449 131.735 li
287.196 132.346 li
289.027 133.261 li
289.027 133.261 li
cp
ef
219.457 135.867 mo
215.527 139.416 li
213.699 136.021 li
216.31 135.5 li
213.046 129.365 li
208.087 130.147 li
203.126 128.451 li
196.992 129.365 li
193.598 137.85 li
191.117 136.414 li
187.593 128.189 li
188.117 121.793 li
182.373 122.447 li
180.806 127.929 li
183.286 130.932 li
180.936 134.063 li
177.152 131.975 li
176.499 127.569 li
176.383 127.623 li
174.478 129.688 li
174.385 129.789 li
174.251 129.762 li
172.636 129.439 li
172.623 129.436 li
170.458 128.857 li
170.179 130.531 li
170.167 130.609 li
170.113 130.664 li
166.605 134.172 li
165.843 136.916 li
166.921 138.766 li
167.889 140.377 li
167.983 140.535 li
167.855 140.669 li
164.19 144.494 li
163.398 148.14 li
163.356 148.332 li
163.16 148.332 li
161.168 148.332 li
159.626 150.027 li
159.617 150.039 li
156.287 153.844 li
155.667 158.505 li
164.138 168.096 li
167.023 170.82 li
170.07 172.744 li
170.101 172.764 li
170.123 172.792 li
173.283 176.424 li
178.342 176.582 li
178.502 176.588 li
178.562 176.736 li
180.566 181.824 li
182.11 181.123 li
182.196 181.084 li
182.286 181.115 li
185.193 182.083 li
185.431 182.163 li
185.343 182.398 li
184.451 184.777 li
187.162 186.133 li
187.296 186.199 li
187.296 186.35 li
187.296 189.133 li
190.083 188.693 li
190.22 188.672 li
190.308 188.779 li
192.568 191.522 li
192.617 191.582 li
192.625 191.656 li
192.906 194.912 li
195.133 193.104 li
195.244 193.013 li
195.377 193.067 li
198.801 194.467 li
201.345 192.521 li
201.501 189.084 li
201.507 188.973 li
201.593 188.904 li
209.35 182.73 li
207.433 178.896 li
204.307 179.939 li
202.738 181.823 li
202.623 181.961 li
202.458 181.893 li
198.583 180.277 li
198.423 180.211 li
198.435 180.039 li
198.596 177.456 li
198.601 177.384 li
198.646 177.324 li
201.712 173.288 li
201.783 173.197 li
201.896 173.191 li
205.517 173.041 li
205.38 171.409 li
204.279 169.521 li
204.183 169.358 li
204.316 169.227 li
206.687 166.854 li
207.458 163.306 li
204.765 158.869 li
204.685 158.736 li
204.769 158.608 li
206.061 156.672 li
206.207 156.455 li
206.412 156.613 li
216.26 164.201 li
216.33 164.256 li
216.349 164.342 li
216.951 167.049 li
220.624 166.896 li
220.698 166.893 li
220.763 166.934 li
224.675 169.438 li
227.457 167.826 li
226.691 164.611 li
226.67 164.521 li
226.714 164.44 li
227.777 162.468 li
226.08 159.844 li
225.985 159.699 li
226.09 159.564 li
230.987 153.246 li
229.05 150.416 li
225.285 149.944 li
225.173 149.93 li
225.112 149.838 li
220.914 143.541 li
220.888 143.502 li
220.878 143.451 li
219.457 135.867 li
219.457 135.867 li
cp
ef
350.001 46.7813 mo
351.623 48.3008 li
353.851 46.377 li
352.738 44.7568 li
351.117 45.1621 li
350.001 46.7813 li
350.001 46.7813 li
cp
ef
353.547 48.0996 mo
354.762 49.1113 li
356.89 47.998 li
357.498 45.4648 li
355.875 45.0605 li
353.547 48.0996 li
353.547 48.0996 li
cp
ef
359.32 47.7949 mo
361.447 49.7197 li
365.7 47.5918 li
364.89 45.1621 li
361.953 43.9473 li
359.421 46.0732 li
359.32 47.7949 li
359.32 47.7949 li
cp
ef
363.876 43.2373 mo
365.7 44.1484 li
366.916 42.7314 li
365.396 41.3125 li
363.876 43.2373 li
363.876 43.2373 li
cp
ef
371.878 38.1738 mo
372.487 40.0977 li
374.31 39.3887 li
373.6 37.0596 li
371.878 38.1738 li
371.878 38.1738 li
cp
ef
365.801 33.4141 mo
366.815 34.3252 li
368.13 33.3125 li
366.207 31.4893 li
365.195 32.2998 li
365.801 33.4141 li
365.801 33.4141 li
cp
ef
360.333 34.6289 mo
360.636 36.1484 li
362.663 37.4648 li
363.876 35.6416 li
362.763 33.4141 li
360.333 34.6289 li
360.333 34.6289 li
cp
ef
356.382 36.249 mo
360.232 39.6934 li
359.724 42.6289 li
355.875 41.3125 li
353.345 38.377 li
356.382 36.249 li
356.382 36.249 li
cp
ef
367.119 47.2891 mo
367.625 49.5166 li
371.878 49.416 li
373.6 46.5801 li
372.182 44.25 li
370.359 46.8838 li
367.625 46.1758 li
367.119 47.2891 li
367.119 47.2891 li
cp
ef
355.471 52.3525 mo
356.585 53.9727 li
357.599 52.6563 li
356.585 50.9355 li
355.471 52.3525 li
355.471 52.3525 li
cp
ef
344.938 41.2119 mo
346.66 44.1484 li
348.686 42.2246 li
347.671 39.7939 li
344.938 41.2119 li
344.938 41.2119 li
cp
ef
349.9 40.3008 mo
350.306 42.0215 li
351.419 41.2119 li
350.508 39.2881 li
349.9 40.3008 li
349.9 40.3008 li
cp
ef
348.078 30.6797 mo
349.395 32.502 li
350.61 31.2871 li
348.584 29.4639 li
348.078 30.6797 li
348.078 30.6797 li
cp
ef
336.127 27.0332 mo
336.734 29.4639 li
338.558 30.8809 li
341.191 30.6797 li
342.812 31.9961 li
343.824 30.7803 li
341.798 28.957 li
339.975 29.5137 li
336.127 27.0332 li
336.127 27.0332 li
cp
ef
336.632 33.2109 mo
336.431 35.3379 li
338.355 37.2617 li
340.28 39.6934 li
340.886 38.5781 li
340.38 36.249 li
343.014 35.6416 li
346.356 36.7559 li
348.484 34.6289 li
346.558 32.4004 li
344.938 31.793 li
343.216 33.1094 li
340.886 33.4141 li
339.47 34.0215 li
336.632 33.2109 li
336.632 33.2109 li
cp
ef
340.786 41.2119 mo
340.38 42.6289 li
341.9 43.541 li
342.001 41.6172 li
340.786 41.2119 li
340.786 41.2119 li
cp
ef
40.4487 104.557 mo
49.2817 123.652 li
54.7729 120.789 li
55.2495 110.285 li
52.6245 106.228 li
51.4302 111.002 li
48.8042 109.33 li
46.6577 103.124 li
44.0298 104.796 li
40.4487 104.557 li
40.4487 104.557 li
cp
ef
71.4722 244.882 mo
71.4194 246.19 li
67.3745 246.062 li
65.8071 248.409 li
63.7183 248.671 li
61.2397 253.108 li
57.063 254.676 li
54.0601 250.238 li
47.0112 249.322 li
43.7476 252.718 li
50.7964 256.895 li
48.7085 258.329 li
45.0532 256.11 li
42.9585 257.759 li
44.2095 260.23 li
46.7788 260.23 li
46.894 260.23 li
46.9683 260.32 li
50.0503 264.126 li
50.1509 264.252 li
50.0776 264.393 li
47.7944 268.785 li
50.7759 272.468 li
50.8745 272.588 li
50.8042 272.729 li
50.1011 274.136 li
49.9292 277.073 li
51.6812 279.225 li
53.3052 277.357 li
53.4155 277.23 li
53.5737 277.29 li
56.2847 278.307 li
57.269 276.666 li
57.3774 276.486 li
57.5698 276.568 li
59.7456 277.473 li
59.896 277.534 li
59.896 277.697 li
59.896 280.988 li
62.4741 282.193 li
62.6147 282.258 li
62.6147 282.412 li
62.6147 285.605 li
63.9507 287.774 li
67.1157 287.442 li
68.1421 285.558 li
68.2124 285.432 li
68.356 285.432 li
73.5054 285.432 li
76.6255 281.966 li
76.4722 280.272 li
73.5854 279.933 li
73.3843 279.91 li
73.3706 279.708 li
73.1948 277.239 li
70.5142 273.487 li
70.4487 273.395 li
70.479 273.282 li
71.8989 268.131 li
70.1479 265.502 li
70.0034 265.286 li
70.229 265.157 li
74.0366 262.98 li
74.1978 262.891 li
74.3296 263.02 li
75.7026 264.393 li
78.355 264.228 li
79.8921 261.154 li
79.355 255.965 li
79.3394 255.818 li
79.4644 255.737 li
83.5093 253.1 li
82.8228 246.744 li
79.6655 246.578 li
77.3784 248.162 li
77.2456 248.255 li
77.1089 248.168 li
74.5728 246.536 li
71.4722 244.882 li
71.4722 244.882 li
cp
ef
98.729 283.544 mo
103.14 282.087 li
103.792 278.694 li
107.579 276.604 li
111.625 275.56 li
113.081 275.116 li
112.95 269.566 li
110.468 269.069 li
110.373 269.05 li
110.317 268.968 li
109.115 267.232 li
109.074 267.174 li
109.072 267.104 li
108.952 263.851 li
107.406 264.514 li
107.351 264.536 li
107.293 264.53 li
105.423 264.398 li
105.184 264.382 li
105.199 264.143 li
105.332 261.739 li
105.335 261.654 li
105.392 261.59 li
107.333 259.391 li
107.333 256.377 li
103.051 252.224 li
100.583 251.704 li
100.494 251.685 li
100.439 251.614 li
98.7036 249.342 li
98.6597 249.286 li
98.6528 249.216 li
98.3989 246.033 li
94.8062 244.75 li
94.7163 244.717 li
94.6714 244.629 li
93.1616 241.61 li
91.2222 242.217 li
91.1714 242.23 li
91.1177 242.225 li
87.3491 241.723 li
86.9819 244.289 li
86.9663 244.401 li
86.8687 244.461 li
83.3003 246.641 li
84.0073 253.195 li
84.0249 253.344 li
83.8979 253.426 li
79.853 256.063 li
80.3823 261.174 li
80.3892 261.244 li
80.3569 261.307 li
78.7251 264.57 li
78.6636 264.696 li
78.5229 264.705 li
75.6216 264.887 li
75.5132 264.893 li
75.4351 264.814 li
74.1167 263.497 li
70.6968 265.452 li
72.3647 267.954 li
72.4272 268.044 li
72.3979 268.153 li
70.978 273.299 li
73.5669 276.925 li
79.978 277.618 li
80.6382 275.801 li
80.7007 275.627 li
80.8862 275.641 li
83.062 275.823 li
83.2417 275.838 li
83.2788 276.018 li
83.9683 279.292 li
86.4312 279.621 li
88.6147 278.242 li
88.6987 278.188 li
88.7935 278.211 li
96.5396 279.812 li
96.6499 279.834 li
96.7036 279.93 li
98.729 283.544 li
98.729 283.544 li
cp
ef
79.7241 313.359 mo
83.8218 314.852 li
94.7856 314.59 li
93.8716 310.281 li
96.6128 309.759 li
98.7026 298.011 li
96.8735 295.531 li
94.1323 294.88 li
94.5249 292.661 li
97.9185 289.526 li
94.895 285.325 li
96.353 284.566 li
98.271 283.722 li
96.3335 280.264 li
88.7925 278.705 li
86.7847 279.972 li
88.1646 283.595 li
88.1899 283.659 li
88.1743 283.729 li
86.7417 290.532 li
88.5112 293.717 li
88.5649 293.813 li
88.5298 293.913 li
86.7378 299.109 li
87.4487 302.303 li
87.521 302.634 li
87.1841 302.598 li
83.9858 302.241 li
82.2974 302.979 li
82.1108 303.061 li
81.9985 302.893 li
80.8433 301.156 li
79.8101 302.398 li
81.4897 306.403 li
81.5581 306.568 li
81.4194 306.684 li
79.1479 308.555 li
79.1284 308.571 li
79.1089 308.58 li
77.0815 309.652 li
79.7241 313.359 li
79.7241 313.359 li
cp
ef
71.1343 315.025 mo
75.2065 315.112 li
79.0991 313.317 li
76.5259 309.709 li
76.3657 309.484 li
76.6108 309.352 li
78.8608 308.161 li
80.9722 306.423 li
79.3052 302.448 li
79.2476 302.313 li
79.3433 302.201 li
80.6782 300.598 li
80.8862 300.348 li
81.0679 300.617 li
82.2905 302.451 li
83.8511 301.771 li
83.9116 301.743 li
83.9741 301.752 li
86.9019 302.078 li
86.2495 299.143 li
86.2349 299.075 li
86.2554 299.014 li
88.0337 293.857 li
86.2749 290.689 li
86.231 290.607 li
86.2495 290.521 li
87.6841 283.701 li
86.311 280.096 li
83.7358 279.75 li
83.564 279.728 li
83.5288 279.559 li
82.8413 276.293 li
81.0308 276.144 li
80.3696 277.961 li
80.3042 278.141 li
80.1147 278.121 li
73.6948 277.428 li
73.8423 279.475 li
76.7241 279.814 li
76.9194 279.837 li
76.937 280.033 li
77.1187 282.027 li
77.1284 282.132 li
77.0581 282.21 li
73.7944 285.839 li
73.7222 285.918 li
73.6128 285.918 li
68.4995 285.918 li
67.481 287.785 li
67.4194 287.897 li
67.2925 287.911 li
63.8472 288.273 li
63.6948 288.291 li
63.6147 288.159 li
62.1646 285.803 li
62.1294 285.743 li
62.1294 285.676 li
62.1294 282.564 li
59.5503 281.362 li
59.4097 281.298 li
59.4097 281.143 li
59.4097 277.859 li
57.5767 277.096 li
56.5981 278.728 li
56.4937 278.901 li
56.3042 278.832 li
53.5601 277.804 li
51.9917 279.606 li
53.7671 281.783 li
55.6206 281.446 li
55.7729 281.418 li
55.8628 281.548 li
57.0815 283.289 li
59.5366 283.991 li
59.6558 284.024 li
59.6987 284.14 li
60.7788 287.019 li
63.3081 291.354 li
63.353 291.431 li
63.3374 291.518 li
62.6245 295.784 li
65.3042 300.606 li
65.3218 300.637 li
65.3276 300.668 li
66.2358 304.477 li
66.2427 304.507 li
66.2417 304.541 li
66.0659 308.422 li
70.1597 312.518 li
70.1948 312.554 li
70.2153 312.604 li
71.1343 315.025 li
71.1343 315.025 li
cp
ef
45.9214 328.599 mo
44.5308 329.992 li
44.7925 333.907 li
48.4478 339.128 li
48.187 344.61 li
47.5327 347.223 li
50.7964 351.27 li
52.3628 350.615 li
53.2769 349.051 li
55.2339 350.093 li
57.3237 350.747 li
59.8042 349.18 li
59.8042 342.263 li
61.5005 332.472 li
67.7661 326.467 li
68.2886 320.201 li
67.6353 317.46 li
70.6714 315.174 li
69.7798 312.826 li
65.7964 308.844 li
64.3335 309.981 li
64.2651 310.034 li
64.1753 310.031 li
59.9136 309.854 li
57.6021 311.672 li
58.4194 313.307 li
58.5171 313.506 li
58.3296 313.621 li
56.272 314.898 li
58.8862 318.634 li
61.6909 319.159 li
61.8433 319.188 li
61.8823 319.336 li
62.7886 322.782 li
62.8433 322.987 li
62.6479 323.068 li
60.4702 323.974 li
60.4175 323.996 li
60.3599 323.993 li
58.1616 323.824 li
55.3354 329.301 li
55.1968 329.57 li
54.9634 329.374 li
52.7866 327.534 li
51.4937 328.989 li
51.4136 329.079 li
51.2905 329.068 li
45.9214 328.599 li
45.9214 328.599 li
cp
ef
44.7798 323.706 mo
45.7065 326.206 li
46.0942 328.124 li
51.2124 328.573 li
52.5815 327.034 li
52.7388 326.854 li
52.9204 327.009 li
55.0444 328.807 li
57.8062 323.456 li
57.8784 323.313 li
58.0386 323.327 li
60.3394 323.504 li
62.2651 322.701 li
61.4507 319.608 li
58.7017 319.092 li
58.605 319.075 li
58.5464 318.994 li
54.8081 313.651 li
51.8999 313.48 li
50.5073 314.099 li
52.0913 320.061 li
52.144 320.258 li
51.9585 320.345 li
44.7798 323.706 li
44.7798 323.706 li
cp
ef
43.0356 321.204 mo
43.0952 322.291 li
44.4741 323.313 li
51.5698 319.99 li
50.0581 314.298 li
48.7827 314.862 li
47.5562 318.746 li
47.5347 318.816 li
47.4741 318.861 li
45.6616 320.313 li
45.6284 320.339 li
45.5874 320.353 li
43.0356 321.204 li
43.0356 321.204 li
cp
ef
37.5464 312.983 mo
37.7427 317.46 li
42.9653 319.94 li
43.0073 320.701 li
45.3931 319.906 li
47.1128 318.53 li
48.3511 314.615 li
48.3843 314.512 li
48.4858 314.467 li
51.395 313.175 li
49.1147 311.335 li
48.2593 312.813 li
48.1675 312.97 li
47.9917 312.925 li
42.0757 311.492 li
37.646 312.91 li
37.5464 312.983 li
37.5464 312.983 li
cp
ef
33.6909 303.984 mo
36.439 307.018 li
36.5688 311.194 li
37.4019 312.486 li
37.4214 312.473 li
37.4585 312.458 li
41.9917 311.009 li
42.0562 310.986 li
42.1226 311.003 li
47.9292 312.41 li
49.7788 309.217 li
48.9585 306.588 li
46.2358 306.588 li
46.1431 306.588 li
46.0728 306.523 li
40.6987 301.688 li
36.8843 301.514 li
33.6909 303.984 li
33.6909 303.984 li
cp
ef
26.9692 291.467 mo
30.1724 296.837 li
30.1724 300.101 li
33.3647 303.625 li
36.6597 301.075 li
36.73 301.021 li
36.8179 301.024 li
40.5425 301.193 li
40.3726 297.289 li
40.3667 297.151 li
40.48 297.076 li
42.4741 295.747 li
39.6245 290.375 li
38.6577 292.31 li
38.5815 292.461 li
38.4136 292.444 li
34.9702 292.082 li
34.8628 292.068 li
34.7983 291.984 li
32.9106 289.408 li
26.9692 291.467 li
26.9692 291.467 li
cp
ef
25.8062 285.884 mo
25.6255 282.803 li
25.6255 282.803 li
25.6108 282.569 li
25.5991 282.337 li
25.8306 282.314 li
26.064 282.292 li
29.2515 281.972 li
29.2515 280.054 li
29.2495 280.054 li
29.2495 279.933 li
29.2495 279.809 li
29.3491 279.736 li
29.4478 279.663 li
29.4478 279.663 li
33.0444 277.006 li
30.7495 275.571 li
30.7476 275.571 li
30.7173 275.551 li
30.687 275.531 li
30.6616 275.504 li
30.6362 275.473 li
30.6362 275.47 li
27.7339 272.026 li
27.7339 272.026 li
27.6646 271.945 li
27.5952 271.863 li
27.6099 271.757 li
27.6235 271.65 li
27.9858 268.932 li
27.9858 268.932 li
28.0269 268.631 li
28.0659 268.336 li
28.3481 268.435 li
28.6304 268.535 li
31.1694 269.442 li
31.1694 269.442 li
31.2466 269.471 li
31.3257 269.499 li
31.3716 269.572 li
31.4165 269.642 li
31.4165 269.642 li
33.4487 272.86 li
36.2642 272.86 li
36.2642 272.86 li
36.4937 272.86 li
36.7222 272.86 li
36.7358 273.091 li
36.7485 273.318 li
36.9185 276.191 li
38.9312 277.868 li
39.0229 277.947 li
39.1177 278.022 li
39.1118 278.144 li
39.1069 278.262 li
38.9253 282.252 li
38.9214 282.328 li
38.9175 282.404 li
38.8726 282.463 li
38.8257 282.524 li
35.9243 286.333 li
35.564 286.805 li
35.2046 287.279 li
35.1294 286.688 li
35.0552 286.098 li
34.644 282.795 li
30.0972 287.813 li
29.9741 287.948 li
29.853 288.08 li
29.6929 288.004 li
29.5288 287.929 li
26.0845 286.297 li
25.9546 286.234 li
25.8247 286.173 li
25.8149 286.03 li
25.8062 285.884 li
25.8062 285.884 li
cp
20.9038 257.155 mo
21.1655 261.725 li
19.73 263.421 li
20.3833 265.379 li
22.4712 266.946 li
22.3413 270.209 li
23.5161 275.431 li
23.1245 280.258 li
22.2104 288.221 li
23.2554 289.658 li
25.3433 288.743 li
26.7153 291.043 li
32.9214 288.892 li
33.0903 288.833 li
33.1958 288.976 li
35.1265 291.61 li
38.2974 291.944 li
40.5796 287.381 li
40.6216 287.297 li
40.7065 287.263 li
43.1479 286.285 li
42.2251 284.903 li
42.145 284.783 li
42.2144 284.653 li
43.5747 282.104 li
42.0854 280.78 li
41.8921 280.609 li
42.0757 280.427 li
43.8296 278.672 li
44.0005 277.127 li
44.0151 276.989 li
44.1421 276.933 li
46.1362 276.025 li
46.3374 275.934 li
46.4468 276.127 li
47.7554 278.416 li
49.4448 277.034 li
49.6187 274.057 li
49.6226 274.01 li
49.646 273.962 li
50.3013 272.652 li
47.3169 268.965 li
47.2163 268.842 li
47.2886 268.701 li
49.5737 264.309 li
46.6636 260.717 li
44.0601 260.717 li
43.9097 260.717 li
43.8433 260.582 li
42.2593 257.453 li
37.4829 253.108 li
36.8296 259.374 li
34.2202 258.068 li
29.2583 258.329 li
27.4312 260.68 li
23.7759 254.546 li
20.9038 257.155 li
20.9038 257.155 li
cp
ef
49.647 277.495 mo
47.8413 278.975 li
47.6177 279.154 li
47.4761 278.907 li
46.1343 276.56 li
44.4683 277.317 li
44.3022 278.812 li
44.2925 278.899 li
44.2319 278.958 li
42.6011 280.587 li
44.0405 281.867 li
44.1831 281.994 li
44.0933 282.162 li
42.7104 284.755 li
43.7183 286.266 li
43.8853 286.516 li
43.6069 286.625 li
40.9722 287.679 li
39.8911 289.841 li
43.0054 295.717 li
43.1089 295.91 li
42.9253 296.031 li
40.8647 297.404 li
41.0347 301.336 li
46.3286 306.1 li
49.1372 306.1 li
49.3159 306.1 li
49.3687 306.271 li
50.2759 309.172 li
50.3062 309.273 li
50.2534 309.366 li
49.3608 310.908 li
51.9487 312.994 li
54.9536 313.172 li
55.0698 313.18 li
55.1382 313.275 li
55.9937 314.5 li
57.8862 313.326 li
57.0776 311.711 li
56.9897 311.534 li
57.146 311.41 li
59.6831 309.417 li
59.7534 309.36 li
59.8433 309.366 li
64.1069 309.543 li
65.5796 308.397 li
65.7534 304.555 li
64.8618 300.812 li
62.1597 295.947 li
62.1196 295.871 li
62.1323 295.789 li
62.8433 291.523 li
60.3491 287.246 li
60.3403 287.232 li
60.3315 287.209 li
59.2866 284.426 li
56.8667 283.732 li
56.7847 283.71 li
56.7339 283.637 li
55.5542 281.952 li
53.7124 282.289 li
53.5718 282.314 li
53.4819 282.202 li
49.647 277.495 li
49.647 277.495 li
cp
ef
26.1108 282.774 mo
26.2925 285.855 li
29.7378 287.487 li
34.6392 282.078 li
34.9946 281.686 li
35.0601 282.21 li
35.5386 286.038 li
38.439 282.229 li
38.6206 278.242 li
36.5269 276.498 li
36.4448 276.428 li
36.439 276.323 li
36.2642 273.347 li
36.2642 273.347 li
33.3149 273.347 li
33.1812 273.347 li
33.1108 273.234 li
31.0063 269.9 li
28.4683 268.996 li
28.4683 268.996 li
28.105 271.715 li
28.105 271.715 li
28.105 271.715 li
31.0054 275.158 li
31.0063 275.158 li
31.0063 275.161 li
33.603 276.784 li
33.9058 276.973 li
33.6206 277.183 li
29.7378 280.054 li
29.7358 280.056 li
29.7358 282.193 li
29.7358 282.412 li
29.5171 282.435 li
26.1108 282.774 li
26.1108 282.774 li
cp
ef
433.673 378.265 mo
444.739 382.725 li
454.921 385.076 li
457.008 393.17 li
464.448 397.085 li
469.669 396.953 li
477.112 392.516 li
482.855 394.344 li
488.857 393.951 li
490.424 396.691 li
493.878 396.841 li
495.01 392.653 li
495.039 392.549 li
495.134 392.499 li
498.446 390.766 li
494.895 386.89 li
494.721 386.699 li
494.92 386.539 li
498.383 383.736 li
497.069 379.787 li
496.962 379.467 li
497.299 379.467 li
503.885 379.467 li
507.921 376.103 li
508.005 376.035 li
508.11 376.049 li
511.733 376.543 li
518.493 367.587 li
518.557 367.5 li
518.667 367.491 li
522.992 367.16 li
524.295 365.04 li
524.337 364.975 li
524.414 364.944 li
528.118 363.428 li
530.94 359.942 li
531.263 356.224 li
528.303 354.249 li
528.196 354.176 li
528.196 354.047 li
528.196 350.455 li
528.196 350.334 li
528.292 350.261 li
534.743 345.338 li
536.942 340.263 li
536.984 340.164 li
537.083 340.131 li
542.725 338.14 li
542.405 333.629 li
538.936 330.492 li
535.072 329.82 li
534.928 329.795 li
534.88 329.655 li
531.651 319.963 li
529.643 318.123 li
529.486 317.979 li
529.609 317.806 li
531.609 314.969 li
531.331 312.191 li
528.963 314.856 li
528.874 314.955 li
528.744 314.936 li
526.736 314.626 li
525.592 319.033 li
525.559 319.171 li
525.421 319.207 li
514.642 322.114 li
514.482 322.159 li
514.384 322.024 li
512.575 319.559 li
510.131 319.559 li
510.073 319.559 li
510.016 319.527 li
507.685 318.283 li
506.418 321.291 li
506.376 321.393 li
506.273 321.426 li
501.139 323.137 li
501.06 323.164 li
500.982 323.137 li
498.333 322.201 li
497.707 325.181 li
497.67 325.353 li
497.499 325.372 li
492.278 326.026 li
492.733 328.596 li
495.915 331.275 li
496.1 331.433 li
495.943 331.618 li
493.255 334.812 li
492.755 339.637 li
494.488 343.715 li
494.766 342.9 li
495.828 336.258 li
495.833 336.216 li
495.856 336.177 li
497.588 333.112 li
497.67 332.972 li
497.828 332.988 li
500.094 333.256 li
500.277 333.278 li
500.304 333.461 li
500.707 335.994 li
500.712 336.036 li
500.707 336.072 li
499.645 342.041 li
500.041 347.854 li
500.964 351.025 li
500.99 351.104 li
500.959 351.18 li
499.76 354.246 li
499.74 354.297 li
499.698 354.336 li
497.861 356.041 li
497.263 357.117 li
497.901 359.15 li
497.926 359.231 li
497.892 359.313 li
497.091 361.313 li
497.046 361.428 li
496.926 361.459 li
494.968 361.947 li
494.845 364.169 li
494.839 364.228 li
494.808 364.281 li
492.275 368.413 li
492.227 368.491 li
492.14 368.52 li
488.351 369.693 li
485.866 373.095 li
485.785 373.207 li
485.65 373.195 li
482.804 372.945 li
482.046 377.26 li
482.033 377.327 li
481.988 377.378 li
479.856 379.779 li
479.819 379.818 li
479.771 379.838 li
472.944 382.859 li
472.042 385.949 li
472.005 386.07 li
471.885 386.112 li
467.487 387.578 li
467.237 387.659 li
467.175 387.407 li
466.546 384.891 li
461.901 383.986 li
461.724 383.952 li
461.705 383.775 li
461.311 380.377 li
458.095 376.26 li
453.815 376.26 li
453.731 376.26 li
453.664 376.206 li
444.735 369.143 li
444.707 369.12 li
444.689 369.095 li
441.898 365.292 li
437.427 368.482 li
437.363 368.53 li
437.283 368.527 li
434.728 368.469 li
434.857 369.033 li
434.888 369.162 li
434.794 369.258 li
433.423 370.629 li
433.923 372.625 li
433.955 372.749 li
433.871 372.845 li
431.98 374.987 li
433.673 378.265 li
433.673 378.265 li
cp
ef
370.508 397.136 mo
387.306 390.819 li
393.31 390.429 li
394.354 391.993 li
403.361 393.951 li
404.014 397.998 li
407.408 399.694 li
416.936 400.739 li
420.722 401.262 li
422.679 403.09 li
425.682 402.045 li
428.423 399.694 li
430.38 394.866 li
427.119 390.951 li
427.509 384.946 li
429.598 384.292 li
429.729 381.551 li
432.47 381.422 li
433.237 378.479 li
431.473 375.063 li
431.397 374.914 li
431.506 374.791 li
433.422 372.62 li
432.919 370.611 li
432.886 370.477 li
432.983 370.382 li
434.355 369.008 li
434.032 367.609 li
430.104 367.862 li
430.021 367.868 li
429.951 367.817 li
420.12 360.962 li
419.53 363.672 li
419.492 363.849 li
419.314 363.863 li
407.357 364.916 li
406.599 368.075 li
406.566 368.219 li
406.425 368.256 li
404.095 368.867 li
404.338 371.059 li
404.355 371.207 li
404.228 371.289 li
401 373.355 li
400.875 375.499 li
400.865 375.679 li
400.687 375.721 li
398.476 376.24 li
394.523 379.534 li
394.441 379.604 li
394.335 379.591 li
385.139 378.392 li
385.079 378.383 li
385.031 378.35 li
379.383 374.372 li
376.784 374.173 li
375.099 378.6 li
375.042 378.745 li
374.886 378.757 li
368.351 379.178 li
368.761 383.691 li
372.676 390.647 li
372.785 390.842 li
372.602 390.968 li
369.882 392.853 li
370.508 397.136 li
370.508 397.136 li
cp
ef
362.476 372.758 mo
365.371 371.721 li
367.503 370.656 li
371.089 367.07 li
370.267 364.81 li
370.242 364.739 li
370.259 364.666 li
370.9 362.099 li
370.041 358.658 li
370.011 358.541 li
370.083 358.448 li
372.467 355.418 li
373.691 351.747 li
370.195 350.511 li
370.079 350.472 li
370.043 350.354 li
369.386 348.163 li
369.351 348.045 li
369.425 347.947 li
372.186 344.338 li
370.708 340.746 li
370.678 340.673 li
370.695 340.6 li
371.352 337.755 li
371.378 337.64 li
371.486 337.589 li
375.165 335.856 li
376.982 334.042 li
373.125 326.54 li
373.083 326.462 li
373.102 326.377 li
373.66 323.773 li
369.496 325.558 li
369.399 325.6 li
369.302 325.558 li
363.894 323.179 li
357.708 324.032 li
355.361 326.805 li
355.289 326.892 li
355.175 326.892 li
348.812 326.86 li
348.68 343.992 li
350.988 343.694 li
351.229 343.664 li
351.259 343.908 li
351.687 347.329 li
354.916 350.772 li
354.951 350.812 li
354.967 350.856 li
356.036 353.851 li
359.037 355.993 li
359.251 356.147 li
359.082 356.348 li
356.811 359.032 li
358.639 361.063 li
358.725 361.158 li
358.694 361.284 li
357.82 364.784 li
357.795 364.877 li
357.714 364.93 li
355.412 366.396 li
355.217 370.499 li
360.531 370.659 li
360.636 370.662 li
360.707 370.741 li
362.476 372.758 li
362.476 372.758 li
cp
334.246 383.849 mo
334.703 388.339 li
338.878 390.69 li
339.009 395.128 li
343.187 396.04 li
344.883 398.13 li
349.583 395.649 li
350.496 398.913 li
353.498 403.351 li
358.199 403.873 li
359.633 400.739 li
365.9 400.478 li
370.054 397.389 li
369.378 392.773 li
369.357 392.625 li
369.482 392.538 li
372.144 390.695 li
368.314 383.885 li
368.289 383.84 li
368.284 383.787 li
367.884 379.411 li
364.515 381.989 li
364.322 382.135 li
364.175 381.944 li
361.111 378.007 li
361.041 377.914 li
361.066 377.805 li
362.134 373.103 li
360.412 371.14 li
355.193 370.985 li
355.191 371.056 li
355.005 371.092 li
351.722 371.749 li
351.613 371.771 li
351.524 371.701 li
348.815 369.572 li
348.634 371.749 li
348.628 371.811 li
348.595 371.864 li
345.968 375.802 li
345.888 375.923 li
345.744 375.908 li
340.979 375.477 li
337.164 376.748 li
335.626 378.863 li
337.996 380.049 li
338.099 380.099 li
338.125 380.209 li
338.781 383.054 li
338.841 383.317 li
338.571 383.352 li
334.246 383.849 li
334.246 383.849 li
cp
ef
301.247 345.021 mo
307.552 375.285 li
310.945 374.763 li
313.295 371.37 li
315.514 372.283 li
316.167 375.808 li
323.345 379.726 li
328.958 377.636 li
331.96 378.941 li
334.109 383.377 li
338.247 382.899 li
337.676 380.431 li
335.153 379.167 li
334.896 379.04 li
335.064 378.807 li
336.816 376.4 li
336.861 376.338 li
336.936 376.313 li
340.875 375.002 li
340.923 374.984 li
340.974 374.99 li
345.642 375.414 li
348.155 371.646 li
348.369 369.084 li
348.406 368.632 li
348.76 368.912 li
351.736 371.249 li
354.724 370.651 li
354.933 366.247 li
354.939 366.121 li
355.046 366.054 li
357.371 364.573 li
358.191 361.29 li
356.308 359.198 li
356.167 359.041 li
356.304 358.881 li
358.541 356.234 li
355.692 354.201 li
355.628 354.156 li
355.603 354.084 li
354.527 351.067 li
351.278 347.604 li
351.223 347.545 li
351.213 347.467 li
350.806 344.209 li
348.542 344.498 li
345.612 347.163 li
345.532 347.233 li
345.425 347.223 li
339.818 346.688 li
338.128 347.989 li
337.978 348.104 li
337.831 347.989 li
336.097 346.627 li
331.225 351.365 li
331.056 351.53 li
330.888 351.365 li
327.087 347.7 li
327.033 347.649 li
327.018 347.582 li
326.349 344.779 li
323.229 340.616 li
310.362 345.04 li
310.273 345.071 li
310.188 345.034 li
307.459 343.863 li
306.212 344.736 li
306.08 344.829 li
305.945 344.745 li
303.896 343.465 li
301.247 345.021 li
301.247 345.021 li
cp
ef
291.399 332.188 mo
298.154 332.34 li
295.412 335.213 li
301.068 344.56 li
303.779 342.97 li
303.907 342.897 li
304.031 342.973 li
306.066 344.248 li
307.292 343.389 li
307.404 343.31 li
307.527 343.363 li
310.292 344.549 li
323.238 340.1 li
323.405 340.041 li
323.511 340.184 li
326.769 344.529 li
326.802 344.571 li
326.813 344.619 li
327.474 347.399 li
331.055 350.854 li
335.912 346.13 li
336.063 345.98 li
336.23 346.113 li
337.982 347.489 li
339.597 346.248 li
339.673 346.188 li
339.769 346.197 li
345.363 346.73 li
348.193 344.158 li
348.326 326.86 li
346.078 326.86 li
342.888 329.518 li
342.694 329.68 li
342.541 329.48 li
341.183 327.714 li
341.126 327.642 li
341.132 327.551 li
341.524 321.013 li
332.135 320.749 li
331.995 320.743 li
331.929 320.623 li
330.234 317.494 li
325.359 317.626 li
325.168 317.632 li
325.119 317.446 li
324.179 313.964 li
321.123 309.976 li
304.686 302.153 li
304.686 307.473 li
304.686 307.61 li
304.566 307.681 li
301.466 309.489 li
302.371 312.978 li
302.457 313.304 li
302.121 313.281 li
298.103 313.015 li
294.975 314.317 li
293.148 317.578 li
293.552 327.015 li
293.556 327.065 li
293.535 327.119 li
291.399 332.188 li
291.399 332.188 li
cp
ef
265.982 310.256 mo
267.871 310.804 li
268 314.196 li
266.826 315.503 li
267.609 317.854 li
264.999 320.855 li
265.521 323.074 li
271.134 324.378 li
271.395 327.38 li
274.136 327.512 li
276.224 328.034 li
278.312 330.382 li
275.31 332.862 li
275.31 334.952 li
278.312 334.039 li
280.923 335.475 li
283.272 334.952 li
285.231 333.256 li
290.854 332.233 li
293.066 326.981 li
292.662 317.527 li
292.658 317.46 li
292.691 317.401 li
294.591 314.006 li
294.634 313.933 li
294.711 313.899 li
297.969 312.542 li
298.023 312.52 li
298.079 312.525 li
301.817 312.772 li
300.951 309.434 li
300.904 309.257 li
301.064 309.164 li
304.201 307.333 li
304.201 294.127 li
301.958 291.754 li
301.812 291.597 li
301.948 291.434 li
304.326 288.523 li
304.115 286.718 li
299.694 289.751 li
299.627 289.796 li
299.548 289.793 li
296.152 289.655 li
296.093 289.653 li
296.042 289.625 li
292.722 287.766 li
289.136 288.297 li
289.041 288.311 li
288.96 288.254 li
284.252 284.89 li
282.132 284.493 li
281.761 284.424 li
281.979 284.114 li
283.49 281.975 li
281.223 279.708 li
276.841 283.96 li
276.445 287.945 li
276.437 288.019 li
276.388 288.074 li
275.112 289.608 li
275.455 290.86 li
278.19 291.902 li
278.294 291.941 li
278.332 292.046 li
279.283 294.627 li
279.306 294.691 li
279.291 294.762 li
278.748 297.205 li
278.74 297.247 li
278.715 297.283 li
277.765 298.777 li
277.676 298.918 li
277.513 298.885 li
274.252 298.233 li
271.81 300.932 li
271.145 303.993 li
271.129 304.066 li
271.075 304.12 li
266.769 308.155 li
265.982 310.256 li
265.982 310.256 li
cp
ef
357.101 275.799 mo
353.567 273.271 li
346.503 277.326 li
346.367 277.405 li
346.24 277.313 li
340.302 272.959 li
331.851 272.827 li
331.777 272.824 li
331.719 272.787 li
326.149 269.072 li
322.173 267.918 li
318.467 270.729 li
315.691 279.587 li
315.63 279.781 li
315.431 279.756 li
312.185 279.365 li
309.681 280.994 li
309.167 283.69 li
309.146 283.803 li
309.048 283.859 li
304.57 286.423 li
304.822 288.571 li
304.833 288.673 li
304.767 288.754 li
302.458 291.574 li
304.621 293.863 li
304.686 293.934 li
304.686 294.031 li
304.686 301.614 li
321.384 309.56 li
321.437 309.585 li
321.472 309.633 li
324.595 313.705 li
324.625 313.744 li
324.638 313.789 li
325.538 317.135 li
330.372 317.005 li
330.52 317.002 li
330.59 317.132 li
332.29 320.269 li
341.789 320.535 li
342.04 320.541 li
342.025 320.791 li
341.623 327.492 li
342.771 328.983 li
345.836 326.431 li
345.906 326.372 li
345.992 326.372 li
348.571 326.372 li
348.815 326.372 li
348.815 326.375 li
355.064 326.405 li
357.398 323.647 li
357.458 323.574 li
357.55 323.563 li
363.897 322.687 li
363.964 322.679 li
364.027 322.707 li
369.402 325.071 li
373.76 323.201 li
373.972 318.758 li
373.978 318.646 li
374.066 318.578 li
378.598 315.123 li
379.171 313.022 li
375.236 311.781 li
375.179 311.762 li
375.136 311.72 li
372.292 308.875 li
372.232 308.815 li
372.222 308.731 li
371.785 305.01 li
371.771 304.884 li
371.868 304.799 li
376.825 300.488 li
377.018 297.975 li
373.748 297.564 li
373.617 297.548 li
373.558 297.43 li
369.894 289.883 li
357.328 287.934 li
357.121 287.903 li
357.121 287.695 li
357.121 284.193 li
357.121 284.108 li
357.175 284.041 li
358.847 281.952 li
357.101 275.799 li
357.101 275.799 li
cp
ef
373.306 337.269 mo
371.798 337.979 li
371.187 340.634 li
372.689 344.281 li
372.741 344.411 li
372.657 344.521 li
369.887 348.144 li
370.473 350.096 li
374.076 351.367 li
374.301 351.446 li
374.226 351.671 li
372.912 355.611 li
372.9 355.653 li
372.875 355.685 li
370.541 358.656 li
371.387 362.04 li
371.402 362.099 li
371.387 362.158 li
370.748 364.714 li
371.597 367.051 li
371.652 367.196 li
371.542 367.306 li
367.822 371.024 li
367.796 371.053 li
367.759 371.069 li
365.57 372.165 li
365.551 372.173 li
365.542 372.176 li
362.605 373.227 li
361.566 377.799 li
364.411 381.455 li
367.94 378.757 li
368.29 378.489 li
368.308 378.692 li
374.7 378.282 li
376.395 373.83 li
376.459 373.662 li
376.64 373.676 li
379.318 373.881 li
381.217 369.876 li
381.259 369.786 li
381.352 369.752 li
384.759 368.475 li
385.789 366.205 li
385.789 363.633 li
385.789 363.486 li
385.918 363.419 li
389.06 361.742 li
388.855 359.083 li
387.553 355.173 li
387.546 355.15 li
387.543 355.14 li
386.896 351.466 li
384.078 347.133 li
384.004 347.021 li
384.06 346.899 li
385.285 344.245 li
383.131 342.875 li
379.494 343.302 li
379.478 343.305 li
379.467 343.305 li
375.529 343.305 li
375.355 343.305 li
375.298 343.139 li
373.306 337.269 li
373.306 337.269 li
cp
ef
367.33 143.563 mo
369.552 146.458 li
371.101 145.785 li
370.628 141.744 li
369.08 140.937 li
367.33 143.563 li
367.33 143.563 li
cp
ef
373.525 125.18 mo
374.669 126.662 li
375.88 125.383 li
375.343 123.362 li
373.794 123.834 li
373.525 125.18 li
373.525 125.18 li
cp
ef
416.086 53.8174 mo
420.972 54.7129 li
419.832 51.0508 li
416.413 51.1309 li
416.086 53.8174 li
416.086 53.8174 li
cp
ef
420.158 63.0176 mo
422.844 59.4355 li
422.192 56.2598 li
424.797 54.5508 li
427.402 51.9453 li
430.333 54.5508 li
431.961 59.1904 li
432.939 61.2266 li
430.252 62.6914 li
430.252 65.2148 li
423.577 68.2266 li
420.158 65.1328 li
420.158 63.0176 li
420.158 63.0176 li
cp
ef
417.715 67.0059 mo
422.844 68.96 li
422.111 71.4023 li
419.75 72.7051 li
416.331 70.3438 li
415.76 68.0645 li
417.715 67.0059 li
417.715 67.0059 li
cp
ef
422.274 75.1475 mo
424.553 69.5293 li
430.822 66.4355 li
431.961 70.752 li
433.589 70.2627 li
433.833 68.3906 li
436.683 71.1582 li
436.439 74.8213 li
434.323 78.2402 li
436.113 80.3574 li
435.625 83.5322 li
433.346 84.7539 li
428.706 81.5781 li
424.553 77.9961 li
422.192 76.9375 li
422.274 75.1475 li
422.274 75.1475 li
cp
ef
438.637 78.3223 mo
438.068 85.6494 li
435.299 90.6963 li
436.359 94.5215 li
440.917 90.8594 li
445.719 90.5332 li
448.243 88.0098 li
448.569 82.1484 li
445.882 78.7285 li
443.603 81.0088 li
442.381 79.7061 li
442.545 76.2051 li
438.637 78.3223 li
438.637 78.3223 li
cp
ef
452.068 88.9063 mo
452.475 90.8594 li
456.059 91.6729 li
455.896 90.2891 li
452.312 88.0918 li
452.068 88.9063 li
452.068 88.9063 li
cp
ef
424.878 103.559 mo
426.751 104.943 li
428.135 104.129 li
427.159 102.094 li
424.878 103.559 li
424.878 103.559 li
cp
ef
408.353 100.873 mo
410.713 102.175 li
410.876 100.303 li
409.331 98.5117 li
408.191 99.4883 li
408.353 100.873 li
408.353 100.873 li
cp
ef
422.925 108.688 mo
423.821 109.665 li
424.96 108.605 li
423.659 107.223 li
422.925 108.688 li
422.925 108.688 li
cp
ef
383.154 133.26 mo
384.972 134.943 li
386.184 133.732 li
385.712 131.846 li
384.164 131.442 li
383.154 133.26 li
383.154 133.26 li
cp
ef
387.531 135.415 mo
388.541 136.156 li
389.212 134.877 li
388.068 133.598 li
387.531 135.415 li
387.531 135.415 li
cp
ef
390.157 130.5 mo
391.167 131.173 li
391.773 130.028 li
390.224 129.019 li
390.157 130.5 li
390.157 130.5 li
cp
ef
391.975 127.807 mo
393.12 128.682 li
394.197 127.133 li
392.446 125.854 li
391.503 126.527 li
391.975 127.807 li
391.975 127.807 li
cp
ef
383.826 118.514 mo
385.107 119.39 li
386.992 118.244 li
385.915 116.359 li
384.298 115.889 li
382.75 117.234 li
383.826 118.514 li
383.826 118.514 li
cp
ef
387.867 111.915 mo
387.396 113.06 li
388.406 114.474 li
389.482 113.33 li
389.55 112.049 li
387.867 111.915 li
387.867 111.915 li
cp
ef
384.824 65.5752 mo
384.529 67.1055 li
386.105 68.6875 li
388.324 68.7363 li
388.224 66.7598 li
386.697 64.7354 li
384.824 65.5752 li
384.824 65.5752 li
cp
ef
394.683 53.6709 mo
396.752 54.3125 li
399.021 53.7207 li
397.689 50.7568 li
396.012 49.4219 li
394.83 50.5586 li
394.584 52.4355 li
394.683 53.6709 li
394.683 53.6709 li
cp
ef
455.511 365.438 mo
455.053 363.034 li
455.014 362.821 li
455.219 362.756 li
457.547 362.021 li
456.542 358.504 li
456.48 358.291 li
456.691 358.212 li
459.474 357.167 li
459.679 357.089 li
459.778 357.285 li
461.946 361.622 li
467.352 358.403 li
467.543 358.291 li
467.672 358.471 li
469.54 361.085 li
469.542 361.088 li
469.542 361.088 li
471.144 362.554 li
473.233 361.771 li
473.278 361.754 li
473.318 361.754 li
476.208 361.754 li
476.339 361.754 li
476.413 361.869 li
477.847 364.144 li
477.94 364.287 li
477.833 364.422 li
472.216 371.569 li
472.076 371.752 li
471.888 371.62 li
468.475 369.219 li
464.293 369.612 li
464.212 369.62 li
464.142 369.575 li
461.69 368.028 li
461.676 368.02 li
458.747 365.888 li
455.73 365.635 li
455.547 365.621 li
455.511 365.438 li
455.511 365.438 li
cp
479.117 245.199 mo
477.539 246.952 li
477.485 247.011 li
477.407 247.027 li
473.655 247.816 li
470.256 249.328 li
470.444 253.1 li
471.424 255.645 li
471.461 255.74 li
471.418 255.832 li
469.487 260.085 li
471.405 263.154 li
471.436 263.205 li
471.441 263.261 li
471.837 267.83 li
471.843 267.9 li
471.812 267.963 li
468.83 273.726 li
468.798 273.787 li
468.743 273.821 li
463.78 276.877 li
465.644 280.048 li
465.726 280.186 li
465.63 280.314 li
463.518 283.199 li
464.639 286.935 li
468.885 288.285 li
469.02 288.327 li
469.051 288.465 li
469.647 291.248 li
469.674 291.372 li
469.587 291.465 li
466.467 294.778 li
466.291 297.079 li
468.282 297.621 li
468.406 297.654 li
468.448 297.778 li
469.442 300.761 li
469.49 300.901 li
469.382 301.008 li
467.043 303.348 li
466.066 306.86 li
465.982 307.167 li
465.709 307.007 li
461.339 304.423 li
461.275 304.384 li
461.241 304.313 li
459.157 299.767 li
455.126 301.598 li
454.548 305.439 li
454.54 305.516 li
454.489 305.568 li
445.62 315.228 li
446.008 319.69 li
446.023 319.867 li
445.858 319.935 li
443.474 320.929 li
443.259 321.019 li
443.161 320.808 li
439.752 313.425 li
437.415 316.48 li
437.345 316.572 li
437.231 316.575 li
428.03 316.969 li
424.388 323.676 li
428.485 330.112 li
428.54 330.197 li
428.517 330.295 li
427.722 333.87 li
427.686 334.036 li
427.52 334.059 li
423.47 334.637 li
421.167 339.05 li
420.376 350.924 li
420.36 351.174 li
420.11 351.148 li
416.202 350.758 li
413.422 352.053 li
413.422 354.376 li
420.111 360.366 li
430.158 367.373 li
434.206 367.109 li
434.413 367.099 li
434.458 367.301 li
434.616 367.98 li
437.21 368.042 li
441.811 364.756 li
442.006 364.615 li
442.148 364.81 li
445.062 368.783 li
453.896 375.773 li
458.213 375.773 li
458.332 375.773 li
458.404 375.866 li
461.738 380.133 li
461.78 380.187 li
461.786 380.256 li
462.167 383.542 li
466.791 384.441 li
466.942 384.472 li
466.979 384.621 li
467.583 387.033 li
471.613 385.69 li
472.418 382.925 li
468.208 382.925 li
468.057 382.925 li
467.99 382.784 li
467.057 380.784 li
466.964 380.588 li
467.153 380.476 li
469.153 379.273 li
469.195 379.248 li
469.243 379.242 li
471.986 378.85 li
477.497 375.044 li
479.468 372.019 li
479.485 371.993 li
479.51 371.971 li
483.594 368.283 li
484.506 365.545 li
484.515 365.52 li
484.529 365.5 li
486.927 361.366 li
486.933 361.357 li
489.851 356.85 li
492.371 349.946 li
492.371 349.946 li
494.255 344.405 li
492.284 339.771 li
492.261 339.712 li
492.267 339.65 li
492.781 334.688 li
492.787 334.615 li
492.836 334.556 li
495.417 331.491 li
492.351 328.91 li
492.284 328.852 li
492.269 328.768 li
491.755 325.857 li
491.71 325.604 li
491.966 325.574 li
497.269 324.911 li
497.917 321.83 li
497.973 321.558 li
498.235 321.65 li
501.066 322.65 li
506.014 321.002 li
507.34 317.851 li
507.444 317.606 li
507.677 317.732 li
510.191 319.069 li
512.699 319.069 li
512.82 319.069 li
512.892 319.171 li
514.676 321.603 li
525.161 318.774 li
526.32 314.292 li
526.376 314.079 li
526.592 314.112 li
528.688 314.433 li
531.336 311.453 li
531.705 311.04 li
531.76 311.591 li
532.083 314.826 li
538.473 315.809 li
542.231 313.194 li
542.393 308.315 li
538.394 305.481 li
538.295 305.414 li
538.291 305.297 li
537.948 299.138 li
537.942 299.011 li
538.043 298.933 li
540.267 297.222 li
540.33 297.174 li
540.408 297.171 li
545.865 297.012 li
540.737 285.384 li
537.984 283.477 li
533.159 285.67 li
532.915 285.783 li
532.831 285.524 li
531.067 280.236 li
523.36 277.155 li
519.506 277.795 li
513.488 290.726 li
513.474 290.754 li
513.452 290.779 li
509.405 295.503 li
509.233 295.702 li
509.044 295.518 li
506.124 292.597 li
504.259 295.913 li
504.192 296.031 li
504.054 296.037 li
498.51 296.259 li
494.747 299.138 li
494.573 299.27 li
494.423 299.109 li
490.823 295.287 li
490.75 295.208 li
490.758 295.104 li
491.432 285.207 li
491.435 285.168 li
491.453 285.128 li
494.718 277.506 li
490.48 276.236 li
490.374 276.203 li
490.329 276.102 li
488.306 271.605 li
488.273 271.529 li
488.29 271.448 li
489.823 265.104 li
486.382 263.171 li
486.253 263.098 li
486.259 262.949 li
486.484 256.715 li
483.942 251.845 li
481.917 253.26 li
481.847 253.311 li
481.763 253.305 li
478.839 253.08 li
478.612 253.063 li
478.612 252.836 li
478.612 249.688 li
478.612 249.556 li
478.727 249.485 li
480.994 248.042 li
479.117 245.199 li
479.117 245.199 li
cp
ef
455.573 363.155 mo
455.955 365.166 li
458.786 365.402 li
458.853 365.407 li
458.921 365.413 li
458.977 365.455 li
459.031 365.494 li
459.031 365.494 li
461.959 367.623 li
464.331 369.12 li
468.43 368.735 li
468.52 368.728 li
468.611 368.719 li
468.683 368.772 li
468.756 368.822 li
471.978 371.089 li
477.345 364.256 li
476.073 362.242 li
473.36 362.242 li
471.312 363.009 li
471.171 363.06 li
471.034 363.113 li
470.924 363.012 li
470.815 362.914 li
469.217 361.447 li
469.214 361.447 li
469.195 361.428 li
469.175 361.411 li
469.161 361.389 li
469.147 361.369 li
467.409 358.934 li
462.193 362.037 li
461.968 362.172 li
461.744 362.304 li
461.628 362.071 li
461.51 361.838 li
459.441 357.698 li
457.07 358.586 li
458.014 361.889 li
458.082 362.116 li
458.146 362.344 li
457.918 362.414 li
457.694 362.486 li
455.573 363.155 li
455.573 363.155 li
cp
f
523.879 381.59 mo
525.076 378.51 li
525.129 378.375 li
525.183 378.237 li
525.329 378.22 li
525.472 378.203 li
532.224 377.378 li
534.162 373.342 li
534.302 373.047 li
534.443 372.752 li
534.684 372.974 li
534.925 373.195 li
536.473 374.611 li
538.085 370.797 li
538.135 370.677 li
538.186 370.559 li
538.313 370.533 li
538.439 370.508 li
538.439 370.508 li
541.86 369.822 li
541.86 369.825 li
541.953 369.806 li
542.048 369.786 li
542.129 369.837 li
542.21 369.89 li
542.21 369.887 li
546.317 372.454 li
546.46 372.544 li
546.601 372.631 li
546.57 372.794 li
546.539 372.957 li
546.539 372.957 li
546.025 375.695 li
545.997 375.85 li
545.966 376.007 li
545.811 376.044 li
545.66 376.08 li
543.643 376.552 li
547.073 379.697 li
547.076 379.697 li
547.336 379.938 li
547.6 380.181 li
547.278 380.335 li
546.958 380.492 li
532.754 387.334 li
532.754 387.334 li
532.633 387.393 li
532.513 387.452 li
532.401 387.382 li
532.289 387.312 li
524.076 382.178 li
523.905 382.07 li
523.734 381.964 li
523.806 381.775 li
523.879 381.59 li
523.879 381.59 li
cp
494.375 396.86 mo
496.561 396.953 li
498.78 401.132 li
515.878 402.696 li
527.365 395.779 li
531.022 395.649 li
532.196 391.864 li
537.807 386.643 li
545.64 386.25 li
547.988 388.469 li
551.251 385.466 li
565.089 387.688 li
567.046 382.335 li
571.746 379.071 li
569.788 374.243 li
571.877 361.189 li
575.402 357.664 li
573.051 351.398 li
568.091 350.876 li
571.617 344.35 li
577.834 340.035 li
572.208 331.596 li
572.116 331.458 li
572.211 331.323 li
574.11 328.633 li
570.749 326.712 li
570.639 326.646 li
570.627 326.518 li
570.136 319.96 li
566.819 320.749 li
566.642 320.791 li
566.552 320.631 li
564.449 316.904 li
560.037 319.355 li
559.876 319.443 li
559.748 319.313 li
557.012 316.578 li
556.866 316.433 li
556.984 316.264 li
558.551 314.073 li
553.114 310.447 li
553.063 310.416 li
553.035 310.36 li
546.089 297.488 li
540.5 297.654 li
538.442 299.238 li
538.77 305.153 li
542.778 307.995 li
542.885 308.071 li
542.882 308.2 li
542.71 313.334 li
542.706 313.455 li
542.607 313.525 li
538.672 316.264 li
538.59 316.317 li
538.498 316.303 li
531.971 315.301 li
530.128 317.912 li
532.024 319.648 li
532.069 319.69 li
532.089 319.752 li
535.296 329.365 li
539.087 330.025 li
539.155 330.037 li
539.208 330.085 li
542.803 333.334 li
542.874 333.401 li
542.882 333.497 li
543.225 338.288 li
543.236 338.474 li
543.062 338.535 li
537.343 340.552 li
535.162 345.588 li
535.136 345.646 li
535.088 345.686 li
528.682 350.573 li
528.682 353.918 li
531.654 355.897 li
531.772 355.977 li
531.76 356.12 li
531.417 360.058 li
531.412 360.13 li
531.365 360.189 li
528.455 363.781 li
528.418 363.829 li
528.359 363.852 li
524.668 365.362 li
523.34 367.52 li
523.276 367.626 li
523.152 367.635 li
518.813 367.969 li
512.036 376.95 li
511.949 377.063 li
511.808 377.043 li
508.149 376.546 li
504.127 379.896 li
504.057 379.956 li
503.97 379.956 li
497.636 379.956 li
498.898 383.741 li
498.951 383.901 li
498.822 384.006 li
495.426 386.752 li
499.018 390.67 li
499.229 390.9 li
498.951 391.05 li
495.452 392.881 li
494.375 396.86 li
494.375 396.86 li
cp
ef
525.528 378.687 mo
524.332 381.765 li
532.543 386.898 li
546.747 380.054 li
546.744 380.054 li
546.747 380.054 li
542.978 376.6 li
542.638 376.291 li
543.087 376.184 li
545.547 375.605 li
546.061 372.867 li
541.956 370.3 li
538.535 370.985 li
536.785 375.116 li
536.65 375.434 li
536.397 375.201 li
534.597 373.553 li
532.603 377.709 li
532.543 377.83 li
532.412 377.847 li
525.528 378.687 li
525.528 378.687 li
cp
f
474.71 245.006 mo
474.564 245.104 li
474.424 244.994 li
471.711 242.862 li
465.165 242.862 li
465.195 242.59 li
465.591 239.015 li
465.599 238.942 li
465.644 238.886 li
469.397 234.348 li
470.506 231.384 li
468.08 229.705 li
467.976 229.632 li
467.976 226.219 li
465.852 223.905 li
465.768 223.813 li
465.793 223.691 li
466.756 219.073 li
464.293 217.179 li
464.085 217.019 li
464.263 216.823 li
467.967 212.729 li
466.588 195.409 li
462.256 188.744 li
464.425 187.625 li
469.644 183.373 li
469.725 183.308 li
469.824 183.319 li
472.905 183.682 li
474.022 178.273 li
474.031 178.226 li
474.056 178.188 li
475.579 175.907 li
475.958 172.861 li
475.971 172.764 li
476.047 172.701 li
482.451 167.617 li
479.699 164.316 li
479.642 164.248 li
479.642 158.999 li
474.062 151.107 li
474.031 151.066 li
474.02 151.013 li
473.255 146.994 li
471.542 144.712 li
471.486 144.638 li
471.495 144.548 li
471.677 142.263 li
468.234 143.984 li
464.319 146.986 li
458.966 148.553 li
456.879 152.207 li
457.008 146.986 li
467.843 135.761 li
473.848 124.927 li
476.589 115.268 li
468.234 105.738 li
460.404 105.478 li
457.663 109.393 li
454.529 109.916 li
456.879 103.258 li
450.483 102.475 li
452.571 99.4727 li
448.656 96.21 li
445.131 97.5156 li
439.518 105.869 li
440.824 110.829 li
434.82 111.221 li
434.95 112.787 li
437.168 116.051 li
432.862 115.137 li
430.642 117.225 li
425.682 116.312 li
425.031 114.093 li
417.981 114.223 li
418.112 118.27 li
409.626 119.444 li
403.883 124.012 li
399.446 124.144 li
396.182 127.016 li
394.746 132.889 li
397.487 137.85 li
393.31 138.894 li
382.215 137.066 li
375.819 136.936 li
373.861 140.46 li
373.6 149.597 li
377.646 153.514 li
379.605 158.082 li
373.992 158.082 li
369.162 149.075 li
365.62 149.283 li
365.662 149.738 li
368.749 156.297 li
368.884 156.588 li
368.569 156.64 li
365.246 157.193 li
364.513 161.217 li
367.584 167.743 li
367.621 167.822 li
367.6 167.906 li
366.825 171.01 li
366.795 171.124 li
366.687 171.173 li
359.424 174.422 li
358.51 178.075 li
363.238 184.316 li
368.587 185.653 li
368.74 185.691 li
368.768 185.848 li
369.939 192.541 li
369.597 193.407 li
369.597 193.401 li
367.707 198.197 li
367.662 198.313 li
367.542 198.345 li
362.646 199.664 li
364.126 203.182 li
364.162 203.266 li
364.134 203.352 li
362.583 208 li
366.48 213.063 li
366.54 213.14 li
366.53 213.236 li
365.545 222.482 li
368.669 226.778 li
368.73 226.862 li
368.713 226.964 li
367.546 233.572 li
372.197 237.061 li
372.273 237.116 li
372.289 237.215 li
373.083 241.98 li
373.102 242.082 li
373.042 242.166 li
368.909 247.87 li
368.517 252.968 li
368.511 253.041 li
368.466 253.1 li
362.088 261.205 li
362.088 267.514 li
367.296 270.507 li
367.478 270.611 li
367.402 270.805 li
366.469 273.203 li
366.431 273.299 li
366.337 273.341 li
361.672 275.341 li
361.642 275.352 li
361.608 275.357 li
357.625 275.854 li
359.349 281.94 li
359.383 282.059 li
359.304 282.157 li
357.607 284.277 li
357.607 287.487 li
370.093 289.426 li
370.22 289.445 li
370.275 289.561 li
373.937 297.099 li
377.308 297.52 li
377.54 297.548 li
377.521 297.778 li
377.302 300.623 li
377.294 300.725 li
377.219 300.789 li
372.283 305.083 li
372.696 308.591 li
375.44 311.335 li
379.541 312.63 li
379.762 312.7 li
379.701 312.925 li
379.044 315.331 li
379.023 315.413 li
378.958 315.461 li
374.451 318.896 li
374.238 323.378 li
374.232 323.529 li
374.207 323.538 li
373.595 326.396 li
377.495 333.978 li
377.576 334.135 li
377.451 334.261 li
375.48 336.229 li
375.453 336.261 li
375.414 336.277 li
373.75 337.061 li
375.701 342.818 li
379.457 342.818 li
383.16 342.383 li
383.245 342.372 li
383.318 342.42 li
385.724 343.95 li
385.905 344.065 li
385.814 344.257 li
384.558 346.98 li
387.33 351.244 li
387.358 351.286 li
387.367 351.334 li
388.021 355.041 li
389.326 358.959 li
389.336 358.99 li
389.337 359.019 li
389.557 361.863 li
389.57 362.021 li
389.429 362.097 li
386.275 363.775 li
386.275 366.309 li
386.254 366.356 li
385.16 368.764 li
385.119 368.856 li
385.023 368.893 li
381.615 370.171 li
379.775 374.055 li
385.261 377.917 li
394.293 379.097 li
398.211 375.83 li
398.256 375.794 li
398.311 375.779 li
400.401 375.288 li
400.523 373.204 li
400.53 373.08 li
400.635 373.013 li
403.839 370.963 li
403.589 368.713 li
403.566 368.506 li
403.769 368.452 li
406.163 367.823 li
406.927 364.633 li
406.968 364.461 li
407.142 364.444 li
419.093 363.394 li
419.691 360.642 li
413.018 354.665 li
412.937 354.589 li
412.937 351.747 li
413.077 351.68 li
416.057 350.289 li
416.119 350.261 li
416.183 350.267 li
419.908 350.641 li
420.685 338.968 li
420.69 338.92 li
420.713 338.872 li
423.098 334.303 li
423.156 334.19 li
423.279 334.174 li
427.286 333.601 li
428.021 330.287 li
423.903 323.816 li
423.827 323.695 li
423.894 323.568 li
427.67 316.615 li
427.736 316.494 li
427.874 316.488 li
437.097 316.096 li
439.612 312.81 li
439.857 312.489 li
440.025 312.854 li
443.503 320.39 li
445.507 319.556 li
445.125 315.163 li
445.117 315.056 li
445.19 314.978 li
454.079 305.297 li
454.658 301.438 li
454.632 301.314 li
459.396 299.123 li
459.497 299.345 li
461.651 304.041 li
465.684 306.426 li
466.594 303.156 li
466.611 303.092 li
466.653 303.047 li
468.933 300.77 li
468.029 298.056 li
465.967 297.494 li
465.774 297.441 li
465.788 297.241 li
465.987 294.658 li
465.996 294.573 li
466.054 294.509 li
469.147 291.226 li
468.605 288.703 li
464.37 287.355 li
464.246 287.316 li
464.209 287.195 li
463.016 283.222 li
462.982 283.106 li
463.055 283.008 li
465.145 280.157 li
463.241 276.916 li
463.12 276.711 li
463.322 276.585 li
468.43 273.442 li
471.346 267.806 li
470.961 263.359 li
469.003 260.23 li
468.936 260.121 li
468.99 260.003 li
470.936 255.723 li
469.978 253.234 li
469.964 253.198 li
469.961 253.159 li
469.762 249.188 li
469.756 249.021 li
469.908 248.954 li
473.483 247.365 li
473.508 247.354 li
473.534 247.348 li
477.23 246.57 li
478.828 244.795 li
477.507 243.144 li
474.71 245.006 li
cp
f
780.597 239.012 mo
779.552 225.958 li
778.117 219.953 li
773.808 215.646 li
774.199 209.25 li
776.417 207.422 li
768.978 198.807 li
769.11 192.803 li
772.242 189.409 li
771.458 186.016 li
765.192 184.188 li
758.796 172.832 li
760.364 171.787 li
762.322 174.528 li
765.453 172.57 li
760.625 168.002 li
758.013 169.438 li
753.845 166.732 li
753.775 166.811 li
751.619 161.736 li
747.31 161.736 li
746.788 164.738 li
744.046 164.477 li
735.171 146.725 li
735.694 141.112 li
739.218 140.329 li
736.607 129.887 li
742.221 134.325 li
742.35 121.793 li
746.788 117.225 li
753.444 117.095 li
749.661 107.826 li
747.852 87.8623 li
743.543 89.168 li
743.448 89.1973 li
743.361 89.1504 li
740.154 87.4629 li
734.61 103.383 li
734.55 103.551 li
734.374 103.545 li
727.322 103.365 li
720.811 105.354 li
720.592 105.422 li
720.513 105.204 li
718.393 99.373 li
709.614 99.9004 li
708.041 102.694 li
707.988 102.787 li
707.883 102.813 li
701.832 104.236 li
700.784 107.381 li
700.736 107.529 li
700.579 107.545 li
697.287 107.892 li
696.243 111.553 li
696.206 111.678 li
696.083 111.717 li
692.283 112.926 li
692.964 116.665 li
698.421 124.597 li
701.809 125.309 li
701.938 125.336 li
701.986 125.46 li
704.302 131.52 li
708.151 131.168 li
708.257 131.159 li
708.335 131.233 li
710.903 133.615 li
710.961 133.669 li
710.976 133.748 li
711.689 137.484 li
715.228 139.483 li
717.68 137.196 li
711.024 129.234 li
712.588 124.012 li
718.986 121.793 li
715.59 126.885 li
716.374 130.801 li
721.465 134.325 li
723.814 134.455 li
723.684 138.109 li
725.903 138.633 li
723.814 149.075 li
726.165 152.99 li
726.948 165.13 li
728.777 172.962 li
731.256 180.794 li
728.383 183.927 li
729.296 186.929 li
727.732 189.018 li
731.776 193.716 li
732.43 201.156 li
737.983 207.428 li
737.983 207.427 li
744.569 214.863 li
780.597 239.012 li
cp
f
238.357 220.072 mo
238.291 220.063 li
238.238 220.02 li
230.808 213.925 li
228.144 215.396 li
228.076 215.434 li
228 215.425 li
220.681 214.593 li
220.689 214.543 li
215.807 212.008 li
215.767 211.988 li
215.737 211.953 li
211.248 206.891 li
205.421 206.336 li
203.699 210.594 li
207.814 216.034 li
207.857 216.092 li
207.861 216.166 li
208.105 220.052 li
208.116 220.223 li
207.956 220.289 li
201.184 223.141 li
201.184 225.422 li
203.043 227.048 li
203.212 227.193 li
201.085 230.039 li
201.08 230.02 li
199.23 232.098 li
196.733 238.529 li
196.716 238.574 li
196.685 238.607 li
194.583 240.857 li
193.23 244.394 li
193.213 244.436 li
193.183 244.472 li
190.898 246.982 li
190.82 247.07 li
190.701 247.064 li
188.748 246.93 li
188.679 251.749 li
190.865 251.682 li
191.115 251.673 li
191.115 255.501 li
195.908 255.718 li
196.123 255.729 li
196.14 255.942 li
196.355 258.66 li
198.391 259.152 li
198.539 259.188 li
198.571 259.335 li
198.875 260.708 li
198.88 260.723 li
199.176 262.644 li
199.88 263.606 li
201.703 263.132 li
205.737 258.36 li
205.798 258.284 li
205.897 258.275 li
210.466 257.796 li
213.363 253.206 li
213.537 252.934 li
213.75 253.173 li
215.832 255.487 li
217.671 254.296 li
218.39 251.063 li
218.431 250.881 li
218.615 250.873 li
223.687 250.631 li
225.054 248.924 li
225.417 245.416 li
225.425 245.34 li
225.475 245.283 li
227.71 242.694 li
226.06 239.51 li
226.03 239.45 li
226.033 239.386 li
226.156 236.796 li
226.164 236.647 li
226.298 236.586 li
231.688 234.137 li
237.933 228.011 li
242.102 222.494 li
242.882 220.707 li
238.357 220.072 li
cp
f
18.8931 253.185 mo
21.6992 249.911 li
15.3857 241.61 li
19.127 230.971 li
16.438 228.75 li
14.0996 230.387 li
4.86328 224.073 li
3.69434 225.943 li
4.04492 233.426 li
0.537598 237.167 li
1.47314 242.312 li
7.55273 241.961 li
14.3335 250.496 li
18.8931 253.185 li
cp
f
113.392 192.763 mo
111.353 191.68 li
109.304 192.745 li
109.705 190.471 li
108.058 188.852 li
110.343 188.53 li
111.375 186.464 li
112.388 188.539 li
114.671 188.881 li
113.011 190.485 li
113.392 192.763 li
cp
0 0.992157 1 0 cmyk
ef
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 13.0.0%%For: (\604\754\750\762\760\750\751 \621\752\753\737\760\756\742) ()%%Title: (mother-russia.eps)%%CreationDate: 3/20/14 3:23 PM%AI9_DataStream%Gb!R&q0j"!Q8NtqJ9MP.#(r&ZaG>f!";c<Ec"&M91Db[[bI4W+)+gtleUQ@e^TlAHOchi!52Gt'n,%6O[98C2N,d0ja3;b*s1#Pe%l0U(qs7)a_2oa?F@r&e,C>L;hAnIWXhR81e)^PsV;hpYJCXOajcPsl8iK(?^R%hgAK?aDhnR9$gH9LJ1[thl_I^_NY5,^(5h<NNs%[e@QkXkK[r\(gq`[a]/2+'b:<I$T1fm<%*`rP;oX<:c(PR/P<#h[RIZiGncIn?^tppNWV73]u3SH$1$R*o_tQ49+/NO%,h`iJT%)%B)1Pd(R#jGW;b-0Qac@qc>YURNB7$pf/o\ri\N7Fgh7e;":oF77qTZ"[:XcpFke!/B56I-iQooB>'RqiD>aaUO:V.jU*!&#J+Vbi%"iUG?)uT07g$-9@G?V=1a3VDIh8C[=q;!DUQ\AdFD/[^Fs"$3f.GS_]*d(\^2V0f<Mag`gC!s4SOe;EH[L]D`HQ`6RA6J\haVnl*%C;.'7dUfkQV`=`k5McM05<J8I*e]7)mds!IiP&"Tlcupiqr2"jdJ9uM^4eA&U*tq'<e_FRR?ugg*d?@kGJ29meoU@a.5,r!he@:%%f;lB^G$A)?a][YRV86bZYh'qM%GgIo@su5g')h(Fn_m[;n+L/eJb>d]DmTJ8rN85Gf*\-.1(H?=9^7".1MI_%J`g[OUm>X,X/k^.%>O[[Jnh?7`YJ^?E+*@3;]a&\Dg)Br8>PH74ZSUIKH!2`Z59*%cR/"EOrh"9jN-dBrpU'N=rP&2Mr150J]\EeM?0U`-pCFMOiM=[K%KmhhdLSEP\PM`CTq+Gu1pdiE?It)su&$<b7Km-jM`F"MkYIhj6V^I,rn^4]"DZAGWi_G!(?$kBGm>"Wrmd1GOe.e*rf&V[<Y''_[%$eB!6Np^0I^<H]Pc!G78lXtQ+*3iWM`d_hFG=LuC?aR(tBc>Ke#04X[g1J+WXnk!T;q4TrM5'ru`]%5qJ_k]KB);.d[)'j;KbO#!%pQa,%r%E^Fs-)?Sh!0&EH\9nsIV8PZ&"N0:od0G$TD2MJj+I(#H2]W!s!qp/^CRgMh9PM/]Gi5[f<)lfZe]J:r&l%-%kiE:@"El%%:J;_TQ/8/#DZ=CEP82O2mF4>,#"KKC)U#MBl0X-;_Xfm]`r=p/7$--BId<rWmZ.!BflH*[gUQ#'[0AMJeLNq7_Yt#:CmlUU<kU?e%*XLdOl)WDhVMY?F"/Yns%QO<s)e>?507*T3HMg;#_6qrL.W'RH;nN(0FkEkQ]68\!'DQ`42G%ZLf-5i3#_0P$(>7T'CL\OGj58f;%cbghh"8#[>eR$h@Hqe?;!WDfe)E?<gSSRt27NPm:h%-+es.:;?,8tdpdP8IRFT^f@ZP0OOY+6qRThE:=Vo5djgXfab<?I(dqIaDZ%/\GtAg.mWY%K8F^AJ4f1%Luh:s!SjnF94SfjkA<7(c>Nmf!Uq7pZ'$+C>rTkD9PIbn@/>mj3+i36-qX`a+q(UIiNWYiTGM0`e2Rf%nYdIqmQEC4*"6$Ns1I?@i;F=k[eDl>SO'k8D:7/:B45DP?h'c9h]N$rFnSjSq#/Oi@/)FGO,`Z&+=9c>rNk$;Nbs=XcY:u=B1n\-%:PMgJqEK(F[Q7CCbS;HP9Oa+Z??$l9T:sBXp\qj9m.G_gFa8"Th>[+6HflkgM_4saQN(;3]t&+S='F3NCTH4(b/V2<-3)3pIJ\7K%l6$"D*VKGrW7Z_eY<4d$^%te/hqNnsL+S35i-Blq>]i.-YFc1@D>n%VnpeP+*U`q"+3]`Ec,X5Em;2fp:5d"0/-V=3r'>5n7tFF=%[<G,MkISecT75q[99[D>me^qWXU>@1O"9VVJ+mn3A,R^Kq>2Y:q>9&4R_6i`50;!k7e9\oB=*/R&S].4n#2bu)F^6)2Q6RtB5df"%9WMq(+2IkIpGVlgKC(SQ8cNu5+1Th8]*jD];/7P86iUmcb($Z<2g3^ME0WRDd?l:9duVBX;VMpN7!h`L["b@LT`/SNHdj.e[T_Kf%Du1gW3:TQ>Ggu-Qg9omQcp*>5o=W)th9Jl7]+9bh+14C]&+2?$,.Ze-U\6oA(Vfi\clTV#J$s.k5MLf8(i[cF[Ah-%W-*iC\C#%q%n7U*$_7+&K4NWN-b1b&4E52+4ZdSY&nJ@3K;&?tGTGJ<jd/2OgQnZq;-;uR)59:i!"rG&2B:0dD<`s2I7U,iB?meVm*18/G5Al="%U=j5,l4&eX@CL+R*P0VNW=:rhe\:#npBL#p9=*-E`VFB"M9fP_oUgEr+R8NaG.)."VAA06g^]f^kL<OU3ht8,VqW*f?*.9m!2`e"%o&r<=XgNJ%a0!$um</FW0&7s:DMn:.[(B+<U[X_[rcY=M"3Ze@T1,`[[c.,N_6`97bK6A8Tj6NVHJZELD!uJ+%js9Vf85]@ei6^2%Zbaa#eKuh3-\c,ZgmCU6SXgE5qlhq?3&/CiU]0IFX&c^)#;2&VETa:Ld.LEb/D?a8lJf/(ipisS*J!j_"'*p4>">:d_p74\[l$>`%k1gCX?QM\Ch&l!jG>8[XG5kQl2"gJ$lV>[_;6/=:T%[O_Xk+ZDR9HLYU=LF7s)GHs8o%l1(Tc!EDJ%X7d*?4!SSolik9Mot;jl#0%mtH]R9p+s;qBi>:$sG_5N#:t(+a>AJcrKerb3P%FL,29pjL]3#lgX&q]0)o;^H6k<nV-Q^iH3gsAK;_RS8!#HUtM"\9:B3O>LPs)%V_0(W-!PK6V%b<Vr`CM[+*N.Cbr8>`+c^]Nh/Lk\m)Z6;H/!t8!lrF6g2&<9>gW+Vk:h]5h;4F/E3s]>42lSL26>q`ZJEpUT[?%.%;55(0d47'oop)i[YT#633>d\7H$Mtcd>'C=^c'pGe_f1'[P-nnS*ch]G%r4Np:%n,%Qf$Nes&:;Aj\32Q:g]1/PXd"^YA"]YOKE[%E2tcUC`Qg:<8%aU92;BgDg)GGm=$^Mee*/NnD]`K$/S!*RS#mARB6]UNW&n_pQDLB_qdRhpA9LBRc[m'>ERc<^?^_h`)f;J]<.jJ%rY=2dH%+Y2p'qTO6*LlO_1fpamH!&]Qgo[)@>RIE;758?Z,,Budr91j<$sNkF$"[^%Rd5(gV9Q;@)A7X8Q0[)Xk$m)d0W=\0L>)s%E-a,_#?-U4P&Q,`'1CddXXD5B5I^GsCN(ttme%;5NsXM$D'sXXL"7W-fr6j^m>W#Gh4qf(^N\'k4W64$*JMs,]Qf9gNBlm(d.K`S%$!qqXjZebDK9O6,]_\^qHWM@PTq,)P.7Ni[G,"Gss2Mn#?oWR8buljJAl4C*?9jpf%i\B`h*1c6huWs<DV-&u8+qDoKEiPC<9!i%%U5ea/9A/D0;7M-R:7AY(K2<5[a\H^=mojeZq%LG)RnSM@a$R`KS99]AS]=gd;ht,>%&+=Kk_gi:ptA]6cK%e5LFshLK>#Hr6YN6R%_'J3P)@#<0*T)!R]*fI81cjo>s*__<A=MuCn=l<ZD+6hWNn0J:.JjZ25*rW"28+r9$mIPkX33i6VO$;e2T+RW3%B85U$B)dN,%<3%Uhm(6;?"EZ^%PdjH@K6XDNN-dN:ef@dkr8PXk;aA(EVX[^U;N39Gm$>Cc+q<o<ZB-5R("&#L=Z\6&rO<k4XkE0+\ZH@!KN7fjO"<%8kSB*k:Ss/6C!UYgD:G%2JVo2d1UIcX37GXT\8@23W#tadAVJ,DZrS=2%%:lO4fL'l`^>u;u8@6:\b+;T+K])ZbHN(Y1"?%(=Z.b%'?4Kt=<!a"rZrN:q,Wg':>sa,S#bGA[I.2,HV@kP5Cgj.%!9%&,_ip+qZ?1&h\3Bg^RP2:H4mXTU=3%m0tXt<5#=TtDW$@/j_2&q%L>1>Zg2H_#_q(HIfiG;2DVW'<g6W_T[alAV2iUUMY#`!f7d]#nmg]:;o!,1GrnTfA*JMC/lh>.2)&,.Un(_]$HF6M/O4>S3J$0VO%><UjOUou]Aj#u/a>)+H&<it-9@t2D?gc@L]G.,AE4?VKW7rP$mRa_hfmum.^f>>p"%R'7KNdK4merG(^#\@kCZdW<p_*j%pD\"m!%(J@bJ<E<>A;:s2cWOT2&`J4E!89+RE1?i.Yd_^@Y2IRZL=o0Jhr+1p4T4VT]=F!qgc;E4/4C"B)*:Pf4NUL3ULKgg4s%?E9Co,_E%(8'j#GBsK12W_P07]kNBCCj50QQ3NsZ#i4%ac!'(*`sCe+?RN]DqfUlToiT&rn^tUR8#QqlsIQ$ibWE@_Vo6:4Kal@o"#o<@q>W&%.+GLLRtK!0LA51D/i@8k54OJh+J?)3X$JReMm$DMj6P)hEqt*(P:op.p;NLt>Zf2JhTgd'jPiZdG5Uf1(NSGkF9k1bS8`+HJI@![%"P1,oIsecVCN[3ihE4GtW4ZVh7@P]+D0$]!E?Xkf8\#K$O:MKNqWpQ/aiW?pN+1-:'<1qSN5fK[dcXHPP?.$,4\K$Bk@*M#/oL?W%"FMZ_rGN79l)3AX[jDs1K`dm3,lY>o:-X)GR$YoJkP"Y%k?dk/rU'PLs0-ne=$,/oEm_3@a6P@J/%jj=n[^6!qolH2dn!Kd1g7q$%_o%%dr7)l/XBfX#486:^bH,dJ55FmbHeQ"@<da)&crs2+`:1B`g!4]F9g<mA=G$p0f?*3Z&.!9QVYEpjQsB@Wq;EQ"Gkep:PtQ7_%`U,s@X#6&Ni6-fSV)^4B%Sm?3(HqIqoJ\,<T7$&V4;cHK9\dZm?<uQk4,85KgBk(Iluo,Nn=ooRo@:s##7WJrPYJ_oE>m[-@l6js%^^8DT"T4IDo&otRR%$>!;9nbq15o/6`]Wto;CCb)M]9jcSeYBakbL;]aI@11f5H)*S,`!Tm>%g)pR^,Dlh.*._3;e8#CF/McW@=-%S%ZMjBf1W(rO\sXrl0SEG>B9nFH7NFrGh_r_VfZ#?X661(,Nt@)bDf$rbV#Y95Z@Er78Bi0RrP)\1i;mhS1tTn8Rdk+?"O0>2"?"%Ao1u5[5XC5^H^Fi2B'(!:46kok>V.^hHZUsOFM^7CB".Bj?D2a/KXW;L5XA97f.7fr/KaeVRuY4l"BbaLMJ]jh;nC_R4l1?Qb3(j%2dcPdgg"a05Q@LBm2gX\Qp4^O]'s+[31Od@RlOfGIBp2+D2+7^qBIP?F8,!UI&Xa)rV0cEBn*M&T78ate+)I!F5*ep>*seeqh)O/%FEtCoD=:[nr,q=,o@_EqlV$p1kKUu*qMh*=iF?ZdptAF;F*;GJANP5p]=dUH5Fc)NZ+&k]?JYK5\$18Wh<K%Xq!OpOcYr/7gtloh%i31G]b3mutI+]e>>PXq5o>cL/\*#hGh3l<ml[u`4NYg;*DZ)p%mjpSK^2L4"pkS=Q/hH_)D]d:'rpo%Hr:#d)4*c:)\8)lcgX"+!%_#mWLEP)$opc_AUI_2/#YfY1CcLUp7=C:[jpY#DVp/3i!I4-?8Zo57pr+uAPLR!3t2@SpBm#/XK-suClS""oBoAr9LFlOuZqkuFe%#5$!o]n%L*i]m2s4j;BMV1UkDY$:Mrc<=\khK[_dhjV<fH@>5Q!+59ki>^[k-J)jmXl#^1r]U!hF^G*:s02&\RP3Q&q&qCa5Gc]C%f):u[4aOJU05Wo0qd&+NiV3/'4$R)#j%<>m%e!V/b4I3XdF.Wd"(0(h0XJO/7AI:9Q<dj4IcjZ8L$5f5TDd+'`QdPk\`W>Y(Va!S%XkPe$r78J=jm/=qmhXNAQX2Up2`e\hIXQXKGAUs6IG4TOPPNo#HsZVdk2%c%O,N>)c(?)l06_mAq[[l]BD,AmGOLtSJWG9@q:hJ>%pj:!"YJV07lYC]OX>]P6]TB[\'.nPqXT%F^nRh4ZqpmD<cm)o)(*7@RITtTT4utkjZkG5W0b87I4q=a9=)EVSZbAQ52RDt"B4`gq%1&nbOXT#J4\HV,Fbc`qBm^RU^DQ-ul41SD@1HW.OE?SlU4Ph/$F-a[F-KjXhg69MEcOG*Br7o];+02`[0,fbjr9!27cHU;!dZNeY%nAfIjp?M"HUH?Zrrp@PEgfe31]Ml]Kps]P&fiZqD%UB?qlL7gkg5S2;Hi#>2r8I@][u:(FoY\d.Gl>#HId5b(4^"cAgFCNQP4G:E%@ena%io\FT\NjREQ-H/5:BtP*Q7XK<4o(?2L-r;1-Ku3<o(:3F]jADD])-HSR=.in*^0<r^G[kh<uBK]mcmD#bEmU)rB1H^_`W?s%Nur5qs)E.)l/uaCE2hT=hd>0os*-?4il,0qJtnTXrE&7KXa9tXna5cDmI8c[>>'E_D-s7'S`]A-V`sa]^FrQ*jo*5tObAK#]_K'P%<u:RZrs/]+UUfL[5:jO<fcEnt]=%EWo1QRffr`SaU5^$Vpr`C+rpsZLl!X4`ZTA-)bYHOYcYr9\-KcZDOpPT7P-*c0g#%:-(iu,Z%^P8:A43I:apY$RaIP6/o4a]0C%2=0d7^cif]3c=4IQUug?d$D1$hI/\)kkB7pON[Qh-)S+O2!>c*,iFYYA>3B=9&gI#29Z+a_FPA%chj?s+0R?lo)(rB7e1s!AKc=RHaj^fZa5n/0KY3`fCMeQQf5-/Nrmm9R)I5*&t]G:R;CR)#@G^C/]S*GL;3/@YN6XM3ds?N,;2,^%%IG4O%=e=m8eZ&h,[[O^LIRKriE$MY-XSUUq<Eh"#<PZINH>Jtj'+hln.cffhhY%`=kXE\?cGt5.sUpO'NJF&q9cTqSX]+4NoeIE%M5Qu,f&oDqGE9Xk^+<#S,sOWkD'@3ar0rNlOSSg%qc/$e\&Im]L9F9(eCdLlcS!.mAZ3>+?@NS8.s+a[IsDakBkf])h>!VJ?at1H%jjSW;B.R+e&ro6VMJq!OVuDNiJTWtc@pH5i5$qZd*7];7S=V;2J?PJ#=Ya%'7%B9o0r+9,PKLQn0kQulC;s#/3]s1pX'RO:Ru'K^%_u9.>lD&TrI.ZGDSsSt^9s:S@*Sr3h_b?SC<:iH80cY_c:!-91P]ah2s6N]l\mIGY+(]-G4]X04p_c)HHcuGkD9+$NiGuq_P4@p$%IQd\L!FZg#dbB7FMgfjd2rDC6XY/CHD[&d_2k=Irj^Kn4b.Y45+"oiA=M90m&\(rkhKi!dDI:-r,a[Z0_M9*!p6Iet^+ZR(+8i\r%XDC4na@<AZ=(`l!Nk#["B7_`oXjF;Ic+WtEa!1AnIWjn80oqgP[ZVR;mr-O<bPT=u5;ur^ppDq=TV_,E`OEPCqSL7]_,cY*]*jC+%qC?X:*?Mjc]&2]:5?@Y/J%bm:SM*88I=JW0I;e`VP/!@7-hKm7['eM%hd(LgQE;8Y4[1R>';JIX+3")0l8C(Z"P"3tD:r4^mtu@5%l3/88Gc]c:s75P!Ms+6(P_-96IK!<4P:NRYOHf`5jl?cKM+W3H%]s5SU,#O/^>BF?)G8Co%%c`&]ULoXq<6l1-&StfGoFH_s";QJ%MKI@GT)R,bZ/fhY&)>iAHF*,&ma@SmY9SqBan$l,5@^93FV/Ng8,brPq<VbN)GaSa/22')rJS@eq>9U6k2Q6L(Laq2dj^c-gl_2m%$CT41hVYFF^ltUthtob)s4Y\!r]f5dp3Q>P_+Zp1Y;c&,C2A[?mZ!eXrO,^lEt@*-l.<)/USQ,k((0YDEML-"(S9L\A[^J[?;DBo%>q]2Vh7VJPPBGe9;>Sbf#<.tCs1&%NFSPb-\GBPO@CV;9p6Q7qc36Ytorb>*a9*gphj+c#hli)jW&B"n@-=b`@%!T^l,\<fFaiG5%7eN'pp"S*12ca"+a5L!p1Z`$g46tbJqd55.HgUXWS(A%OdlX03?YN#k5KtanH+!/`\p"#1_b[=SgqT-8#KL&PPI7/TpW7Bf4ZMtC%4d@D/rBL8BCGXM,>[80Tp><Cc00_S]#9G4Q+9$e6\")fNbKhNl]md?\FNGOV-0F'riUs0-q!r:,I/'FBrNPO82*-ZF`E)CY%"<R&%FS5'mHS1D\%mdt@\'k`?l0[d$pH."$0iGV;^\+_<nDVXIXU"`E)kFeBb+IJP'@ciB!TRn-q0[/UL[;:p46HC^,AC;Ohl2rJmI[9)%nJ4,-lnFcs?TU/,?@7&H3eGg"<5JS%EbF%pYU\/;"SlKffCFbW?9uc,GjV!dJTJl\CX&()(L8qE@#F9R_V)]ql1J`[`@%u:bP:sm%=$+Zt_t%-hI'^Qk4oKBK>^gudQr1PHrD>oj!Fe4hn9al%rSpp_kNV6sqb,bb>8(>SdA,?6D+;87l<Wq&jnlNT0;7uaf,&lfI@I>u%epb$q!nHs&B>R?,cbOVq<jqFGmS(eXUtB%Q].:X&gC'0Bro)td`\d.MQMJ1!Bs2nghteC)PD:8?]6@;akE8%Fh/)m6OM;<[a9)3`%HXgL`n[i#MB8<$29A03'NQ!i#?gfS\h4.[Yk@Netf6lhuljP40'k&N*het^UZ?@&$``k>-e9QN'XNhWO[r-)bI_Tmg;fanAf2B)f%H*@$kp<G4CS*K?=P1Z6a#^`<DmG[KXNVtXsl2hWI4'\2clZX`0)qO<<qpMs-pGYU;lH<sOM>+1MdFr?^pm/517XaR"gXhX%?_5L-%.k:Nj$gl-0]=SS7\)4h,,2KrOe`Nd-GL%2]<4cu7g<@I<r@`Y*eEHker71MYob1%@[_LWYTH3F9X1a:ZQ$`JU-;__+/8f"!?_8<u%mbUFFT97!\g-mrTJX=%)(I@2gs7g.#eaiUX-h`:@0*^%C"L7dSgT\a,^F#aDI9"]$e,/+fg'euEB<4BDSBi#.s1\?ql$ThLQApT+%?,UY?XuCP`Ie8sg^YR,N`cg[+]gpEFBC-kD$T?geJ,?0l\U33bY!6$6Z1)_sBN"EPT$>S6%-lq/B_'#LrcRC(F1;'eJ)t`uFR-km%Q9PV`2Zqt;p1^eH^OA,cf^rdT`$PESO)a>MV]J'lfHlT-p\(Zt;B@BlCbFl3>DeEtS%ETnJKkQ%d,$t"Z+@UCF`2DJ@INU4S%kG*%Mrjni`Nu$bhYk"SIe-]XFhTl)kY7_g2h"tUn=dP):`KqYdk5qB.kBkT]3MD@MdGjZFeg5D9tt9=8b_?*gnXehe%f=>I=Csj=st<q%jiS-HqDVi,r4KH,IWtC.in][noAaHCm7r)g_5j15'>f%ic_g_Z[C<6?Qg2*[>"mPbl5p5u2`:QC]D)'ShgWMCDS+$TGe/@ZI/7\>%Cu3oM?(&HKF66c\Mk>GM*NhWL:@FN.^BO=Rn/7D;6Sf\FS=9hZg?/@rmcGW?Hcb^7`!LfLr;,Hqbj+j;$\KDU7a9cgTQ.u+/HaV[%]*$s9a49;-a*)iX<.BI<OM_V[,1c&(O$>]tRN:`RT0/QV#8*a'@Y<Kcs*7_[p>P<'Z^hV'0)kp2pt0E/ItOb?4?$:@UR0$XS\7s4%K81P#<:o87ijr9u6-Xk+YV?+@kf2[dN+,WYCZk]8/1/8]TDbO/DIkQ'^N]iI@8;<+NS)WsX6Jc74R'?*[GK&LedGif2t!1j=go4=%NL-\S%6hI3ln@ePT)Fp.o.Q!m?83CpVe#84b;gM$l/o,6=$!<ZgKrIm]T$89higns`1+HZ,^m?%->]\(aia=T6.T:cHLr^G^=S-*%k@Gl$q6\MFj%uS1\_j$/IQfJJJa7\hlK/I5WCj*6e&/_Xh`V1WGl+/J4$TZ53ba1jq=IFfeEn=U32+-KpXfW'hHJT)k&4$fnG5U-%5:gt^D0R@E^fcjP^?r+`RePB_m6jP1i4/(F,_+cSDQRaTk._*pk5&J.V0Mn0Up0CTl.\'Faq&\,Dqtb8qbKGBL!Gb[?3Z;#dbnSi%Y?W2K4T)E=[siZV9]3DV7I;/0%*.kVc1'iF``ZZ_2H,&$_npeFp!0?AIe%%hkFXgUiEsd3<luLp.!(H(T?As/%+GnWqL/(^SPRU/%?JY)*GVH<&D/?TU]mJWA)X4jAq8^16`T#!Y"P7jGFnU+ZrN^]m3.0A-E9f3:q<a`p00f;U81>0.q=/WTRT^ac(0a:U'.e\;p[am*%diduLPD?cjmD2BBgV;LU5Oh/')!7^+2WK:TE[/Z[)lp"IHXW+V*,k7M^4/;2?HrZFJ<s^AHq8lP1B2B7j5*+)QbC#EaffZ)Y&#3[%p3j3E2h$BEkYH#u^lEa.-$QT"j57WKqS(#m00`b!s0D581p#RMk24g0bni%qJ#f*Y-Q``efP9a'b/2'"mt02[^R7aCHbZukQ2c4C%Gjb"IinJAE@>Y?"4t[94I/L,BijfNQrl3C61foeA;CM\h;\eA(&h3kEfA5W7mH)nbo5<ajp*lG1OfO@;<CH,5WF18.TC^;L2[3*g%mOgX"QMg6eP$o_cjl\t*QnSfCYA_\a^::H^cM?V^LZY3*H4ZBVZnPpQPU>_*^TQ(7h?d`[mVcP8M8X/j_9U@"k(?am[Z4F=Hp-=V%XMW8hgRq]!";0tKNMV9im@Po$\$nPnn]$$FrhoG>`OFG()FH7P>#=q;5Vero-]K,G)IuM?*k(s`M7MC;fRCI)oB2mH:H#rm[5TSX%SE5e^XWL&S@DVdNnos!R2PNL$PP)aCFmEZ2ald.)*=1F2]J"XYBVK^#Xj4+f%kjOMC2ntha>^FMCkd68me+m(E+\"`S(?Bt&#c\g%n:NYq+%(CgrV./P_>?O`orYIMhn3cSrRk:6dC`QllrjotrqUVV[<V?>m!&=Cqb(iCDu(b=m.id$4PDgEC@/&XoX26A1chMiG&m95%r,H4hp;Kq7\GkLU#6`Ou_Y1N'3q9oR8IXpj]/7$GJltm`kM(o[e`PHGoXn7A/NeEc*i,^phT+dMlat9'q><qu<*l`aL0hFeoLZ=e%CaG#"T=!<:k^:"O\%(*2hORJt!Z*qOp3LrZbN8$[P-q$`L]J7C\)!>=Q.:RGZSTk7<p&ik2n)h#2m:Qi+$,m`GSgL;W.,_0n&\6_%^SD,66fYFS["BA:99O0G*&mV0r,GYAosFPnH(\[%fsY,U$epZ_Z0#nq++ChI-k,4VLZP?tM.Qt2qWI0gP25U"QhOkdnLF\RIdVrn%+,%b>GOL7B]W$[;s#:LXI;a#CAG/[k:Dq_pDWTtb)'n[ITA``j*=#&QkPbGXW(Q!:%X`&t0U[ZST2Q83o2LJ9\B0TU=f7/(S68c:%3Nq!.9:)H/SY'>K+p*BtDsr9#;)B45FH3f@Xkj5,d:bFO,:^$Z%ptD7NL#BZDoHHTe#@@r^(HbtOXOihit*sE'@ZaGoSCOfqPVNZ%j%br)\%"-_[&V4iYK+b)Ptb+KZV3!W8SW$Ff4N^EB("1"HIl8EC32oGdWa$+@25U*pWus\Qf'KfnC*r\_=-!=g*3[<q!6Yij7*$0%WETb5G#(Dmk7(q,[$I,m;4sH@@DI8cb_qFI/"EZB&^-?=%%(s8>8E+,`*$P@R7&Ut$(aTM78#%IA9ic=Y2R#;V*Q%>5*T]5MM=!b%2G/jk=P9pTQZm"DROa\l_@uN0l6DT1<kdgXNEDV1*.r6&D!+N,Lj;q,1LZ5oAVnn(3M.&)_E=WO:!_;B[9YteQFL3L8K+SM$dN(o%D!Gc<//l(lnLLRfF(-co5r%Q>$j![]i@G[7_e!Ks3b*T@:mkEYbhASJ(8bLq03DYq;_7[BI%p7)CffW]0is*tb[_=fQA%mXQBeo*%D^;KI@JIcQEUrY1/2<.&b;W0*=!f)lAsoIRNEN#u`c2X.']S[>=,-ZMk]R82kac.o4L:l%(EY!QiOUQ*ZabWccAN^HP&D%kbDB62%"(QP"2Jm\GkU&oMmKm%^'Zt6$#o0mPN.h.K@854,frT;6S4V`61Y*;ZI-=/W\Pm#"%"pW8Ebqg2=/ehkbQ-3B/-d;]P];OX(EV_'%VQ$YAk\9!d8r`ESbDX5VM$dJ.;VLVs_T:5>R:&du!T(l]&^7'mmn4VY4?:B*9EX?r3C_s@.8F)V_c!;,6:o&5[?DOX:W&TcG'Vjo%H!sW\8`A[;c-)&Q."%U9k*+R4b>OPgl_`j%ZPPO)$id2[1YbNZggKi+J_C5TYrS^'B-K"U%+GB+fd>@\iH8ke7>?^.aCEl<;Ag?+%Frjc-]a1Q1'DXogUktJX.+0km1QATubQ:G>*7D&@Bne(F=@O/G%NVt[0O)W?`J&6@9;S2lO5mO5:`HtUqBT0X6,(2pattUmL7Jas%k<^jtc'.KW?(!7iKL-af`[(tZ_49a:-qd>e.2#BiiPUL'_^skWf@V9G/<%._B$3;GdVH9I6:V*"98n6Cki&fX0JhE!PNrtkPF2Ur%!mI"1[**TS_Wg]\O@Wbfk7YtOpPNN"qbi@`!r,B$(A=*BM$["5rJbZm6mP#HBJ5i8@2#"/E02[klm0^4YpqINI\G,V$5c;6HX_k!%1%3SqeNet]WA#C.J42@^X@NM9-=YFS`-(Zcpp.ld!];ON3Wb%V`IM2G;\1'77cCRUR8Vh0kA;OneMs=k/-ep"FqZPKq?e8\NZ`Ns%Yj`R4K$]J3/&jcJR?#mS:+:U1AOOZbOcT>oZOm;)B1F^q'XKf3.L`&1K*\O:82<:WJ=$+0nge*KH!'9LC2D")g%2U-k"0/<Oko"(%Yin@0%uE<j#-]ip<h>"VojMPS[qhZK-PoUYUcr2A0#04i;il8:IU(MuAL]bn?tl#AnhuKP_XL3-2B39V?&jkB(MIP'Dnp>K!?&(J%%88-Hb_f)F5nk3H>/89INg1,+Ui:RL%6R(>!AMQ;@>/1&6tc`N+A9c-e3n<QZ7s%lh3nM)Cr;8p,a>2u:+4FWkf]KfKQ)%],Vt;m%OT0ji(.Wp<(aYhKLM"CMa`7<sCQ3/DJ2r]M@"f=&'X3hV(,P6/ZFE.68<q'=Jr#dEQ6eLX!OK=16,8'PA;HA,$"cgX"*73?"^m$5%LoJn@pLR)hRs:Xm=dZ4@ZiH%lBQs_FJKpR!ePS]+aV7$2]I[9A':[0h_\%dYe0N5]L].O(RG3Gm!)ju"I9>EXKt.Y'7R)hPJ`W_U%J3K=\?A+9=/g.A$mYo#/`CuES;+Q@OVShL=!g\Eo83?"ERDT`;Lk]Jnr9".7$j&_"aund28`Ys=<a`*EbOiG,i@D^VGB's6#X?,s%n,hX<?sdr::bo+oR;iEdAX00*9'.e2E0JG=HO+PF`,\B^^aNUT8JMF@cC<2\%,=Ud6(,p/TG@/XYQF*F@(Ci%5S_/S6_9VUO=<7p%)-[Yb99Oc1pLuaT/gKZf7iT=E@(C:JXA'A/Qu!4Z6g7;fINgC@,d\-k!aA,F.Kkt&MB\*L;C"Qt4l,,mY(rm-j-F8]0/bM1C$-rq%Pb\-H4s@LGCc3H'%3J6c3![ng0>`2M!lLpg?DR>N*X[XC5tn\CYWj;)!D6#8#9[E)j!S7_VD_o5_LSI86<FE"1+IuF*<>O6D[Rd'%`@shV=>^2;bsYjEb]-Gg%_c[`@5:6K%%Sq\p4-$$$!?+c?8:kQ?oD"2+`Ot)Cb/t>)53QEI=S'Q)mB`KWNdZ/!")r5`""Y5D4Q,5%S2JJ2#Jo0;R7',0c.c2Yc,g9XBb/Dl(J>!=4.Q"<eFlRHAe1lna3ja&SeR+:32f2@+[VOVPie*A!\;]t2d$Yg4Zo,YZ!!M_!q<0#%42lU*!l2ISVLY'SRg_'/bN"J*>\K[ZmH5fGHB&re6R&X5QK/nM_M"2c!B<JTWc2>lJlj$9>Ff>5$-iM\NA[s]<Ch3X9p07:\3%T:%-p[jn11JLQBW<(,4iMF#4U)/ARk8423Ib#K<CP56p4>?.WX^^aW+Ec)gSH2roUtFoEcUcufqK2B)7P)GAs+^?i`W4IOfRmU/.bmd%PEc?K6o8WlTa^f!:_pNfR-,YHq5CPe`.E_UM+-el5UM[Jpr(*riETfuY#,#8a]T3!c%oU25q>`%)DJqUFc'X+`(`\k-n<6qWNq+(%"emGX,d2Rt:hG,lAjKDu<9e`8X,f>SZ4\(Y#l+LA(4/5Q,[p7@T`\jUgHfDN*0e#S$P/?>4?cW28<<leoV-:KbOA_=&c&E"@f1dn%K[3d]6_r4e`#u?NoF$j'g4_\e?c\m`\s+&-5_pVGIM5RI".!F)@t3go!Acne7):lK+@ILa>1g9_BXXR80M.B8fHOe]>Nq#C/o.,m%#-g(B7L`*!&MgA:R%1`:0aCF9*5@H"kc5Suh3S_+`@Oq<PX$F96%Il/@t.pU$Ar.H@TX9HGg(YN)I?W[&^*ISJ@RF%V9rn@+tMfB%P'Q1p'^U>b:naD=lXeP\O0$lD6@<VgkU2_?i=:&,7)2@EJ6B8n!"76daI>T3)@e5scld#$.S'u2@!GU;8.V@=aBXBtGn%q0:(\m\%R$,D/=AplSNjC@9P8I>kCZB5Y+&s"_<XbV9ne@]*$3q;a`Me8Pcf$2TPi3TK)bMldF->S=B06E.3XHW^%'W&8fBI.3boR?sGT,TJ%H]iQk6Xggt8HA@B1EX3U^`a3"hBnKSS^l0nb__8f/;O/F-UlM$P<&H"$03n=QjeqR">K+3JsERF&ef&XZ^LA:',Zku@pgL^);)#r%C_tSi0kktp4W$V\4/J=-7F)5pPUmTS^f%;C.mX\[9$YUbZ!?WT8^sD.cP5OQ>JfL=j]&Gf-AjuDFP.VK?s+Y*1h=+)&7K?^aaG3>%)o0,!%`[i\@Upk%PZ`cu%s(-V#U+`ReN)Cg71p6?,V^#7EukZj^_0H%a#Pe"">Ff?RUDXm@)f,7=mdXmqM_`5l/@e7_XKi?%N71*%GDCcq.p/*Yfn"EPj/L7$$Orh0fW)m,_%XF80WHin8/0gM?l9J`k#IoO=XnCs1<@.<]sEgCBWK?tiS&l\0a'sp-WlKYEZ0n!mKH9(%-nn4@WJ8&W)gaD?#SuK2&_Yea+mFh<6IS:<,FPHk!6g?L14f8"QBA^sB8$LiVC%N;7Ne=];,C&mc",3r=f0>rb+.%fC8^&1<5Du:%$W@U>;j]nf!\o\9.A^cJ>9Jo$+O4][@55sc$+AehPn&0IAosMTMMY79mF6r-_#<5=_#'YP-$&K&AO0_05)gCREmT5u4<cdiV,9hd%7^XT7V6G@#".!K8K7Xlh?BNA$d?$/86+ejFI("\oMTV?DRjA?EZJ^&7Lo#fA$u^5%WGH!N@NQ%oQ;Tq<cm&Dg'1W'LkVQ:5G_`J%%5obN1\e2lA>kiX)eCk16:[GR+KZ=9JEk>7?9rLlNdaj49ifKP&g1(5ukJMk8l\SBqNYA];3,)No)*=!oQ`1f,PIf)2@[-5c^djU,%Q:a#t"G9@<lis.W[()XE8;6Q7kfobGjBs["l_,R.9/*SJ%+`3B,bQe;;(PcuKV;tRS"aY;$6jaB#K)nON-:Zs$u2`f[1#M;3!-n*%E\COl4!oYqNKtMkiW"jE"d]^$i#U7K&5,;3h;Yu_/?%\:/C/FH_X_ukBK-#nMNc)sj9WF;ZQMR`+?Ib,0q%N7crKKb?mU"9]1e\s%$JerNS&$:_AHJo.Uh]A,Q-ottDC2_h!u.UYQY?a^SeYu#AE:jHjZYjkc'WlTmi4t:<05JE$m$TjDb/'e13jcT3BGoO4s6X^%)=6A%9U+Vf_"**'#%Ea7,f&Wq"m1K@;+cV8(3IX5.L:=U']DFfP8#S0lN1,V`3C1JO2.Rn=.jY0q&T[p_hBX^'+SB#Xl1_0OKnt@@2tAX%!9UO3%*+ipmf6"S8/'1:<K,o]0JT1eWi#OAK,f^U"k"bmbJ8-c@;(TGL"KGe=W'V*1rLV[H6p'bWVR\[@Ai=9=J*B=P"[V'F9/^%%FKuq-RRZ,i<SO"TRN+"hRH;6i7_^U\U?"Vb+Kn+9KCkd\UC`\T82+*%B&a]WR05&Q0.npn'nF\.%4i+*b;0R[aMIdEp)Kk^V*H/I%E\N"Y/eO&)%e?R?5a>S#R\-/u;O1"I52j+"U(.65$0t,BNoMP["R1'(JrqSfYpaF&eWWrh!p8Lp!c*a^R$q8$.CcQ\#?qMV!R'[N%jL8C4huMaP[$a&AoPNR.W7_3=Kn)Dt_rk@@.^D'p>:T7H2A[9G5jM#YBp-!7+f$EKA/lWkV'M@a/<,j`)JLSRd=h\k<@:ClX?,<'%;b62E$qfRb9I6GNBZ1a]%jO$0.4D6b8JOnNr;]D'$m<`YL(D'IOT\F]*u?er;@'[5OS+8&NfXN5'HXB;Y!uf5$I03e4K9!EK/a-3%2Y:7Pc,L2#pN!.2ML$o=?5C?t^N.<p,t6=(-rtm;e&nX,]ec>.\T`pn-5+d%@S=,[fL3rmT[9BZOEu^o'kS#8"3fLNf4W&4_-p/6%E\8(7]S60a<(-X2J5Tt8.cB7,_"XB,(ZK5<H&O'MULo/ik1HNQc@u(Kl&87>`Pk)hZ`r%CX'CBsnN^BS*_qiki3R"e3jG5p[jhrA%mt5[90MdNZ&r[Db^q=EU+>$R$*:3^2K:Vl(17)%bm>T]r?r"e^:;C"P(bOem4kH>Ye-0,-^&so@>$<Xl74![c:'Td\YD0mF<Rsl"%?aqN;AZ'hrQ<U!3?jC)u`Nm2%=Lotq!91N;8hHm:jYTRqUpWHC_uc\$>[XktadDY/7&:,7#Gtd(9-'[='>UEk8.06CY9^JN,sm-(%2i>kWLsDeM&`T^_j[D!ImeDUcn>R7aCbXqg"0&.>Y(f[2Zf4Mq=`gD@UF2F`+UL0(m=:'DQ<j_lS:?EKU%90Ajhg_8A9mYh$=0pZ%,_2lI(79>IJE7sg#9"cn"GCf"HGr;?#,\[Y0TucHof<7jN2[,)`[-EX1jEE*K'4(p8[K5(U2\W>NLGsNLeEJS!=Km_'@Vpk#!Ros%:Al.j)Kc%"H3?#\jooHQ/M!TgCuuH%E,+;&@LE3;UoK&oMEl\/!%)HWJLF'?;[bid_6ZJh9jd*c&QXT!Nj$TF_:og3`Bb1bC9uBA%Ppq6n_hb"N]_7FjT9@ci5,r:9TX^R]Bp7*OmT\D&`+"P3@<Nf(-o7OH!'C8TXWjd^<h4K4N)U;I&0ise-T4P[;.G?p;Ij?TP`*,I%nSF^.;'gh((*>Xn.UdAeg4K9,-Z\dO?rSI<p;QRj;W59akGdf:YCT#J<$IPe)DaZ!/HX.:UKEWm_H=rq)fo::<8K0D75=SRC7%pp%GA.I]K"Y#*f,RM[jL/2r6sr2/;mM?-M''ueGQ<#_7i3"Q'O0rY#?*G)[Oib"<A9:EBW%<<l"Q</Jq[hGPS6.GTpRL3U;D8AWu3&m%5o]4(X3;AKjs>IK6Uu^Tfd8FR7B2_,kfPMeE%CR07eZr,A9>UBH(1gtZjr<="/Xt_^^P>M>ZFjZBISV.-Aco"T]rD'aHUZQdpj+o%IT4#h00ENFq4`6AXO&Z]+RZ)QOPsH$@8)JN8Z_]L\-R\CE<Y_BEUuGYc3eihg1_.:iTUDt@pB+SThU@S.[.i<n#?o@NMCnWooKl*%*8)!R"9hIP20"mSi)LpD#A[r\QCB"Qbu?_AeHr;T+gF9F98WXIQ\1VY/3!cH\.cr0`Wc8'RKH$S0/-7QXG;JQJCPcM8O0_<RCEgL%B6*,:A9/',2/3iuC)=b1k`/UNFI4.H)jr?g*3P@"!p]rrK(r+0VaqH9BXi+p`Kl'$fIVuH(3u?S&[,dqLL78b^0AS_).EnB<`XtZ%7V>P,7an@Fj4#',D[pClMe:MZI4,p7&oaM%;G=:Hm%bjUJ#NOkWR+6E/,g4tMd=i'/>Q\Y%>&7-6MM]`cr+P8BT<'.-I36%rd\>n%Q;3Gj`bbQFj!GVLfP-.MD'6h9nMpTE]oebb(_d"M?;0TV+P!d8I&m8XFA]CmOC3!9kNLHHas3An=9?I&5!+V^Z=,B(GmYL]HB\Ku%'uqiK3l3%k;<Z,8:+B^7nZZO^$AsDB$Y.?/H&F].<VM4d-MB0%in=g.`]FhY1M$-D]$DKW(bn0E+<Wgc&rXr(Y0cgDi*Lu10:Gob%]]>.k"Yhub1=@(+&kgC/(5k-41kpQK9N#Wk]\'9aV9&'*Pj%F4f#+6qNZ>dUa@jM9(pp,!joqMIaHeP8_a;[A7J0IZ$HGt>-oR@&%2uMnQn31KZ4TZIW]M"t,S59Q.]L+YS"[VkbPT&5\Ve1cR*d0h)57hQ9f7G38j*a?>Y),#F0"40FEt)N/*LUq,6BX4.,LqdLPa1mm%)X.?VRZp%h-sn-n:?-JJ6.D'"6O>"E4"k$h9MnqcLjAJW`0!*;,DBYO5uNCjPVir1V@eJ:-n@8;>"jK;^]\9$6A9K>oE@_9+#)58%4;iP!%p6Q1Zk-&g3.:3HnT1rQW!Y5M$[r(AC"D872HQs_OUkY?RLD?R3=rY&X@R"jnTcat(jK)`p>Lg!coj'0'.='+.kmh'#j)[8%CSBOFdh>&a"JF1DbrEb0^31Q%FG6#Q?oiS2k=K7rZQ'7T7;-R6JJoARMng/k&Y=`$#7Je"SjrFh7ceSm"M`[=.Rq5UR+a$GJ^XVJ%O;;7#?&8JD^<\*6pK?i*ECkD\`0??uDWi-Y8/?f0\@m<n"s[ND^+M>gnH-l[&i,tN(k53SXKr8Mc2^7R?N<rR#F8$D_s*#@l%:[J%QB6&:/Q'<R7:/;a`Q6=.JQ7h7Tm_JB+WO*^.T1<]_)MNJ(TT&?H9$OZ1!]W#agOXfDsXlsfKWaXL9qt7\co3rm4t)LMb%510`be2%#r!Ud:Mq!PQ!,[6\^CBBftAYW^HA'H**O!2e?\I7rG5eN3X*u2,nl(Gm[?S'+T*pKJllJG#)7C-pa)=*<0Tnl3%YF"'^H>b9J2up%h."gNE#0d&mM2Lh%[[HN@"U7HKp[N:@.Q*nN]Si=V-P_I.q"(&%8CL<,k2u5_fuq."Ro",59ZtUQKOkZ#Z$W==bI5"qC!>$JV.'L%Krm!C@sjmp`@>DY'E1p?+>I_4gbG))n;NQp.ha!!#j`7k8&jV9i+X27QDHM-G>9I`^P&]jU8A*^<.1`d/AaRS2Xr357]k:`7p-^%%V3%'EF9KT[GfZ-g;MZq]g)$-f(:dj^q%9%E`(caGlrR`L/5eGs49Gs0GML-DCn`RoU#1YF)_uJ@`b-/($qs$C:JV]POAW#I@SJ"3%*<Hg?5`A?<]*A9p70FG;,_-hLOYU`Bo4/+E#uS)C7iEKb^$mZ!ai)56QSW??)#uAs$1Y/24W>N+)&X3e!6kpkY$#8p@od&ERC9pa%Ul9hYIOdbgnY=&;&]#Z<7<^s=22!.b&f[;p_IBF^hIN]a&hVn3>S8o1@O`L"<3)_(\\pe(S5E/>9[!W5-'7h^(l/\:X!A9S3@cCZ%S!]SlJ<:<C;sPDW,H=sOBmj,:"=0*%8pCICi^6BrmS'p#K>&DUa"1LBN5[G-;Ag%b1I+pd"j<`>N,=490kYHS+VARC;%Q/'M.W5\%VQM$b'Cq6`JZ02^F@6"T^hC=[Ai7"-JX9Ldh=Zr##)qOp;`RiR3&SGr%b=4W)%mttiF[0Y+Q=,tj$u4"\29IuJk1oS#j2ZH?4]CI%U^Wr0cp@H.lr0Nk/?)!A^B@#N&Qo388;J''9uI_R9J+6?.NNT_[1S%;:+UccFE_3`gS(1@Knn_"9`\r?)Y-IY#u0B$Na!)l.bPYQ%$ru;_^c9;1LrOgWU4fnJX'n(Lcm5.X6Xo-D^abXLcl,WW/<n+p*Z[48U=@CY,T&82ihT`qn7YteOTO"qj(NXUatDoFKmU(($.G60%B7fmtVZbg0ee@Jj,Ujt_UUj(l@Oa,MkTKG/&<S2L@PE&(TfMJK,)I/5Bk!LQ@(@O%!E2L`7liKHLsHu:'Ke1X"k%c<5g0B4(,sR=%)<SRf-VbqsbVI#b,CC"k1goT&on`<m'9\kI:Q8iE']ecC$78g7+plmMrhcE46aBOBLDVejJSB.iLW^O4!*CSn%+"]q#UP`S#Uj2`%6mB&BUAkeL(_7l9")UH7YgIS$9Ef5[HD@o9Hnp&M*R5pE$km"oN:ta``D+N8+A4p@Xj!C4TID&Wg].tH$C9:;q6H>CAZ;M-3Y47a%llR^SWI/X)VHlg$PY/'=Z":^K11cror+KKh4%h-I?Vp,4N5DT'UL96V:bJgfANXL0FD/$S<+6JT%9n^%4_'[YW+r]CW76Tm<fY>F%hH`3QOt_%!4F<#aZUi?+b]I56INhuC0f8ue:T=IA2L8O0F+UB0N>PD/+C?Q_4<tEfjuhp#/=$9l7OAjMRGnAc/WhZW;0?P2Q9oOE%BJFTu4d<7#R.0GZ+WQ29a`U#LP\NIGE52ga3VOR\2cs@qd'Fo_6He:$1d2rqH@"PYeqd%.OFdLY*tM\Ho4;LW#4tI^Jh[b\?)tm[%(bDAr1/TY8&4H6UX9L?Q9G=ZC&Z9ot?=LmkYVI;[Q,"6!"&)-+T;h+3n-4m0"pQk!TI@Ne)R.@4#h:V;:.O4R5@N#s<M.W7BOF0%%On_q6VO+94NAuru>pADP@$1=/RYX'D&s;H4LdrmmZqDYo*1.aFhkEfW@\dn;aPr@,jt$hO"qZ,"i7KTAb6&+dk0rM@R0cV=abJ7]%c+M?&80j_;KZDpEkfBE%!SPiIW%:jUO'kZJ<J<D4isQN:<?Xh/!>ke[*B?\Nn^3fE'P!F,;,fe+1(Ap/W<Ot/*CqQF64-IUl!cE>%VcPC4S=W(?>[Ti]@(W?LJHjNRN0$qo_SGs2k(1mK8X'K-3&-jO8$XZ_!uHd(1+n5iiY;TCnS`]CO&G$4ZU=pCd*aZ_';YKELh2HX%1bg]k,s[]t8j_0_83TP"T5&2X&7,VnQ&$0X,6M`op6V_>-T*=iL*TpkhSoCcVS7s[`MFcO",dMZM^CfeW$t/TclKd;%SM`e+[us:%@Rq)8Bmb81;1+%!9;lneQ7Pu-[KCS[P7*c-ZQW<aXoe@!,f(3M_:ZX+NRQ/)I?an2!iL^H)ORI9`0cGl!CT^G@M!T$D;8);'flka%]4MC#U2GbT1'<<Zds6VB4:WnTH9g`UfB@5EnKN>mZ5\1Zl?`Y%&d^*-][.&n6Q,Li`"HhUR'CL<ee'XYVRBq`(/.[uUo>,Lr0I=L%(K5oFI/6_`I-=HF-g)LPg_B7),9hh%k!D9AXAahMXK/];bc(nP*N0CLA5GB^ebTU5,;=\!d[Z\S&g*>(oB<m]8M4U&A=.(!WCO*=%eal$E1lDDPobZ8H$h5/9P<aT('B_(G6DHcndkh\m;il5YBuaM6S\bYm,*)mnJ<_hU!7OI^`g?7!oWLe9N;63pio\/^"H4e$!K50a%feIGZ_dB@*.M<_/HjR)XotE93@RF]=h,qI+-mba3OK+ZO/<qC_cueK$oPd8mJJ!ubVW\,_8.soS;Sb1!%-3")EtQo<AMq"8=L?+7%V@8&5ek^'b&-=`LUWSe%]%7KH9]]9Z,\O3\VCGOCKB*9]8J!d;<mP_k,DjHV<&*t]='Q?b6un2&J"/ua`ENVIW?3k%SftgN7;EM#%!"U*1S>HFOh`uJgV?mp-WF:%BL5c5>)YTYhMQWg_aq3K$[8-LaHj7eeBVf>s>N#%!M>2<eot^+=.90J?E"%oZ^_J`m'q^,V*mHP$%**]!h*b`kB3PcPVldKs'_@qe8JFlZl"%a46`(I.)>YsooS8*d/$V$l:,u[H@U="@[Hr#D8`lWHnOdG'[eD<JV5fe&++tj=\2W<*,%7crQ_f+(n8c5p@g_QlmpX(=^/\4h:5`n1kM!R]p4K9$:MOt9R':+@bW#Y*hYo2K:%)!.>^faCM"@WX5<]q@-J<"5gYiE<b/Btuaa%H<0;T,gshlm(jeV$,Q\^"@uoTHJOF26qC4Gi=M<^"siYn'o7-u$rG+t',X+.KKGta.MEk3kY'iQKm;;h%*rJW>[kq\U7*7L;<-\H%)$efL-&3hBX:?]"qcLlEff;srAh:[U=XkC"m?_Qq=f*0(Z3#-T?K4S=CK'B#`u8&cWrBkS8sVa5Q%'bCKriA3XEJU_N%n'Y%l0nW%)#slc5[;%=EeZS1X$VF(J[(^Th!_e;G.E@W0m8eGOa^ud.Yq)k&7K$&i*OmU(q@f<5&a\O<l%$LPtX!Q/;DTYVNtk&<$(Y5&L/YP%G)4f#fRKr1E<tnFmi4^Z,[N66;W`r&Sh*ZfY^*LR!M^Nk=:EG-A7#<L,<RNj%"`%YLHZ#-cq(Bp`X`^".AQ34WY;T@P>q0HUW!TX%lk>12;bJVa=%Kc]G[!uQM3\F(.4jRtM/4G*2s)#oMSL7P3J2(,0j=4#WJDt=4B<Th0^IIbYU!J!Ort;iWDH-;/&BA9`=1U2^n!Rp%X&[!/7?-_'Br'NV]V?B<7<'b%8P<2#9u74s$*u*"SGl$^0p#:GMhR6p3Wc9O;E0NjO?D/>L2Mga,\]d62.Yqg7cT'Xa%$dPj=Fbs%5Y%T*@YJD+k:rbD3h"^6?*6\dl!bQ$%C:u?7&cQ4Q)giu.eg-!X+m>:VQ*0CJX%rP#$,"9R@2&c>_/m3eA6+@TE<W-'Vc$ij%?6:%,g[RWhEiSh'8IP9Xe:++E[#4lBI@hL>#jm@*S.(n!Q<+.:i]o6go(@T;WJ%Z@C<P$rMI#q9$L#(BbE%a7I^um0$PZ@*G%KW9g=Zd%3ik:R>soV7/%=JN)9inSk8cEfV#DT;0c5lUjrF!:1+iBk+M9gth.$EuppDLV0M<[UF2=>'57h!ii4M[+O]`lj+\7j)Z&&["+Xo1m%9>qb3RPB(c1)%G*S/,2M',*T5`+"_:d1O<;5tM\>oeA%P,'1P5ERpPQ_2@2i8]7!n_1Ee)6FY@&[^1!`*+&1d=Qh!D:UBSamAm'(%Jb7/a,oI;])KQRb/We`n'4@D"VX]=CXU7NG#"*u-BJW8o/E3'e*l-_,KLQ.O,a.Xu@ITZ&TR!Y^aU1lXKgrBg@S'-s6o]4[-#g;W%8T`nnU8/4!crjcWGY5.UI>n7_i2*%(Ik#49P"go)^I0:8)*!UD#@Mip9dWgQCE)k5&/q+);E-J[oe@R.7Oi&Nj9"qLAAdsWOuic@%.@KY7en#]1Ua@C%/9XW6QGe^b1stY$b\'U*LM%#uBr$hgV$SJg03]QUH2<=t8PruZcUqms7^*_hpIkua+U3co1o?6V%Xn(r%=O<^%jjRA)=f[nmJ'hm9lX$Pj'n@/W,SG5OFof[g+BT5HqfGFdBX<eR7Y*P.F<uei"TQ0bN[`+a"!kmW!bYu>cUQZ!R7)H754]o/Q0]ND%-mUFPPe+H*KXhBN=a2<rS?Q>O(8$SML[$^mRdriT+G=P^=c5TiE?h`!V0&(RTWeJbZ.E^a=rnA[X==3'XLRQ$.bbmZ%F*oOGeakf%77aq="Q@-%>/Y`rQIYC9.I1S&I]q+sfV0iVb)i%08Q@]=9hWDJ2(H0o2,'M0U*)rS"e4Z%D+p^F=g92<V:H<;$NYr)/Yq`p`fjNe%rs;P^CIj)-U=Ce@l];r(r3"aq0^_T=AQsGMJI1LZPqsBdMdj)9d>8'G[1O"f7am$%.24#[)k-HD*]%GEbWmc(f$$TVX404=Or'Ru%.[8UTAe'Q3Z5CHX.4n-A(Z]&1KTrJ6"_]9;LL<*mS/+d\o`OF-)W'g;nT$2>+nSN]h@[s]eK'`<`'V0DTG78]0N#[E[8&UW'?Y@\%1m9SNZ,:$YYr5(06RJZNbM"E\J<$p%ZM(YK[7)c+do(!c;%Edn;`IOQTEaJ-0QJ6:Z^9ldB'HASU65>g`-Re;)3Xc*Zss-Fe4.Wh%9r!k]MFK..iDff2;+"es//+"@8W[A;D8iGA+SA:3(K0pg;j]!j:=s7q&K3iM`$EOBphI0p!S@0eO_U^br@'O[0`dYD^mHdH`HjoY%@rY4C:7#NV36O!:(p,9]64Z`9q3\rB=k/X?XYGNbiJ&n?DQ;J6-8#?l[$Cm:N"[`X-"0XW5s3g>&S+,$DrnKofXHisU#IJPbj&(M%bR%6^!=1qo5`E,^-ZYmF(+De-Yf9Abb19Zh=:4+DIDeW,BLS=u;S3aGUi>n+Wm.L8.mZ;U^1,q'7^jg^?H]le9jlNkJ1X3J1MV"7%Eu3o%8b$=+U8gi?<e:U-.0F"PAC)Yn];X69V"6`Nd7&uIk$%)5_(DWeI=p*YKlb;a&d4[==i@\s==+t#(jE]%8a-u5-%.(/'*-L-%*%[UaM@W>@,H7N_8=jh/@q)uV\^.=N__A\iT_%3<_ig=K7iMYJW55W)\PF`8H8Vrm=`VA\;M<<C*=BbVMCM27@T,s/Q"(U+STpKP%,q;BaIYg\.e7=A8j]BF5$>!(mdUqe@,U<m]naI)^[*#>rYU+ZqX(c1F\DO.BWRO:G6!N_\XS/($;YkYV<=./lQ#aZc<H0EUq#CVQ%YQCar'pBj6GZH=],.\l-+#"F:;lA;!Gb9"R@'mp?0pEq[5igpT@_I3BfH^TsN*6ZE)QOn18\0k"EsCKo[#PnMKen[=;2C:\:$]0F%#n+rAB/NCWJsN3uU8,h9KEuMU"ON:O]dTig`)uW>PRXB05b'Ao1)[bD_RO##@QgPld`]Y]qE)K[)^iq]]G^hlo8$*QD'MJeGNL0l%9&)'K$sb<?-6)n2\._:WX^qo^^!e16Z*YprX.W;+S=jl,.0It<6Fh&q<"n'gWDT9`ML4*9JI,Hg\J.Z0qct]n1ZoO[SM?J3N#6b&%UB>$_UgdtZbam<s0ZRYR@/!Ub!q-@o_b$pDabO:3=u!D$=Lh+;(NC)#NrXbu>0W6>K-"+I>\KI5(oYRm-OLn;lsD_.o\;^8j>o(D%,?9P[2F:RO'+$6%RpA(X%uY6LLS:Q`\=M=lckWt+VoYJs:*,S7=e88?.IrI_HfZtqLJKT+`l?C]Ns>7\./N8Ni1#8ZXKecS6O!n:%Ui%F*;^f^@V-T7RR)VJCa;*6J!NEZrW3L+q:R2nen&CcL0YT7[!/=XYQjjHmD1T[KSZ11kJgTnS%8*<8UWa?_<5Y/&-:$VT^m6>+%=t.F)Yd%lL"_O#2+cBAPPGus16)_&H4l(YKo6;J'J>8K^1<l^k;=kl`44jZk/TdJTUV8(_s5^fsLb+b7FIj&0bKWt"'njY`J8%#Y%UDZ=[1G>6K`#XAf/G:#j.1FJ>ZjJD`cWG(>/-q#&Q$'r=+q((s/lmJK$P7hC,S5MYHD(D94U@phc=l>TEe9[B#Yq95'4>eU37Xf>%Jbbgt()97=.SNb.W`p)90hr%N?d/GdE2%nPY)_,M&ju=e4,hZVf^h?>26rY58Z88`$=NIajUr9.ee&l%+nY7W.I4@0aU/&>PrTm,%0e8Wi"X0L1,CVGJg+2PmYFNW"f]O_aeP"2a@YlFuC7lscSlfBn<@CGT@FRA6@]l*K<*j#XU1:>s8q=lb%$4]=]WafIk:%289M$Hq%*tI[^8n^f29!R:D:^Z?e;4F-a1!"Agoj/^L,pK=]erQQAb&pXjT)mDU.)>&#AnbQ4i])N@l<h-f-6:M7-db0Ker!G7"hDH=G&8FH%>8h)F3Y%q!#$;gReb<0a&(/fDbFVW0:N^/\!GE6tc/`bo=?ScDLCMK@P5bZdWX^,SG!J.bDO<qBR=oFPEjq9l73bj@TVYq^$7lOC%-"J3Tn3LAR_&X&9JWO_V,0*`lE.P8Z!Nk;>`$,Dcc6tD!$-d*U$%c2@4[fo^(?:PMp6ItP&s9,m`&M377'$)%&7bg7pnQK;8-6%4%=T>=7`HkdB,U/0aUUh<<04ioP"LCr4Lq>*e@AOOPj'jO@c,QJK;KsGU"uYY>lEA>^^fY7ljhIXD&MY+(*%M5W\JaTu,Z1eWM=hf)%\N_d1Z40Ph2?t@)7h)V<U+?LmYBV4HGtQ4;(:5AWEWf'Vc4)6(P\Rm0(HAWIV)e'r)sfGFfb53\Ag:bcXB1/E,T'6Q0O@Gp`#M?j%Q+nPG,+&u*$o$6cF0V6`_!j-/)9eXl4q2TUB%TJ]OnrOAfBs>>i7/<UOC/mZ3H=h_>R_F0g,4f@`,l'f;]?UGbq#d,W8>QC-"'pK%A-0r.5R>BUEGV@_(p>5d3!UlI(W4Ee;OP;p5$"hnHHh)kB9RRg6_\:u-I[k;ct,%)_4ZmUgfBP,>E-b3f!=>4=0gha%46hY1j\qJ%krg@O<X^]:iH_hpCGc0W`G">,ni[p1=:5GKe0#:d9.!\PNDoquWc?NQK\6@#WreY02T'i,e.6u7Xr+&h,^^j);Q%5fd7S4k8$b<4%OW'50oL^i6e*7-2JlH13(.5>m'!bbIQ:R<Y^mM5JX`U<m7G<Us4,tlB66L(l!Hfa>E\j47@5c,=eJ,<-EQK.Z2KO!tZ1s_pC@655%+YqSAV%p_)Ttr$C,`4e\Cn<*%/>_'OJS.(@X].&7Bs&L!bmG47o1"CaGYBhq.VE<1e%C49hAib)14=t8T;@K8hghtP,d/\\@YVfd%d,8Up'%(W2>>7c(WefYbJT]X6H_$C-"iaes>U(D@:lJFi4X"^Ad*Wa`n-6^2mPlnZ4Y5Yt-5A4cYmLXg^$s!?[=<G'S/_t`WZgS`%2ZsJY2_8nuM\52eJ4R"sOV.ttf)W=*ae)-3WA22G+eg4^@pTp)8RDaF<Auj"GI!?N%9+dg9J`p^bKW#gFjnDdPN]7PAjte]-Gh4G%lK##lRK`do>E\;#;Y:eNnWFSOPba+lQ@um0b#ES=Qip(,MrEK5_P^g-A%B+F8tUe(%7QfKL,s2YUg;0_=0_ZhTsbn@'Ia3Ia9Zle%e3dKuAE7-5RBq.e&D\\M.q)\&]':b2,F$@BNkemLbn(NZAfc"`BU#cR#hslK"L3u,hNG7%;Yp_<!$[0u>_[CPkXCiRh,pKaqbG@X%?I(MkV;[)=[*C#G.*T=tDE8JZ,gFJq=HOqg=&&L<Hr4G`V=PUs9$_.I&2Vr&AsMZgI#KfBSRe1a&SK+?8O;71pPPpl#*@W(ki4FF%<@<$=9+BR7Q\lN(]*WLJGdWHd+k#j[ZB>s&M[=e7^IDDE7(%<qF=/NCeNG"b#+s?B+RV-oJZ9I#S-YL-XC_dBJYp3E0r?1T2Gn!B%)3(-56IgUVQ9,jC91/cj-ODe]]\S+I(6XXJNmpsaE90tCK2FI^3-NdfR;9&5ek"AYQQ#,s779hmH0#Zk)4<9ZR+V(FP%5cLEU%Kl%']B+^=G=+QA"%?hpDa@XC#M:P*/f)p-(,+bpD'0IOm.jJALp&tHcG-d]$S]bk6?O:GQ9#f)Slob1sT;T\LqI+lk#8S;37<p\Ha]R%4K'Sfn\oDq*'`;&ao*X;_na=0&9:lG<)?5.;$`S5/D&hlbOdik,*M;ErT*>H.S9f#(\-WSNMMui=j2O:_/tiU[$DIc_^B+=@S%Hj%dDR05!V92=O;PmX@1uLMM$RfE+Hsg'8qCu2!K$Ygif/?$e.fmTUFQk`'/?`l@jiKn4SUn0%.VPD*^V.D`+dqXdf<;h"mb3\C9J$&%@H:dheT3^'6>K2nX,nhT#pW"uVZC9s'?_.O*Iam](Jp:cp]Y+#aK:Ve$t.<Q!2^Y^FFH8uOj;4ZM:_UFm4LNLTT2p-W73nO:n4VO%>D5u.%?.@:)dCet$'C0T;7KRj#%#5M[]I&@Ql!5ON1&g?5e6$1AQ?PJ(p[;()q(k<S4E+-P&[0Z>,eHNYc=[`),&=6)"?gj\g&>S%lo_os@OXV-'\HGAg5lK2ErplLMb#4(-A8_cI+j;XFD;P7YM&F`/Zk2"LkYF%WCb-G18I0uI[K>1;g:"J)Vn#jCuq*SqAVe`@4N,^%.S<EH>+[^8Qn%;N,Y'O6-PFQOZ8?@5V]%*9Uke#-,;1";%%3$#Oar\.6Zg!ek@#1tY*"R8pSI:""<`MT"D88B"=bn<'!/q1<%*YR%*Y90@knf?Paq/G:JRg<#X^t<\*G:=('`X'>Cj\PfP*@Ff1q!`!.(,Ka0#1:&LDN#k"8m2QW`-PWK[`?T7:2<\@S/ID/Mi9nnmEY!%.g`0e*_N2jr(M-4iK.]H&7o73_UZ1>OO0sT&XY'&J@E:-DOV:O#8)bI2hi4S&JlJ<V5+a?AM%I?]NWI6:djg#h?PH8A#aDbd.nNl%U4aN#5\<]@=%I!d/dK\pY#>[=J-pT?!#:Y+.8$<;3GMhqhJ8X]`25E-W&b=T;njsFSP?9$GVKen+c(JOO'#[sY9[LRau._CGfo,o%H+`dENaD;k,^HK>;tj)rN=8([Vn-O2(S`4J'Mq:.N7CKumnqoZg=<F+M(>iKU26+I=G`8EOXhbB]K.kuQ<6ioM5gfH9>srM@&@0Y%5]Ud\,";f&Kp&H(b9@+K[h*i4+#PjfN[PUP\L`YF]/jCdB[d)1/@!J;&0i?cWLTl4Wg0\8jD0fT/MG)=:(cgW]MD_u&"3eo9Zh>h%Z/Q^p'a&kQP(:r&%.e5a9'h;F='4Sp`t<n)/?\8rW:P`K.i&sRiE>?o(J]igW%"<$@<"lg/eEjWccR9paIl?$)orpAU&m=d$#)h%%[FCYJa%S,^s2>OPB?Y]PjXrBP[*I<KFb(f9E"a&j)B;EHke(P;pBThLiPfK,[RFM*;h6[rgK,QMFfUj(YnhsOnpiHb%>p#'^AsGn%PuW*e3qMgBe<nSk@:JjaqPk/l0eT3(DQ9hVHbobVKIKGo#Vk$QERfd\GQc1n&r$CB2?aq6Q/iLoU(@un-S\e=1)K=W^j,_f%)<c<%?+7r^h7-iN0[bDXR_VQi9[$)hcbRJ5K0n5-OR#Xle&-sB@U\),>+6ItLBL*:LNaMi^DIg:;&KNiR>&GD1%!&?aWB^q=H/$.d9=kR%'5??8Q"Le-DDhH"h9U5>e>+i,'m/_D9TsXbjT_)N8BYQXU=n5Ajl-@3pc@tC=eABGn=f-WecH"%-\]OPAI*SeTSqjZ^<sCn8$gI9%S_*b=+aJto#`KoDN4h."PYfOI-K^IP!Zht89CiuC>">U#'e&M;$Hch>B,u7^oV]LLlF"Z-0<7Lj[_ti@P<qXH<'ZUulFbCIF%;/n%*\J:*RB;Dr(bICbKC;r:-?\/ek/>*>77Mfa.g@V(#oTi9;J/Z;Y!u7A)q1<RLKo[D]ZLYERZ2mGWLDtS%P8fs7Za4#$l0\>g;oD@%BP:e4[0J%POQ_LR'I!HPADK;s&Cd:+<IHT2oJ)aX#4;M%+am`:c\PBDGD8M'd8('7BdP/b`-SL^7neRZmP2<:&ORsaLH;8WC^S)l%8fAs0<&=`TEW@e>3?46pKl=4q.]bB:nZjon:Z?qf\sfTD!&Xsk&3fiuULF?8/12YA'#XN=1asq=$C1q3T@go_UVpAoC^dQcef!h)%.PPFVfs5!6FB;MN3/E-c!YZ4IW)3bgO%#41?=B)2JSA^9W>;!O^uB[8I&\]"'h*0u!(en<>W8e%J^kTpP8GKX=cc/=ekBKei@^s)%!__C+Sk]\(Fd1'HLB(()q$Jf5GQ8rh-)Mk'.PKj6+DKpUFZlM$qLZjQR1<;Nc%&6V";*+4^KY9.Os5Hi"&itU(D?F#<&Si];c:[7%0K<bpd\iGXf5W5I.i[WIhSiVf2GRB\jJ:oj0T2;"@U)A<Xj3cGOD*C!(`Hs'P\25<@n<=IWp\u7%s1P2=k-[*ckh@7&#uCrP\"dR%7k.iJBCf*H[<2]H9/T"0KW_)k#Km^qFX@.e^h!7<_E`t]!2I>JH'tk+4*ZRh$D60L6jP%YQjW9"5cW0A/aECqC'-.i0^H8M6fokS%5IM%L+01mJ@jh(TFdC\0Yo5(k:s[ZJc>3gCM3nWN-Y/'$Tp<1B_JF,L9hE.AhMJ)G/[2LQ(GN\CMd1u4:KV%7icYDn,82cELqX?4%3(mMM/;Ahbe6tD)H)[sM"NKq;lnC"n!)2ZlNc,W5,<l<S!6g]T37c8T-kgAH!OBXS%asRQ`j<;dSXCTM+/4?.A7\eh<6;=C-SDG]%8kfn*XLn[0/T^[kj4,]W6.onlb^k%re_6S>Q.?./M7Z/./HuDN_6Pn[cm(k.4c69K,/SAb5X^a:1UdV0*AWjYV?8/F\KH$ZeHZq+%LC1k[LD4Kh5nZK5i3Z$09DT!J0/Pfq'nXuU%SS@UU(4SO"tkt!lG@O&(@".sF^\.$l_preeUn%8,bME'i"=.9=Lf2;W\\h:9:[\T%-e8Y;e572YK**TZ\Y2>uk\n`Q`JpEe]!LE96O8gH9OkG'+LYW_-oa;1oIrI9MFISUPm:P_U059`Th_r9j/%jQUpMm.[:3J*q.0:Y%(/1\])D<Z5-W:[5"F0K(&P8\!o1hr-_o.p3@N]kKD+IfEO:#TQn4mS*,>"R2bpIE`!C71!6jjDk#j2RM38+'mCjBD<aa:.#NYDJq%cmkDCNIfnifE0"164A_WYUGQZ]aGOAL&us;bE8PK<jXlW84Z%ZLI/C>@$#JIP/[8pUtVc=D/"rq,8[ENfu.P,+s@g$/c8\UM#;!i%j0U@I\S,BX70D#'0OP<8B#92=9<fi]71*7L<$<D#4pjiOH[oej!#F+1T?7eB\?Xg<+%sSGRuWF%P#4RC5t6E+a/cOE5a[H`d8:=l%^#)A[9j,e.).b"#VJ0?s''`WA,1V4NBFuAA8HDb*&E5-H02:DYP[k52Zp^cB'Pq5?>2t2(F9o(J"X8YqabYh44"_]TU7K;meMGH`%+Qgiq:6<=(b@mW&fYMmeBjQbk0/XQDZ(gh.oeZm"Z<`bd=V`Ot>u<MLC%_k+g_YDH.q0BF.N\qB99DH>+*F%8C)KJ(UXCYtOnkTK%c(um;_,mGtP*CU\5nl,M5Ub9TW7=<k/3>PbS\u%LHIfKs"bfIb)"Qg4WJXCY*YmQ3UT,ZXVEkOl'.!hTE1k/@=ilr+`IMD%0qTr8%$LMjq]UStVQ_JiJ'$>U?(e@"f+t&2_-m7o?BS)qo$^d7?Y-ZhJ-@O:!ho&p)k&'U5*c5)>&g/Np'6U'I5eNj`pGPsEElGsu;J3s!%p=[D/K"sdMJ>*fRU/hsc?s4EcR*M\BTn!DY2cZR,3ia)b!5S6jN#F9T$r$7TJ?^FE0IQ!d]T55a'QDR/\B<6VS2n8PRQ[>O@B7mK%N.Re)eY4MpM%0]m80T<$G=`t'cLP"lfFq'j?3m3eB"W*jQsMFB2j&JCcQ\:r`53TeB[l)Z]M=@%djQ>#fu/3i:6TT!@jW?Q.<JM7%Bk9UecNCIB@ks&+J9&1_!Z3.UQl`4^(-!Rd9P%Qh,EnBp69_NGj(NoR8P(d@=cu`,WA+gZ/d4[M%@IU@peN"VRtt4lY\(SiabZkT%DK'0_32iiP#m3?@C'Vu8:H>(734!+6Xd*=!.B3K&+1)>ZN?BtE)+e&Tq:D[C;:^o<oUV!3E2=E+37/B.O0&^E"eh(u[q)R+9$#"s%*,ulQ-WipP;/71.?,^F^`sQXb*$X8MECGTa+j_`-)MpqbhAi1TEWg1oDi096$K?>3PpM"a#duo^0n2J]=Td'@(/d"L&<`lFn-217%/$B7HRG9R9@fI>bSB8kt,R-J6*$Ji<E=NkG'$ehH$,irr3'*JfU:PlNPWn[W!XZ$ic,WR%/]@uORZjM?`@k&$)Whc"2Ug/P\`&q-%?-'Dj<pHkZNj*cb[(6Jc]dV2uTJn",M?K`F]E`%7^#*$eO]fBpO[pt2HJ#/_,$H(+0IR*nE+\3t.(QlWXt9.<R_Wg>SJ$c!3eCDd%V:[D(K,uUV=Qo].l3G+!,Ug/hqI?<FJe:&[qRMbUJ67CsM50WGj>^);Kh*l&Q&@^N*T-#s#o?kJ\O'2O2jTLI<$6&g:m(#`gF@^t%Q;H?HE.YtCA(*P4F&!+(n6L@^>Y`D'q7Kl<,8Z&ll@N\PnPFr2'P"OrLGE3_1%*\\Pc0]k/dZbVq;HW,>QlMkKe-64M>)8g'#dtO%KqTc\e)FbT/4lXNE$dgk+chgK5QK2*#$[m.rW!4Y36U(n*[R&Mk@$84&qL$;5FWHK._lE.N/puTN@8q8oKnJVl+r)L;N'_7C@d"&%,Aq/HGJFTb/a67H>.fouUuhh)P$'UZORP:rUaL9_C?]6urA"gcX+72tRaRB8Gh!'u.Sl5m%&d,?bN_eFWa@!PW6i.Ne=[*#/D$WB%3l_Z#,U6l;9[RsPUb*]uN]N/43D'LrZ,S[%MZ#5(n69%sJd<#Z-Mi_R]*L6/+-=(rGca7UDq95%\/>@4CE218_\'ZO`2cUc=6]e6%&jf,fF;/2d<0CZT$,b78_hrO><<L:.d]XKeOk7_GdqD]WXXVa[b.!:-T9ke`pU!Ob;=tnnZ&P+;`rpGi8b6u1+:qcJ!#:r_#=saf%Z(*g$du:&,;DB6q.RYQ`KZ,;ad4qU7lm!^MPK!kY]"E@T?kn7ISgqJb7NK!l`2\Q2n5Km$S:je)#FnW`,aXVgS<+#!r8Q!bHj<Ja%V)=T2,,?8uksZ8lEci`OeC5YMP2bDr]&A;jE<Su]\#`"@s(2H<HQ_Xp9WD'*Vt)%/Cu@F]^]MJd(>XXe_!:!;ISQuY\?=(%0gsWT%G*Q'43@fnQ@=hul.a/!in4QI9*+Q?6'$7_4iW#\=?$7c%ZKAeI3:G3-!MlB)7eePZU_*W&#kUXf+jL4BA3kl(s.>t*J_j^IT@re+%=d9m^ct-kQ^-m4UYDXtg@8o>(_FGAk?l["Q=c-<V1>5r4K?o^0<(//c.UfJ3e'Y@cASW<os.1.,o#k(%H^uar&mdML_#+7R&1icB%)MnaSGb$mu</pm_;kKS.?5f7)'',T]=SOEa#D;]oN?9IY%o(,t!#cQlWTPdtAduN*kMN7hpa09m&:H@QcR-8D]1No,+O5R$=.i]A%,2k>hqZ$&d`_dV<Be7,a/_uZuSuMs-q`4+I=D7iS!LFG*a!!M/cGLTF@Q_=Cr&&N/Fqs^-8nP[QYJ9aQf6/2>c\u)<dd7m0#U;I)%oOSfZ=WM!\DI*ThW[T!/k$3RR7C2ab`93laS7miSI#'b/WfLgp@ku`)Mo28K56\lu&<o5eYc$gT#g5P32Ztobn^$S@Y/qZ].F;:H%M-&KB/[43G]u$C@occur=`tNZ2"HaAY[2q!q@$DWYj:gIa,8\GHU\_i5*%rl%=2$sNC%"X,4"4Uhc\2/97?T%?.#(u'5l^q/+0LU%,*sIsAJp`WS[r+S8Q-pPH5Q0_B(/He7Y&Zq:OKg60u\(4`lZfZr24NM5AB5-7L/dd^#r1$mEhHWS/?mb`c(A%_@np8(%7kG!N$)e%=IKl>:n&.7>2>#8jQHQ.qeVK;Kos@]$if15_J^/IC-;$*V7rXrQVklg"\[>h"`.Vs[tTO\hjCH(Kl(:X7OfS)aLg"<_Bu-s^.@Bb%Kfo@YoWT9(_*_>ZdLKo2Dd$lhLMNs-.*sjb8<8sX[t/gm:GbdUJ):+L9/g36qFUsWK'RP:HV@B;o3mtt7-RW@F'&jmp+fJMe#@l+%KF%XqkUnd\e<)PK4HKgX_@lCJOp;V#o>k$ql?4C!i1Cbg#':,%1'sbG/-1QK%NG>Fca=.(AqW3tE;DfPA9]%6I@;FARruVJp,4g6%0bT3`$PUQ:UWg1fffX=m>leYGn1]`2@=^aRA@*1S5/$"m?ljhej$7(UH>?4fk7hUN9:a'l6j+XSkdDr?G-.p,b>[Q7Nd$eRVVa3]%$YDt>@2ti0CA+U;)UW:'E$:9Za#ql6(M:DSG$['@ULb7_"EfW'8je>U_t8/-@ol8&_IC@2TO_iI:^6C9kScj,h'QA+5i[X+LF(k.%L\--G#G<DQ9/9r4<;MX)d1K8V_D3?BnrftN*f3:?=\oR60\4QQgc](fW-*TW.5OEu[Zsh%0NHL!`nWNg/-2.1!dS8iVVDEtNulEd%i*Kc^YQ"jIh/oZNNPZn4d\,o/-'(B%QHA5<J]^T"L8/Oh9$`AHZDlXF?36MRB<]cVjGK[U_uAJ4I?gg93eREC59kZugq:m0H80<!%h=)D],%`)SFbQB337RXZc\gX\.^&T`19jkhW!WTJYJ[^\7dJ4V1fa]W@9@&$l1"HT$X,h/[/d1pK3F=7eIEC"D\b:taFd4doW!5?%0W]T:*#L."CT:@A\V:#g4k??k]M<>qeRKU#A,Btj4m\fAVL#1,.PO1ta(^f2Ppk*)Y`K5Hd[Y+B'k^s6ndE@3i#`4?@^Ci8DL'cT%#KJr9d8$4j//Y_2]k/``rN0(GnXR5$BkM:A_T%kU%?4QYr(G]S+qn%b.%:sO\Da@#bGG$ejc-n0&Yk;`]J3L0e.!&tV_L5DD*rHV%_uS:V]B`peM7GMZp<qF^ZcW_b\K<$bS8@!DQB&knD>Ccq@Lu271Pd8Fd?$m@\,pm2/Y--0U<.fE!:'_nJjHL]HJa>$Yu"_C3m#ro%G*p]=N`=??S8AR"q[+m(MtP*S*ue7rcpK)h:dYnp"X6kGEl]BD-MKqT.-QO&d]cVRcp$cWF>3+*1#98LY52'@k6T6C0=iC9E#mDS%*$WTn@B%YImijDZ?=u8nW<7Em+,MBEJTNWCZW76&@sA(?D]cI8&aEBET[sc)rW=T[#HD9\K4't?K1=sF8+2%CgCqsoOUstu6VhdQ%rX`d?WE+dX/=g`_dSt0QQ\&"u8fY[*,RBDl&1O0CCg=g_GYsp963r<<"<2*T7L<.RE,NZBFrtD4.0@,)_,.dU35r`YPJg8IcrIul%_"tr!#($fefV>ZTUHqHK4h47qf:\r?XTX%5Pgh]0-K)\078M79%Guj_;@[;U,%2H[?rrTB:G[tiF'VPmZiQa]NVn>X^auDIFQi1=%L5B>6HGca^RYWRi[$.q-$`2#5E.HNJGG5:o-jK!KdHAp<,_^YT/crKn0mJu\b`btr&%G5M6A#*kH,N1ppX#e<DQU.e@LM4<#'8$]%o(G,8)V2;K:\T`=_;+TZ.=I;E4H>;OOYhqfi7fglit5_C=hQ0"W#@1I#d7SPJP@B&O0O>+J@[.J$.#nZ396#e+Qg(khp_)qA`ClK%:tjfl<3Nt$U0oDn7!F(K:uJA>#rld&TN\Tmd1)@`%uY/)JE0=F?#r;CCueCuEamnoE<f]Mg=q(IOrEjE;FnQ#6RB9(2b"K=YF6js%Udn%rP'A6WB-#jlp1=;/hMj:60T0EgCq+2(0n"h_RZg3G6B:J11YNkd]$HF;_Z[j1d2]#q+Ap%60G5'f-^>IE:M>+!=U7/p#O1R"%'qoNsR/6L%;KZ6`!_JBjfFpr*Y`cfol0Nqs*T\9qM*ibMW^o_,/4;:>0d0&eAF]2;VD)1j^L?9YW75BQ`;*pP5m^).8J@X'"b(=<%<33<WWnRqU*_(tq=t-J&WNO/oQrU"eK+C*-i#')iLd[HTOlb#1rQT@d2.%M#>nKB$KB?_UCV<7go;OE7'p'Y)lS1Pe:!DEd0Ju=Q%L&A]G_d+q7ru!Hi,M[Y]7)0)MSlP@[f[pnAW]!:SMO@c$asG.D':AA*=[MLVc=I1qR&c(eFsb3S`s6.pkX:`DR=#UM#<Qj4P^-5"%(^q==0]sQdqROI@l!gJ;6g^fn5P8$Z_\MLX`6HU9kPBYnFtF+ZSmY]n_B+U6]k14*PMt?CP^j]@7r7&Y90u]D</a7CFYo@)D^pJ8%W\B/L-Hm`"rPs0/b#hS,;U(]$7MpeAYa:q"DuL3(J_B9&7q*;S3fudoC'[J7cR)\<?&J/s^Tj"Lr*hT8,!g&q`OcSV-VcM-]56L[%8)qIL&'Nkp+ZAQ=@8M@aT$Y*7;5S+%>$NX&Ymm['q"86]ScpA#P,+-h<drk=-m!2>$F"kLd68#W(9po'CeIF.fYT]<hJQJ$CbUcF%2!&5.6^76Cn`Une"Nhqg^r-iP,D@@>!F4G;'jaDdruY?51=E&:DV=0[b'fDrn^YRljn]01]ei%Gf_^FN7U-WLeo()-*H'rHg&nUa%;F9@/ep_&%,[p*k.7lIGeY:Us_S_b;W;_J\7UbD:X%CKL<^im)+kr]:5H3AnB&/(RiQXM#=jN5H6g)!##`40B7@*X9&(I87C#I74%Y'Cg&>iC35"fA(sl*JISan2f/IoM()"lc]O$$2j_'*)sOZ73`_=/&dF/jh[6Bj7]Lqat-8aor`M_3JFD6lG@ESXj8,7E\gB8nZ6_%@&_)aGOD7[;`%3N_C,t;T7i8$)Mgp2QVBT'e`_b23:"%N@M2_Hb>mo"Guts+(_$]E1caN*>tg_WeHiLA_:4R.^:d\$JhFB&<r#\X%l\4fWXjF3)&be[J4tI5EDiBQ<0$U(E>Y1CBMQDJ$GC#u/H@EK,%MfMZO'_9Fd7,4IBtc%"Eg>1K_fSC9RYqaOa4qSg^;>U:Vf/mu%ck,*D$I`N>"JX34&;qMaaT3i:gb3_*%Pr*"f(N9o*e3!Bg45iLCKf*F!/NSL:[4qBr547tC+;ed2`-O4=0%@0X+.*n+t<utF[#C>%S7oV1<f+PBD3fY>;/S)mOm+9FW/6-m3.hs/O(\XdWEesK&AriV8IpH13h\Cd(_Hs!'Nsb&l5*i)\CQ*S"EA]-(IDG4T(.V1nUsln%0;a;,?_1[Kbm1eGo^,XuK@RSZVn6$T>Np:uVJ0kj/O;'k)_u0BHQrS9rRoG<OrFIVB9u/oFAq(<W1RoB'qT<cNF`lh%`?6IU'"sr%SJ4MtWr=h54;cL=*_qKtaYJH=iB<WReZ73^f*'uFXa#GE<HH0j]c6T)q>m#jg]@GZ9_Gr/eQDPe'&9'\F6sjbD%?u^(_XK]M$:n<%\'B3(j<c\=RM/[XSuji#'"6Z)Pn)\]@@9\!"s%'9U[k.k9ZA&hPt\TWHV4[.O5/E>QkTV5o0j_,:BoVTS+0@)P:X;(.Qgrp\!B8=%-=.B9aXL+T"PJdZ8PMEOV5)+i5K6t$db>qB/$7mo_,d+.eqk)V0i+=ZD4#I:<VXLC<N-e0ZUpGsSmLq@+0N$)G]e=U[Q["jBBTTm%4bSFW.b!e`9+mIW7Td50ZQ,`nq9X@YTN5:_Wml\!*Pl\&.11]t.]eG?a=9cN;Pi@e#/i7TNbKTKm#(PUXI.VY5a"%rmIr]K"3=2f%O-nna$A!9@PeC5*_Pg4]Kb#Qtp>CAq/[iI^QGAP0]93RqNPiR>,HeX)/mX./>j2W+Y96PnS__O!:CBfNK$nYFp-S4(f>PPkpPr=>%(%<"t9=P$ho+=seCEcq:'7J,gI@!MSbr9(?fkY&MYtVACfU,sX'EXf%_At)]+q,%chBNs$=?0>AHF\CGO78pCpH,X9+pf>1@ffmK%?k22ciq;W/E]+$;YtJ3cCaIQKGBpVUl9a%h[KpFKH\F&0(Uhce,<'L@pkU:&C"A)8=&O/=WE#@.a\:5_/:(HNE?C@\/=NHZh:oqg%5*68EgV*G$N'STUI-1C)H[*C_,V(FGT(a"u'>J7ICo.R@@Uu[`16u!(Ot!l6,NdL8^&T@I\JN\BS@HUVE?_V!M9nY:MW6]AKPg>D%i>s1dO@a$U&^QoN^$q't2WK4)PU1RLK9()-gD=lJVKRXQU3kfXQ6YNCZ/f$QSu(3cbd1V`-+<>'e6?Q7]1V(-CsQg[r4u&U>^.hl%I<s[GT/r`(WkBVM6<K!f9!3Esb_<X@$Ou_9]ZASu`6Vt1Ytf^/le.>o"SdYLA304.O#qVD!k!I5XstuuNc\AG]^BRe:@fDa/@$[W%Ym\pp8JZ]BeptJ#NsW-f&-NKgRO8e]LOaQf[S`+fFqAF]b3&Ou/j5k23AZs\QB[QP\Q.M&\D(XL*UHdk3mGh)=aAV-k7(kQ/UmY@%r9`Bt+)c3N[.?KUP7Q(0VaW^Pd@6E]U@It%PmTiR9)G5`T!5nH5?#NP\Qq$Z2;Y_`V<$io8G:j,dOf5G-!JXD'hqq0Aq.tU'N;Y8%oq/d^GhneHpXg&5Z9KRqeP[M7?"V*)?B8`JK8,rBY[V\Z8oK3`@1@9iJF",lk#9//<8>-?h0Bb$;JMI//ek*f(JrmQL;,l,M)"q=%bNJBOg>Pigi8>-$1%<ple(nPdj7$)<^YqQHp1Y9=<g3B3n3t^4bX44-bu#4i9>\ou&bhSA*U0ifWqXG#dR?%3O4&4;QH5a[lD^52%5b`[;m_q_L=QaE%RcS"uK?$h.7mSM#p-)UHS.aBY6&E[4LF84WbK]IbMYRA1Pr`_g`Gt't-9@$3dokt0W)Ie*[S%NoM`a=(4ri./%a5tYFH+aJh'=E-rML52q*G+sNAA8LaZi0<i3V%cVPN*5i-(PRoboC`;65S:pKCU!H)V^'=Hij"(Z%j@q72H.Kf9AIK?Q`N0*FgO1%015C0TL8*Ui3e9P^f4o\fC&!JL<A'6'B\S>0XF="X>b8&f!tKK="@^&?:M'og?Kus*PG`UmiAJ%Oroc3<REDd0EPpd=tE[@Gq[5B%[#Ko2+Z673WdF_rQCnmnWG\O3Vm4?]Z9[27+<l*3'o"\3=O.i1jk[_#2d6RQ3\'0?QP]4M8.%kkC\r#oh%+&>5H.M!.jW#0:I/SQ%`R`3M.Wkqp,h7k!"u!B9IaD_W0lU/<e$>I.DZuu>q$4nD/md/n@<9@s;BOjfRqg`H(3jBXWP#4)!9V6R$k($-X`A,85emuJ`5T^0%@XAHI16YApK;dHHMIb;eMTQ<D[ubf9JreZH`EptjKpT-+)G*C%KNk<gT\G[_U[%3C.i:.X.rW\lM%cUm,m\m%[)]F+Q/oc/k(-Cp%<[)S:>>r/$8#H$R*>n,S@EuHDotp&3#[,E%RW8JV=gQJ/AUpP@@"U22&b+3f=l%!-TOt(MaTCLJ'P=MC0R>Un>!5g5_1eoF.Eg[N%9D_CTH^UJCO*(ML0"o^fTYo,l['AL#X)$E(X`Xan4q^t']\?Zr@JcBSH)C#9OpS?^=7%OL'JLAJ_HcBk#`^H7+Yr'RkGG/ZnDF3;%r9[khbJ4#Qs5U<S1GE"Ta]&]0/77*IJSJR<e8[0*;8T3nFOi<aZ>DDp(UZo^*CP=)?"%e1Mi_fXSq=EV:dQWDjr*IDg_=pEE6Y4D%rjHI*/7Z'qha6u9EKY@BpC2J_%ZVY_5i6?2A7I`X>X&\KnSd(Ag%SOmd>RAap2jE(K4'YDW`a#(*1/cjrS5PrIp@9TS;$L]iIstt%pL+K=c+W3IKi+p[+\,<*$KYVf.[K@WP"ghHmk&O[?9"`_"Z\BukLBpZ_8JQ5[d>R,[<iX`"72ES/tnO<1P\\#gi77Gq76ItVmipE%2[[IH>TL2H^7;P7b\#[<QTjopC,93&,k:M;'Ku10&qq/\jog%%BhQGtB\*.]IYkW)W`$\cTa:.5Tg$8RTGBHAH]ketj]@/i\25f]%qq6/M'n_%-Yj1\lcN)2b22$1$c"HFW0>D+-p`R"lG?olim!N`2V$4i6q3n2g]N,pt%At(Vn\R8sY`ZTa$_'TWW_tK="Yb'5'3Np[%Qtf$@dYJLRj=9./p+Fi@@Cm9j5..P`.I*XG?$X'M3(7((MtIGJl$/9F[Sp0Dim5;RDo-0>HsQ-VXul^s57j.JrH::89E\%lHofmU%>Od>&;KqK2o)8RbEE)7+ULj!N&f9KDQtLWS[DK6kc^?ea<RCB]<b]DA1+(ONnhJltDg,h,-u/aWZ"cZ_mqL[*@@5/g4h[F.@X2B^%(Kf5K5Fu?#lZK_UlSC<3]iP%NQuT3CE(0?bGZ?\'N!7$q5n\A'BC#d^8h?dMPEsCNg&^&2qb@W.]BV;XiSI@/%.Ca>Dclej`opC&%7,kKUeA6TSG$fAlVMA$%V(=9Y`!M$d)e_m)%#X[!p\Oj#9Lr43Y;X`Q2iUM:#GRH8ISLg.\ss!k`*M1n0Pg.45#&=;,5V$XVYn!G%[.N9cU]&:C&fZufZl82na)eXMI)*e@o-#$4-rZ?dm[e1nU#2i8rnPC',U_+&i]9%Sab,l)XA=Y'cJ]W5+8/UOfT@q[k<;;UNY>b/%oM@`LL3QZf?W]K8^;@nVe+@n[fFVLaJhhQ+7Q`9p_kPHSk@O5'43X4dGI4\?^t<jaD7@m4?>K-bE?$^uM0&mn'K(2]r5+K"Qp%N+%V<349C5aRH$#;!dL`^i2ITa<WFjH;b9tA_Z\W>"1kJFM^5UKM=-L;QQ;4#YaKq>,65_i3BV=FqW+:8kiphSOR>/^rP#KfcYQeB@s%W%D=ukrGetV3'D#l)L(mR0RH')I%<U*-)DH.%<Wm]j=2h;HO8>/0J2*'HgKf6TQdJ^@*Ws,E*Y"qj7[GNAj\1PE'!$[+43Q+9(+$%BRUA#T6P:SS1m8OZ)ocm.ZA=FY=nVVBe-S@L#l#.F%pX@k`hh6LRn,_DR^o*9%V)2Zbl(;MV+\J-!_asr.HB[&htKu?*OmAh]p?V%'fjr@mp<TW])UEfKiB>h?p&;X(8"l9Z+$E/RgF]'cH?k#kn(O<KmgI/\F*1%EJ@,7rf<[UO.58-jhduNo&DU978(kTBOR3.<sE0*%>+RZe#u(-E02./\`*R^oq--o9.GM3p2WhNYm/gVuH^B)mr0u^M8W0]/`7$f8Yk!2^nJ]ir[X'mtVYl6pTE"FkI0hN$'BgsXjW>O#%dk)25`j'jCV5glc0W>bIbh5?9WPoWe#s-$S^lBhZo=C0(FWuX7-F1e)>%-W&nen#@iH5G"latrQ2K:[FY#-JRG&5tCBb$a-jP-=t%YDQWYmm#B)i5lJ+.eT'"nAL.e:\\1Ha3Lm*1=)bq8j$]R68S4/Pp"j>-?>J.@X$?f:nBr;.f'O\7FTJRY4<Ee+os@7f7c6EH8Fb<%l@>`r.SNki?]8;?86s5MYYnNPChO.UcDQ++'i-P;'4Xm>ieNO4o)A5)q9huuo$Vd/;*QWN#43sR\(W"/]W<Zq-$"YjL7ZUi+0349%m;^J<<F.^1S7D\&r2P[QkGb-WAipdb$`cEm`#ZhUoA13:Q7#ImY'R]pYI5n,A!2osjJ[@WH>Uj9LLlZ3,0n%=eZRVkh4@L-:_1lj%Q\fM0DeDDl1i;+l*]Kp:JCW*)HQXh*!dJPtP#[8T47Z\:dODbH/:<YdM0rQ@9=O0rI,sTEaN)Q3$`=HQF7hPbHO"?q'!^$V$=be8%+!VjgpW%a_?2Rk8r:K5\``0a/0kD*kRCdsd?k/NA^2EAE9VL%t[!"#Y=LGu!23Yk0/IZfoSZ$<jJ?F`s#'j>=KI:4IR&MD@Ft/Q2%kqnC6B_,5[p+b%#C0Sq9DT">WEPa2K&CD%jWMccN%#iXGJ$.TMP:1oj:L5?6o&ljt"[!Nah__:K\,$*Zr[DDu[:2OTgIPJ:`^3gF%X."USX=/g3S+l=[0p&t=Sq-A=R.D2D!i'3[[)m3<ZiP[1b'X:^'e'(2qsU.AK!iumf[C1\1%8UF[g"lec(7]=7)?f#kF3VXE<c=h%4Kk1DjU5q2V^<n7OFZ,NYlV9+)r9@e\!edOfh""!a@pk`IK6G#.5K:6N7H.XYd9XWlTNmTchsnZ<Ve3%jC^T;1^-DnN@3l]>;'no%X'uo"Ki;gc[VTM?fEZi6$I(fpEmKg1Pn(637/:Z`Fe*2&_3$d"4Wc#>ZtIDS9+[5VU5Q7Upg&nRT%\$d%a_X#M?TU/Qu5'VaTn]H%.4i^eD?QPYcR+_:U/Oj>270fQqBbfi\MIU;fT=2Ve]4hg&<IEnW2UGeUQ)^?U`]P)AXqRc`MNKU%O:>`gX0WbdXenHm)X3>?&+J@%;$tMUqFCs<eQjIVi1kFA:C9F=N`R7qrqX$i;T9b\L4eq,H#I2ZpYY)+<FNSXK=_WESiSf7G8\b#NRAbnbd]M^X=Ztu6R$aZr"ZFA%9.rpTF'.b\PSgM7oFHVogk!LGCck6VB$+ia8&=MSVU<S6]rB*RGq5rVNu^O`KN.):*ja)N5/?@re(p(RloN:JEYd[El!,dX7#!0;%rojWrp;#n1$G,8-R:Z:SLNOCiSQP`g'!m_?Jul^ZH=!fH-MZ(5jVtjXgs)kAnMXlZ4HVU\..Ee8,KJO`!l0j100])i..V'jq%QUP%C8K.I.ElM6`<]pK(DP#E,b#Yn'NXeNpA3jA(j]Sq:4sj>5uc:]O9+!DLB1Y3:B,pm-i^h<**T?m5Y0EXVJuP;bf2Nom8e=t:@DY"%<kVB9e/e*[r];L)0B3IHj]]LogEe<cG2&S`0&_4e4<`b<lr1+j:<?f.[Za)aDTGsMCg\Gl$"L'U(h2QNXN"^pKQP)Jo5-T]C2fZ5%`Q\u!^J%`Ze5Eio9jI:r\S!;,mtq7.?Hipfe2qXB!_B<tD9no10LVcmCj%SUlc`]1I&?2PrI059R7b'Xo]?XCiWBUo&<fH$NX.Kq%7t<bs<eH((%Z?.:Br`E+(D]k$[\TD`dT'h,mI/D"<2`?%!6G7Y/C\(uV^lsYooZTLT[Rhg2Xa.#=Aq;cLD-]\]4rjrm5T7dj6*^i%eSW^PSAH(eD]`Ala1\o?[c/lW2IlWiYM2ER_G[<DAg^04Q/)14FCkIsh59s`WfD)RBK8pJ?UZ7K0TQo@eHm9%PS+4]-Zfp`<kHHS%L)JZc7D;/$XZR_]aeuH1-OV*SPc$u:/ps_=YH^jTQ!&.k>P>079D:L6;OfQ7]JB\A1S3>Lk?[eJN6@J3<6PMY&^/Ig5Ed+'q6\VX%;WN4ClXaMGE!f8'I6Q&5ede5'l][Q;a(F)s\6s&($;1chXBMpBK#;ara`WjdML"E'lD`Jo<Ksp"O2;a)icQl689]q\_1X^[01BIR%AI@/"$B;Ek>TRXnK%fh$8hc#i*dc^hEG`O./1A_Q2gOgS%bNcq%m/CS^"274NSC8KEQu]Ak"rX+\"b:I+L\7OCAQTpU!Q9=8j8f+%C#^@QeE`858b-oYq$7e:1a'i`D6qk.%;ej8NodelA$uGV=4HVf0)RnW%b&q53V_+%%]>$tddl_`gaC=.\Y@iW/g4WSNE*?\&J=,r%(c/eV+F3J5iXJ%/7XlC<!V9,,3pW[QU+9P5F8Eu11gZ_9N/H:m`W"SSPZ7]``6!]EdVVKH%@j=$C#W.#YmCs`>Q>CJknd;:J%A]F%<F@X<%#c[@%ZXUTJco'*o;^K%8Nk+\5"j'gX!WdZ5T2ucQS")i0S`,]6?SP:7k][!%eEHiW1]RPp4RrTpQc=';r@AKXFtpaeb;UN%X_6ZVCiES^[+7sEB&^pp8S_<E'DX@As%Glqo)RYu#%t3aI=b0pE.fq]B'chFDF?#p-E,Wl`j)!p7r4cH_ebdER]CA63ipJ_-T)s3%.$$pDECFKjIeS"4X=g_hP-sBDG#dckRdFecSnmKA-`kZpok]46G_sLC\?p^>Kue"d+J:.!3YUT(3uuX^pHo9a90.2$PkZqj<e:rI%;4[]VPfcJ>,nZH`@J;?LHJ:!":"X^bUPQ%VYodPeV8&j/W$a29L5_KJYYpFLbo)ABll1m`$Yq?rk\nYSqMnD<7(^LYO#mjkqirO5%:)ZmN?GW''j_SGs#kPD^=N0a:@5H;Og1W\<Yb*(Sg%R[![m$u(>B!D,TMW5=2r?:D$_R35`&VAB"qXN7U0'pU_0I6!r@ZC*O!Trd%7-)s*p:R/r7U3l/4Ek[S)?/2^`M<.<5JnUqUQT8b[Am-Y#8f[2=Jj&[Xhs*u;h#Puo@BhnR:'e'@Ie.K^TOQl*(B=u0]faq\$-Fg%Ghj,2E$f7[Y%3JWKX;R69=9?=Od_FF?kj3S+1?GXUUWP:X&VC5?DtqEo$`8;U&k`65q+iVnN7+K07UYL(;Xre]][Q\BGC$d<].!S%HBH*/[nhFln!BG!=O0i+@i"6nc'rGbVrk_dUo\Fpom&PSKUJn7%pjH"qSDanEEVC_](0D_^^SH"@7<C;2gNV&^j_L)HW0,dd.iHM%Ln'^;F*;0&@MX?#&jJJY)Z-fRAqrnkY`%mUL>_T`nuV[oZ,[tCPT'(7Qe8uF_]YS/^`3#gN5V=*fXbO6pA<Cf2>a$Gh-^32s7rkt%omcl-s5q)oa8c-GrqW2c_ghQ5s7X3V6HA!_e\D'\s8KKWnZVu[H2R%orq"0[rTF4N:]KZts3L`<+9(SUrnGIXs/5np0E:a\I(nlq%qu#>Ys+>S*jtu45==8t$cYG9.J&\>HM4'[0f`1\QkMQ:;s8J@:4A#]L\K6tcoK7J261+q</DgD9c_/daK1t%40FK[aHWg(gSS*(0%^V]jY+7V/\lRuD>EL-lUW(gWrj6_&[]M9"$r=cg'Q`;O!VN$Os#rA6N;StS$@+n6UoooqCm8uo2q71das7!!PA%uD.ZQ?OPiLG:g%7E9A,/=l#N]UMHo8=W1:<KVK(T:8ChZp<LD;^aZC8.=DO#SrG7,Q>u<I-f23YJ1ob4]^Qk'dc,GPf>;Sgu9>*)scUKfK1Qu:an6_%]==`5pXGe[#V!Ogn.@lpT3l2@4O1bs<sqOT.oEk2Nh:eP`qVTeh_Aje3[-"g^%8--$;K#H)^#!u8,S<oI[P4ed&4*M5JCSS*l@Be%]/d,pJu-!F'3ds1on2K"h(iYS'"@J@DgrX^Mm-g9OhM0,ZEX+d;"i=jiqj6nmUtl&Igo+qcIfttB64Ll:MHhd;Xf^`)_Ud"i62Lc%hOd1>8:#puUj"(]J2,kAZ>\M&8JG"do^@K%-&e$gfWphgZ3=uf]q^rbZ1U$aK"AZO@`\"&r/@7&/Y^GY`l,K,Z%c_/U&fGpn]*D6%!c[9[7K[/>cMmdg\,$]b7lC`AIG#5<:+X?\h<4@\O%%'!'S]3m8nUa-^4(n1D)H&#c=]D#T;?H'N[u>Hmd!#7ASL\DW<rAdV1OUH%r8WS'p4NgQ8+X'\KL_^:1&C:@LIC1`:FV'H6EM/;e-1m\fFI!L)iUcb/Cat\)SOna<]KIJ,H%G('TLRao@J\!8G&uQTWiC2Ae0%/%R-PqZ!MD(ZPl<<X+a]c8o^R[\jpR.0^r3[Y[Ho#;P"5Al?XK\iY4;['R4U\gY3"M>9E**<raS\#N.%k#QA5in$jAI0?r!D%56IOa%mOOQ4%1.YY3g*R;S:f+ZpZ"Kpqe,73g)MFq^us.slQ#9bcWANU*VD]F7!Z>c6pAEn,?`Qu)?TYV3UK<59j#EZoVY*9T:!JM2PM7^%l?@msh<)YaM&g$Qf,lX1;d'+t)2dmIk#'$1?4fs;q'JF&IU\Ss.:AkVEV$`2]MpgoL'WGa:XEi$k9Lj%Wj4LP\Hof6nPPA@p??fl%6\k(-oT#d%,Mf=PIs]/9M!CRf*Q#/cEjBirP'k.g[fM0(+^!Xj$aqln9+P['Du5P[VX"g45g=:!Pn_XoacGO4>>D?8?C&pN=uC2T%5.ut.(cAXYrj"]1Gt`FHd2)a.I5FR;8iLhPS[@a%[N@kcMN9a8^K[Z/R-m9`e!uUgVk7ihA*<a4%4E+GSQArk6"ZR&jnrWs@jM'E%VLu[o4"cbQ*#Ytd6&tVZXTbgZ/3I%TD_Fe)7+Y?VQAV&uC?ON$8#V^haJ`MK@8RE\-h%[q@]5e.]ffDC(RA6lIQ^]W:J;(K_Nf]8%W6\4Qn]N#F^<H);<b2pTprB\omu/9\(Sk&WqAq*g8H;sZQDDH],r-5(%&b=2;\EU/$j!roo(lLpMhY`>[.!RG-k(^4!mAap;fT0u%/RDMb,Egc/R;c8UcR>FX"ctn+JJC)6235=BMQSrn26*.@*\:,3%&!D!dk).i9S"'l?+9hj-)H/C`Ti.+h\N24[/2e\X_W?=1s1))%B=M-tdL+W,FYUmf60d$@q@uY)5oa+C,j]Ye'o8i*CruiT;;/Qm6)]uh7sKSs??N2A>/+#Q:@_]V2V)]dLjhY(S1pL=`$g(*K[Dpb%o,!NuOkL,-;fN:uaj$L,fq(MY2,NW1Pn^+!-E*)gaE%s!(l;@f+q/^n`i,P]%=_Nb]T2FC]B;bJd?*2Bo1Ept9TTY7e*CT1eH)5S%^2LL/;3X->&XS3>kRe];JB\u&94!>+"snFF>3XP2L>@mcm6ehrd&>:Bn#NI=*8#bYP!*YU,muIEh3]EC.\cMsf+j7[$[o#Om_QE)%_PiX37gWIuPYsL)*6hl9pSkUl[#IYC$d-ONo@%O'W5e&2Sm_2-3k@bdP#No3^L?h+q[JaA,$WASYH1e>kk(D&=m:j!$US).HqDF;%ALEFg\2!o?[pYQOH-FgcPeKpXXSal4="R/>RXi>*oH$M)X*O&T#-i*@l=jEug%Ei9P\(cd,(@"T/)h;7eSj)\Tfhd&6+V7ON=h(m%V(lla/]Q-Cm'm_dofAsQofC#ih\d</n(?qk2b#ZaIH[7A\cSEu@;mrCM3GGl-@>Dc1urfUWJBtl!HDTY@6U^g28/b8?E,:ZGtWob%aAW`?mgb;d[G&4!!?`_"bi4B)%=QPBn7)lep:D^5&RR*h"Fl*d-d1c*J'1Em"^U#R(Ui1:n,$,ne"i&SjR\br3MjM2[WP/tA!8;;%Q0)lQ,_qYN*L'K40Y(".FP%drJT"lX_bmcLlsueW3N,8<80Y7Em@>l.Q\Y4)Y!>n&6Slh,GB;P[UtZA;*T'J8#N:rRk;#NO'!)bD%9<3ab1t\4dip]@A]NK<HOQ*_gm,P7=,9/PhKN7$3VN`F4n:O8$f$^7Yj<5.3mk9*<0V:tS&:_VCic31Hg:MYqT6j<LA"&hd:D!Md%qUF'oZC(s0VrX4eq6E#e:BQIS7niX%*?!Re=ca^QYS"KB\rJ3r+@"TVcL5@]P$:&5%/G6Hk"Gb<o<bQ-F?0nri]$Fj/J^@dC^j)3%Obia@]Sr1;&Q313gB`7Xh.7kRn2!GfG-2!l,>6f3,.kX3h"MK+WSgAn6eHE=,E.1LA%o.8q6^H7gC^FY0f<chM4IV:?5j<8Ze*U&%^]R`R,gAahT'P/:B9c#uW6U&`l0TFl,7A.!(&?E<JrtJ)SG7L'`UB.+0sA3[mc[c[F^ZO-PsV'KI<o1.H"@e83CY]Y`sE0Ditg*i%@h9u5$cQ<%j4]D,h;r]!DR-_qM&Gj)K'=cUY[@2YQfAZdM!Oj7E7^=4VCM"AZ"_WqLWSiRQqjN[Kjb9)UToMWZVOJ-5&eR0VM;<d%H6SY*?9YqQPc(mPVoHb7+E!R/`lRJ1jeGDZ<dfY_EK;SM^9F["_>=Fr=ZJ\"&ml-IM9!3YXH(HB>#`Pfrk7T;jhbNlY'o<di?b$X%S;i6Ia,PejqK]qSr,ra)UeN$HS5mRbh(8<YcUD*<KWA"'OOVjUU[qTNp)OqS`o[s],rV0mr^"2__A_MI"G=&eGD-/+Lk//Zi?WRZ%K9.e@:Au!8eHb3"dsl_T)PsPS0g&s1Db#^%6s`AA`1,g[4kA"^'duk`0M[++Qd7'g'9ULVEjWR'@O>$/6$%`cAK.KRn7?lM,*M6)%*_<-C:KE0Kn"g.Ei79H^YptZ(GemW-`FT*B5;?^kpP_rGI3_ecGVaWcnA<=8Wg"!NSAL*"<6./,VM`\0p>g-f%rA:IO?Npr2=unc%K[bFbH_e!`*blFS$WVPm^r>K:Wao'paQjmc)"O<H5t(S4G`LD?fd';)I9gA(UF+_t<ujP6a=.J>RNdr!*ZM1rYJuCpb_uu@C-&@(%1N^Ug?oA7Hj<276n[%=O"HDEhk4<03gF8'n<0n<X@T)Q&pZ@irZe/<Y9<&(-Zmpn[`-=eUQOt8dp3q&T\gO]AX8D;87"["Q_u<jJ%%#V"GcBka@(3Waunen>qXV7^,eX1\UksRnK_8OLtURWIJ*Gn*Q5M?c6F`NjpqMs^D#9T"O?3rF6:GX.SjLLe"fY:oK:]?)_"bWfR%pl7?AI1hYZ]_TXhk^mb:@#P5?'d^E#gb;j;_^mubdD76KYqro+g.SkK4%!bfS-c0l?`o68_5=-@hu>57rs8S_H;[dK;GGNsraD.Z%gGJ`gnfL">D*Ht$Vsks#CuetM2rC,s9]`a`<?OMOGU$2P:h_&pNE=u?48ZoO^t#U>=4,7;(sb.B^>@2gYJ1inj!-.;`]Vl$0F%-A%=q-Zk=ZsTp^)$@e:Q0;DcTfBUQ,%Ce(_FrYjA`l1P6)cFZ8(<I]V>HuolcY1be)shQ(HHcEkEUl9RchCTu=\"V#fS_bgLE1ckgMJ%m!cQ"+"LE8Z&5^PXMQW#!`*ml%^>T!RE+`-,JGB;C3%YVWh,1)-Y"l?M%#stY,u>QL0)X3ARNnXe^UCYY!kTtH+%9*I_3K@K':B6%mm!e%5'q4sGG?(TpW<TW>3O-CNKCCBZ]Ok9ZVKuA+F&u@]J7G8nooToWqhe=de6QD7`k\Io$"jAm;%CZqLME6Zq?_$6E8TuO"`tu%YfOms&s72=b7PpC#hTGemjS@]\:NFjhfql!SRonG.?N\Zg?V=.TZjV7FdVjd9bOYpF``c-&htDpnJ.;#n/qC9msZ6DlLisV6pW]=%BA!`L))ssm^l)s0Ea:3eHDadBX8f9Ib4[HVOCBjLo0.&:TR%*sm"t=mT6RB=82.OR+AB7<om"NMC,nYJP>GS,/>Ri$M$hEriHf7:%Yem6D='YEe'`%AT4k7Q>np,bJ]p:2K`Wig&FmbG`[6VaJOaV#Y2PZNhiGQ!I=_f7`SdYIJj<&S,/;6j`f'Y4(5hiASJEgH%e(5(H%0"2JM>e"dc+pC!4?0C[D)R\IqUCt7Y=:,:@0N,OU7f;A(UH)s"0hMa>KbH2r;paS:<#t^++%p7C=W(SOiWXbNbW_A[aRWD5("q<a%eNVFW_%+E!B-#A9ANrK2OJE#[#.:&JgW/YAC.*,&n:%k3rQT<-g1ej4iSA"3T(i5N8HLsDoX`63:0Fl&<&`t@gQ$.dePpYXjDc't%(E.XbR<_!>0>"!+UA:m[V[74(1\7Q4=UR;CpSAX2G>D'Qg0VX`hCpiEJ`0WNHRsn@%R.%d%A4W:-Ue?&M?C]YqC5Wg=.Sjpc7rbN%@?h+HO;&E+Rh90;#5o&)DNeH8POS\'rT&*^kqbR2R5J;AjK^nSPe@1Mla$n.RV8.o=W^S:NHl:CR(!7dbKQmWf4h,d66DTN[e4&#%n:dE^NjXcS.+:V<c2"%qLL.:gXC.+Pe+S?][Xk])AfnL^K+s,gp\t)$13Q'Se/3(q4BlI3%+6A[ofGZ42q)7\*'8Q?r#W6CN(G$9%5/$5p_<h$&+pi;'BI6SiOfShPQ(qr5hQ</3^2`NtnE9]IN;\Xf(o;HM@B6pb5Aq#EhU.%_!R6$nDC/X;c<>m$S]C&=9O&_VkqM5.%&,6J,Km4X8Mb:a3qF<sBE;u;S=Pls[6[htdiC:aP'rJV-5U5k@Xf)pYp/^eJBDd_eZ8`]?6.N44f,nB9(:u?VmCsug8*0F5m6E!q%XV)KaH0%ZDN2dsD1H`pc5=MW?ZfTMor>Ds>TdnB'J1,`Mg=g17qKZL;1N9amYG-IuXbB/J@PD1n-?2t&Hr='WoEcu"bNnu5:\Y7l%`OfQ\TYf7DJP560]'qZ)l36AbfZuU#^ub=&4Ck]kNS`'4[*?q@.+J,)TCF`2Mbdb)W`0dGQ.J*XW':'AA!;#aAgNE0b/h5A^'kGj%AQ6j^k`:f")>b.obN[jdFk[F6I-'L]THH1m5,I^+JOGEhZI&W]]anD2j->f=b2i"UI)aLb05cZd414Hi@.Js5L@YGncoKE79CP=]%%38c,<t[q0K]_DS(Nh8?lK$tDd;8];bqqo8Gh$@[YUgM,Y?]!&^YdAi0.V#,+sYO6YMdAqoj*QF4#cV!V-ULZbK#.5jU^'l_`i$g%^8U!`BJ+;D6MFQ=NX4'=of=rrd'A"gCuA5D*DuIYI9gC_WX6ElP+,/X2bj\RSU7--^kBLqO&^T2r.E:N>4^Y.VL@Z@gt,iapFG_h%p'Va1,U\\D'^Oi_)+lqcesH$(XgWmo327_lNf5(q5qA=7^Pd@@\rdK5g!-Y'H!>Cjh("gBM[;K#\<`R1%jL#ImP!dHnI-Ic-*2,L%PWEI3n+Zd)r/>oD+ROoVWhqR9\Esk`m<I#j0=0N7nsao9`S>pq%"f8_"K?h54*M>kq#mb.WZ:Hom>k'A)>b-f_%hfQh:N7D9G]?"%<H4j#Cf/`"`=SLkbV&%MLIXeklb:F0J[(;S]'B/'TCF^LfhQ\j&W//ZJ<I.mF[f!_g)@L6l;Zlbd@e5PW]@D0htCd3RtX=bbct?5%,AtZmIt$O@d')),iQF+GNVA!*'d9foWm"A1S49tNW#VDf$V-kBC4Qbs=8*Do\<sbOGm3pr*lQXJ@dkBo-it4tiR.XR[o4I3Is%!%%P(4.bX`dbJN>ZZ(94^T<!OZtE;3mC6[]ALNM>$4tp9QlS0BR)Y>u^d<b9WA[mrg"/V^=j<3t](619ir][p+DH>plR>h)Vm#20rHE%oUA&(?f)Z6L8Q^l/ZlYDi"&O;*1\cNCAB4K(^35$pQ(,m6hegC4+9B`AXY^'3L4_S/</FL(H0I:.(@G"4&S]oeFR/nRgkX9<0_@!%bBk]H.pEuQF'aPt"T`stN#a@RiZ`jDHJRP"oi^'E,s2qRNNn'gnn$(kX/_$_gT[EDX5ZER=A'%fPq9lSRW_nMb7Ys`c:/%9GM2bO%cT7H2-86n"$VTu`oFmouV4U7@"F#\igt(:<k##l%a)_K$(3?ukS]R)3'S@s*]JCsmVYZ7RadGcJ;i2Ntq?SZePm<@`g*A+;AQ-%H%\'*Z$neobRIkcp;]G+>75@+dP.6V$e=_4oqZ'rD`m1#'_c#KW7E)tpFC&b,PQAB?%$4&)WlW$cK`FVgE=Ya,VKTF%CH"0MiJ@Q@T%&^*fdJpP(FeS$_4MVrOMYi$#Y&@5=Q+Lm__R'a8\1"sRmNunc@)PlJHG*q14-9Cm5\Bp[ADF8d-KFtFM`[[rF!*t>rLW7GanZbS!%2"`(aT8'-Rdo)FES\d9neZTV*=-c(fn:I!5SjGX&PdTV(S^'$rdL;uk-s.AmqL32>&bbQt(JB=&g3(rL-*dPU=1.$Y4U3._;6<!=%Me_:K6Io(RU+>G<O]_d0A5sN9rAo$rK]/!e:7"h)Ngbo:VQ"l$"J]\qnKt-gQ+Nt$asQrP2ORM^"qjQ('q+"s<rK5MUZHW4aD(cI%'/;=D;[b/0Q5cr%]l'?p_WT=@*A#2GXcm/A%HMIgJb[E[-q?]ijCWOf5%bX"8=bCme[6JfW3,5]`Kl>mY.U4K<te]'keUW2ebiNs%LM65VL9W)D%LRF?O#Z'1lkf=VSYso`94B"g96JFS=Lqbt;05';#oS:6X@nd5KmnI;(,bW^K[/>L-VkGTVd8S'hnC;$gs/te(kZ,9%m]0Q1$5Tf=8tHS"GXVj"8a'-M^g)XW#5$S]95IAOJ*kIr[D^CsfDI8E7G.Vgef^*/p'"T,?p802^-/nAkHcm[-!4o`<JPr1k_IuS%*F%IgU553$!<4fF"IKF]nr+]nFo2bGZKK.?T7HCnDNZ^KEa\jEf3(69NZr@M&3S9=\2EL`m-HVC$6b9j'u*,'.l)qEl9H'g9@K74%T(!.\F]sm0&@O7Vq;5&p'fPBUAOa*W)p1s/.=4d!W?'k3+U:&5SA*FCOPA!E(@kH<md&ZCp'Mm416Ig5N+':GM94L`dReFG=-Nd!%H`FhF"[>>2Y=0">%rP*>3qCb:`!KN'FmR"T`#pEd8FNI466FrpT3:`.A_1#/&[-dOrNp$sa@B:-NJ=mo3U1bB>T!7^rjeJKC<SP]%Zc2W"=2)q2m!&N;qcG[`KmgMBBC>MB-R;H-cVb&_6C<X>_OsJ2.;LF:o88mc]!#@nTUuX1b**'>K)b6gRgFm+opJtNM33K(On/j3%i1Z`mEnZ7:Q'k4t5jn4<8JX'E5tCno^=m(T8u:CP8O&md@I8#='pd;0o]plI@H,0O0OT5H\t/APRVi7,jVg(8XDCAiFcfWGG-Taa%J\s_Gn^8T=B(+-3=P@4&o+pdl-(*EFR@-6T%Q!:J4bWs52V!*hQh*jiN9e!d'8uR%H"038G)P^Vd(7`(<),fc4mPc31c!Eq@:WUt%/<JodEc@hc'F+;H!A6<5<9&OfX\$ER(Gc-;/3M;.FtIQ6.'ZRncqO57.d02"Z_[06O;*R$$]ZFC?.Mm"E#cePM1>;?]0WtIV[N(t%X+Fb%;5\@qU4?7>_5"DI!L_T^oAG8+$jY^PVl_aqpjV2sDa3\<G1QXk;Zrp)fb:b-amD37-VjPr\jRaj[6%GG?"^jR:6/uL!R[`Z%,&p&MJ"1kK:G5'H:.&<2DN8m12#G!r\r#E%@:)'q)3)+u_MXSBkT4)t7p=!]hp"!p0(OrWNA8j?JuG9V.Pk*T6lc*kQoZH_1S[A.%(]+'0-(s%VG`fP,*Y7(N'8C&88Bc8o0@/"P@(RS08*>na7@?uu85KpqXQoTo)&-]0;it-CGC9T7*bE2qRZ!U=L7m,k5QL^LAY`-B%9gTX#W>7$B(h&Xcg+N.fB4Rr5duM\4:=3F+7[\p'PC,u6A?;9$;/Vn3*nT=]kd?52RGC;r%*4_an0VKX,9+5YPKnS1D;ekS+5;0m%41#[)iF5DG/PUuO;J>;#VmN1kU9l3t@qA2LW&LZX<8&;4'8Trup%9WY@3.1Nr_p"QFU/b/,]Z'5*@R*B5W4uF0lo+Q<5T8Tf+I.#%Jol79Kkj*Mh@*^HnZO?A).O4C=G=b8U"+4^[T=@lACNaU0KG[^[#V/XI`(*t)oH\4XG+N=H<kWUNaV"[C/jO*8PN3)]sIQ#GKO80%UGAJ3@a,t9PTa<["[=P2V-X!jCL>k:V3>;YAcu$`0<>4)[A"a4/C#'2=4d4n^oEEhf8XaidoE-dU?6GKiGsDPX?`<`:Ej;R!OVO!%O40-K-Dsjcm>FI]Er0EJ2F?e&?`!4jCt,%YNge<Tf7'9V5gNuMhJV#98o4EkLf-%V.^Q'\PE@ZI8Sb?.*W*^G)&3<J&.EQYq9V=n%X-T"Kn0GnR/,=:Jq_nqd_J`Oh+A%eZ:QrU"cr8i0'BJL3Kg$C'e`ii':M6&(MN%IHN1YZ2ID;]NI!&VJIn+fm_MHgX@5hbrDp[OT%!G4NCe$Nn+JqrlVcn$HVMW%Kl=P,^bSYlZdWffGQ9EaKa!uN7skaJ=D1[V$cOU;KtBmNtt`[5+&4[NT#SNKXcB'=?fB!,TRbS.)#%2;QfQI`@T@h4.DlAJ*/3\PFJ?'Js//2RPpXH0F?\D`J5u>e570EsdPB,n?YWkHu\_/&P4&38]NaQQW7>oGIZW=Uud2dci'pRQ>V*%!7\8th&'#7e3l0Nf'Q2bF6;e"3WXoAqH]5mBV^Jn^i(dt>.u8P[L.[<dm3HrE=ra=fGI*i=G#`KhqU\S)(,3#=&!Na1l)f^fu*C'%$mj:E<gVF(Io3'*Z?bZA:R4#`ZW(3i-RpkO39+^SPjk)5EKe4qlS,e`^%C('`dl'$EiANL4H8WQ.CI^l8gEWq>k:JL<u+6"W1bg3%K;X<P(jWR@-PTJi;hh<jc5<%R(bi]<C\'rB:"4B`#KK1b726SNXGgem+2LOiAU69%Z.m`GQWTO=b/4\PbZ2Ekd=Hus0DY$o+1l]f%4sK+FE1^;+N%sL2#N_ijQ=$i;:WT`SQo0,)[s69_<L&ka"teiTj>^.kLI`U+[lN.\Gdo>LYq'cV&dW8m*i@NRTRhMDZfIi][MV!#%Pce`&F8DA+:+7C!cLe:t"dNg[EM:u1/s]nZQ7[U_oQhKjB&Gba2TqZ^<.db$lS33N>N]eZ3+@bmD`rVh=HQ-]fOOgShlmOM_*bPo%C^fF_)4nBRS#D0#WDGRhS^jEu"[W'*<t8QMWqN:q!\g'0N2E16^T45k_Bjkha8:"?^k8j`;L8O_KlrU%\>!M^g5*(B/Xm]a?RI^s%[D2mT6fI$-)!<i5B*`sTo3hK"oD,eI@k=_AUmR'&YYRe9(/]]R98p_uiOS^_Q#&XL0U0NkB:L^I1hJ)Y=)<-9rJ#Hm*]i&:G1:EE%`$eWen>$QOUNn5gG-R@D,VDa]g69T*8Zq:F=l#FD*JRaO*mJ8R_t)j-cFV0;)TMSSo4[<F7bqg(OWsM4kNYH\re>".qDX?f/7BF\%[M"P&?Hm8)b[]\Fa+tVr]5ur3Z&Adgnf`]qTadV?dtldTRi?u71eYj+N7Z,ARhVXqe#7L?fK<%U33W7=dcu6.b.$MaDF$`rUk@!p%[]Dshe/tT"(\iq/dYCitpj.sS,sc%]dFP@Ea2mL#@d]!_?TV]1!">p"O"HeF^-Hn%6HY_5YW#C!6pV^6]jn._6FN6b'=ZEnVqVlj%g;6BGc9"HD629LA3Tq8k:8Pg==!c3+E`e^Wb*I_@H-3M)A0s^_i+k0mUlfl_(F7NB7e+9tMcAQp*Z$!]H:\T09HYEWr+BW1YY_Wg%/lWsZGI&QT4dA.38Z`Aj:5@s4R7GXNEF:>,"5+a1hkD=[XB@*,Fm]&+]=o47eM1d:+gc77$4ABlG'f"%d"XsD#go'3Y]SC%F?$I]%9\?.Rr.*2@2:d^kY#;;\Loi$7Zl\%(^KQ\L9OtJjUG7"&h>5Xn%N(9"nQ6ji(aXlb[&kC*n-6`#nJVo[Z,mc2+mVe?DA?/2/"TmQ%Ip=#!bj*4I()?b#r;*a-q>g_m:,=fB26(r6mXZ18ErtThbiM?o`\Vfr\*Qa]",WTD=l%"ZD?N7DQuo?2lQX;R2+>Jrg>j"b-KNj;%:U`5R2"OR=PNYbbQq-JPc6&O/`WJTEI+Qmb,2P5]:="43jD_DOA4.Y5`:L*)<J=^r%I.F:9oI8-+(\Q*).0tVk9E<%=>fToTDf;J%/e)spLekfJo/o\YO;(iQEK:>j[.FX7/fg?U=7rY,JMI\sjOOER.)I$SL*NV':t&M%#LU;aRVS"!3gt\]$gqS=(_f;78M#qPYEe0!%WnA/]8aiO6k1Y=uG[F>Bd,.k[;81cL)6(c"-\d;bIee%h[EV%pP4HT)WuHd8>=WXRelO"7kXpr""fe]'?j^5Dq78dBp`Gq/5IVDW%K7<dlVOX8T5q6(J^$<'J<EkH^-Ya6JRNOXAc;<ADS?kTlO"q*18r[3of6AN3]f]I?[`BC+BK`OT-3$]uB:jXf>SU\u=4$7SWZuGF%#Utr5A)?;dkNI$4d<3>c`m^?u=&GLm.i@HPkaj,s#fBUA/JgX]Dd)&SIlb4^h_Y\D<I=0P#=6QWJW[FSS]gm3n(%B:R<>T(kKrAY%N/TceH;D6\F(%XafV;#VB2%I\#q7%1SMW_UDGPE[@6Q2q=V1mt;bNj%jq%nF#ZLUFE_^Of8MjTp=r1hP?\T*%1hrV0Qcj4L@HhQX%S`i8^H7j:GmS_;9Sr.o2WVRf=jlo?F?',PY<mJ1ieGbR#e\S".LqHmu=m;(6QI0+^@cNkF`iTtCG@:70eajNfT'Q34h)87J2Su:i%H./J'>Dqt.i5BG5<ZZ+/j0"p\8@oc148#M<qrkno1R5FMo$MjOq#hXc<HisH`-U_Fb9PX'EH+i_,cVH&/?g,nL7RJFN$J=RhlsZC%^fTkVD%I*j3I1:b)Z?N?YEAtC$qq:nYr?YEbp*nAUEi^2N;\C&8jLJE^OPTahr8%"0M'aRW)'f8THH0P["6j=8D)t'+p0jQs+gHX%k'aodOG*D^<FR=oPXs>L`-;2/bde9#1UmDXpPnZTluU>i-+/6BeFI\(S<<PE5HYdF%$*h?^JHKS3jUtl*kKh'pJ[2B*Q7HVhEF^B%7SHr90(cf9,\su.4?(8Jp=,9AWpH31=>Z,hi3ZUFId`OpYXX*0FL/oPn!Lp6=/e%@\QrO=ErWqgm]<H_F\-de?!/\q<)6rSlOJ1i%%.)3_2*Y<lH.A'e2qLqnQcV1VntP7<B.X2VK#PV!oJ*P=L([&JG"9!!#kEAZXt!hmom#4AcE";;Z$d-AkM474dNFn\-br2[-C)6'%W;2M>3#RA4!Tl?]%)r!_'['(8%DnC'\gF.5g\h#9[jtn9%h;<@MrG%q5d#6B_RCX;GJ).>e":FLBC$EVS9D%b03[+1YZ3XVG#M^s%)m,L.g6,XHN%#,"*WQe,#J!6CSZ_5E.-R^m)G,).:*%5<l)oI=HidZ><YpJ[:Qap*$dEg?%#bY*1O`=<WXEXcW<Ot.n(Y>a:LE$q%eGZ+C-7F$32oV!eZ[Uc7ELaE`R'Y<@cOeE,0-*Q&SU2m2rENcf%l-q_AbTc.[0Gr:n(Y$l4Tn4p4t^OT,F':QFR9N[)Vp0%QmCmh%k^UXWe+e[:T8h/63G^M1WpfM'=?rdP`CZ,gRVJ@=&G"5=b"6hJLfIT=9/Bu4(UmX0QoPZ$k$\!;3fAES='Yn`B47c##eL?RcJ8g2%K4:ki]/H,,D[dNBnf]YDT&Y]oB7&b_fR<J^fH(?FSU7A[4R;iehrJNdl&]g#;\rfGek;G$9fua9JtjEag&(Z1pCm+UI>][NK`uqE%#CAY[$5=di2MUYZ52-%.(=N>?CS8g:b.r>K*38"qT$L\>aq9as)k7NiW#qdHNWbbmU!IbYE$&\%C[A^j9cP9S,4qk'KBSdIW:*C,%rAAAbT1/7MQ_hFi"e.RV)k#h-BM$b97?"3a"jXTC_M9u5;Z_F&,#Id4f>\$mkGu0<?a)\[rrq-lbAS4-Sp<a&NM!nJ\+n&R]ZIi\%TMZf^[ghdEN+F37*u/$aobC'k<KFGP(mEk'rk1E0lu`,K+Npn%c%lF^O.pS*"NGo5]JI2I^U8sdH)T!;Q$1GQECdmJCS/@0P,";>%P`BJ41hu(oiCo;0%bPi@8-b;I$/E_o$."l?`O[eTK0@hH"@U-GYrMG9R;.aa]fWuF=ma2.?Vb)E4Md3I$,c"<Hs$Te5C#J'T?jJ$%_4<T?_plL5dL"DB.$EG6QU`Dg_ZBLOe@/c8l0>.$3Kc`/!'TtZ.a`uqX7BUgG/V<[a>F<$_*sF?J=blDQ>dRpLLc$8U%jKHq:Lug%qCYg*e+pXG/Kpb0HICXKHE0aK$^GeJ0'hGL[0nURr\>dQ,'rM.<HPCd\ThDslEQ-)Z2?,6`#$uuOlL@CA13D..bKm=1CJ@[4u+Ue%o^&5/-eE(h6q9SF>SAd4AR"4__+)QXLQ-Aj>Rl/qFUMbnQ$-+"39,-B?FE70l7WU8jj!p-##daI=ZIiq9(=de`sQ2QC$8+F=h<J9%04JtZmq@!Z74V9jH"@Z7+$E/XY2^IZ:t$OCddG+kqMUS_TEQ@)@6E/cW#)[9V!add8D(g=H.#A#7'.HmkuCbL;VqQ<B9a%:p:2UR%5l.&\aA`itp<IML]??rL_ONdso5K[Dd2'Q=B29>I:gq]<+H]XK<lQn1iDGg8,1[5^)$)k"RJ;MYkY\)BB.`35O8R>V0?tp>^DuNT%%3".bQ^NO>kn&S?I-[sep]X)#@mfFc1X*AR.sPc(4c(/a5dhL*L4p63"^CIi._Im68q[>MZN`R)W3#e#WC=4JA[U'sA<Vndnd0/6%P*B+1?mBZ?k(@adOjdbjem)N]j;<#9.ZjplmONsTJQU'p$I[0jd+7N>4VM\?/b[KgT4YB0!@`o8Jg(2&9JO#\<!j2OeZR`;DE\:d%:'*I9nqd6fUOPUZn[fcBd9ZHC&[K!i]sFl='aRf5kQOh.3_'XR^7ffY<HqJ+"hiSL^]!-Y8RH6'.=a!k>bF!%f2*^%8(9_#+B2Kh%i5!X<]6QItnk4orfB&aZ=libk#>/2\h7mDRdJ8Br;EWD;FM(!l-H3<t8moiQ82)5R-9CVLef?KnWq$(og_Z[Z1!ckO:04OB?.i+?%Rm9?Y_8h!FKmctD65=)+K*9IBYUa,8rj_C:-;O'AI(LdPn.@SocS(RGmKpj`'?XI3>Q<r!\QBpZ4>=A9btIKEE.*gSRW.kQ"mGct%7^#FeC5\ZrS(>sU]D3^Q5+GnF(k*.8Z6>)@JFasW7>JWs9UeW2'5FO5M>?5C8]n&d;a=/s?JC;R&!R6O\O-e&JQlW`[GRj^#b/"2%QCW!-"<E34QkU>/\Nc[j+/*&Q<n!t[8o\=%I=QV8*nEngdqRQ$d5X9Vo6+8c+35toJS=/#+<5f<:,l&qHg5aVRiJ\Ep[)QL6MES8%C0EdBok,i7=;BQa#?/laY7r<"K_>:ehGIggrp7BgZ-8,Qe:JdMi6rtTF4m7PA]NQ997)PaY$1=o:EH\I5KmR>X#<JfV.^CP0SZ!7%auji<@DQo.0\4].*/,61O%%b2.+KcK4fogV5]\`C:gG2f10U?gUEIcG)P]/=a/>'cFJNuZl)-pAbQ3>Z2$`cnjH/abRO8UGcXo3s%]iYMj#A.T(AGpnjmo]94JN1LJ>%,o%*I?B!!PfIpYT0-N;,gp50'G8n<jh+EPg",">ug[?Kgd:VD9A.HeTY?DNb\)qi`k>8E??mb%SV,SU#WT-#C0T3X.*]e9<uQ@^W5#7,hbNMuRU9-]<QYd=buB7gZh=4cJ0SMSlh'$WW1"S5X-U*a7K.\-J&ZqWW->T_FJu5]rW,LH%b-[(rc(%2gc"[cK1tA0k,ra.I)EO@MQmVm-.kE0E)41Oaf6'O^@of36RQBQ.e-eYZ,;LjNrHm7K<#cuY4,mB="D63>/,pK9?"*jC%BmKjEY`R>'hFYULl*4tB;a)PpZj\Y@X=npGlWVd6-#j\VL;![j;WgPQO4%Q<6L-fT"NQCC9Yl3EX)o,k6It7FK4V,;hc;2Q^J+oK%*4f.&BZ==[9S%RKM^:eI-',0?*-e"MX8R"b>)J8rokJV]>,/]jS`)C1/V70?ST[Z'VIX2*W'm,cnk)@u<c,Q7<EO.6Z5sFr#>LP_%njVUfKZ/o:c_^Iop.L`e+l^J(]=k.3*PhqQ.Br'WCiS+LT!&\8UAT%U+G1oUCf()9CONPfV^Kll%KWd.G1nW$X<B,"U_r=+\+=]8%gIjk:=@/4-f*6:H5a:KfTkR(3A8rVJd9UZ.`Cp(t-@"0KK;G@S-disLDE)q=F_<X50]elS6)\R`lHDPRY'IoY6hQ*D3)Uir%&uAL%F1EhD`>,Aa&9-i5FtU*2pOH7ScFXU,_FP1M9+?J1TekSZ:Gifg9TqnW:CnDs;$L<=.5IK!=9siV1aCd+/8GBks83PhY;4`"V%7_=%W*>*C<M;])`fO+c9oZIu\!IC4?"C!"A@(S9KFPm\U/@['IWnTc26K_=d%lAZI+,:A`cJAb*Z6@W9Vkh/O(O*t[c8QqSAcXt'Di@P%1@7PS%<ss_j8rW/FZt!o>9Ae:#CNid7X[]$[jne^mo:a6ZuR3#dnu(J2tUgF-^Z!I59AON1"i,`iDR4iB7Q%^on$J"@I'1CT!:la%HtmQ>S/WF1r\C^iN`:)%.NkgM\LUmIOp;VMd<<u=K;9d$9W5Kpp4Q9cgXhrM445/(_h#*/R\8]pkul2nTn6CYGHaOtV1rVt^ADFC%4,]83JWqm53C/%!b,6JQT1LF&%</1;03'ho&bT.H$ho]kT*rL$<>7FA_&Re_M\8r]6*Y0@bYU26qtbPK]^0R*Rl9<VAJ)jfNdVbO%Q.2"<m&3D/U$g362"95kPL]h!eIV6ai(nPs5%!D$dma$PGXUgI^Dc_s!G]R,,GY1=3,Q$JWq!7&]jWKG;c<jfnhF<BEMtG*TE]oB%l?toAp"NcaVr=i7C.:u9VE"9X.f'Td="MDap-f14dTrl7>o9#;1;^Qe3k;qW?UfGUGKA.V^8ku-LRu'QoD4L'[3NN0Tnb(n4&:*!%B?'u@-&)0'D-J^29r<@!J10K$aAW-RPUQ3`j7.Xr[gM,R&nIU*gR2,FGsc#Z;CJKI0^l':'IN(O9,&C>(kmBSO'?&R@,kgPr9"R]%1\OJ&p?g#O#cF"cUNVO*q_[M:KD!ZqIp3U1Hj_$W;8:4,iD'b1C(B.*LnVO:D/M6Aq1dE(^JYj9<$!#GFG0&OTRSjhBaX40\-7aJ%Qg^r@2,4:KXi*?.!jH`)fI'=jJ]6/=R+mcP5]Hoh50anSVM;3/W5e2MI8i<7YmII$a\DuACDN2pKl(JJ2_nl[:AEn'ad&F1bu.G;%p-i#_\#Z,I*ZiQ\]rj[hjliWB2UqJRgnp^Kh-!K=mpp\>H>YMfX*B#XDlN7?R?c5SEt>3LYY>FPrr57^n,#A`?2aH<l:<'eVo[\E%Qu!nE'c!/GnMC,J;RQ!jb(.MfSA:Y_JqX9diq(&qQ>=%q;Q1'pV1`PUNjmhj&`g:m8uIL-.0n]5.HQN"(>i:O_$#jUE*9SHX)tn%%*BaUh+.Y-fdR3p.W\b4HOb&XrGeFl.eT6:T)M:_=^Xb*<M4$N8N\cl04G3!S6MSr<O%]j(Xr$0VF&lFmoI)d8&)O39%i2^oiU0f[%+E0G@:p3#-itKf%>G)bQ5=\Nu)q$\7opW)Fs1iXC1cVMZU6JMH_VDRlDqK`)(XDI*#)g.)i3"Mf]1NjJa]iM_[A;CmlfXK/B(Qh+%EqXoV9+ZWG/'Fm0+I]M[(6GV#85t^o"$6!<?Z'2LWLNk`O59MBlkd.*Kc%U*rqPeQVc>Z,dfIP<W^EdHED%->6^Xl;98hQ)_Wm\W%RriMV#K7N>f[-Q7F#"fuQ_j>;@\uoKqoPn#+;bh&n6WJeMED909#=T1n;"86F3IIQe(5MB("nT%gee\jKK>pK5G;XG0M3D#mngDj%(eJ9Tg@M]RZ*UhH)OSq4h5OTC)K^!Y6@"Whl.KJsKiXd;g?c/&T5j]FGlLUs'%AJ@kE`.M;fu;t,e,CCP)c1@<makc5*`^O*kdF5%U2Sq0Q,VE"qbAl&2',!Efk]Nk&Kj3tR!T=p7s%ug1\&e%*ZV2<V0PP&N`V?I/%6dV/_L+kPcc.+&uI'i-NlDDM#36EqBPW*hk$f#%I8qVm4p9t+hF/knPMK*_D3&R%lr*]5c4+oiB/\'],J1u=aH:?H=_rji0!pgC?$l/ncTD(SD:a\IM+qsNp=Bn"^kE!_m(r*a+]_Ml%M-Pd7g'<qhWAA10gBb)K67a=\C7+*">D]jT3N%,QC0PK8$a1Q*KsDJ(:3(;<5Ib:+PU[]$n\^OcRbt2mfh+:EA*?qrd&jR1j7]d5%j+ttPoPg15U[7P&:Cb/b8ZSdT3:ZYnC5F9lCNjKM$)qu%)A,,2,._(A[shMQ9/e^o'#/?EoXhbokUI_%e9BuHCIMf-ONFOTB/Ygn%ObNIV7K*SkdN&_Em'_N.#9O8o]C3#1P4FjcQP4qA5nPI_^@8&@1jBbURM(X^d<'pRrtAD4DYV`SZT`0^qkQ]D>pIlU(0C:Gn!GtC%J\G@lAKs!Z>S*$'5ILUaikY-]n3j#V"1c`6j-uW2pHnRmiH3/emX8U]0F_D4:LN&1L#ijDX[J;DCB\aWpNRO/9fNop:\%YWp(h%l%DZKW2R1*-*lNrfLoGkuO7n&iLI-PD`7`*MI)c/W:L)eJ3QX,Xc$q%IUaZTEML18!0)0IZ.DnAFaLc_a:fYrFWcY1aW1QDUkaP'Sb%I_@mE&91jd)+_]mX7E3R*>uoVe%7a\7BFs.bg/hl\4nlqB^Z??ASDB3Na*MU*(].UWJe(*58K\#J))EE&Tr9Ek=d?Fj\MsR@Hp8B%-#[YS7+`fZ)9tLu;?p[k`,<^DKSX(&!G6.9?bmH`5u\X(3Ilg-g!%&R7!Sb'@Jpf7oiKfr;1OhXap/0X9,(TL;OTk0>%l#=p<<T&%OAL3*8HT(Y)*)>W9c7PTq`^d9-RaWG3kZtQ$1cnjEDa2d1a,uO=%1,d&7CF#VabdoYUc>A6)Mm666TGlTS:a5j$eF>c8\OSF-UmJ%h?\c<A4msAZs7:'/Gt&N6W"K.oX"<l_Kd0@:3k2TZ:o?1q1iTu!)8A"gst#'l)q1h,pNk/9gF+3CeOY+I_q-oI]<JnQ2q[qOo^Wo%Y!pmc:_=#^RZ)%!TKK8Q+=s%-<%7UPk0UuY#+$^?^2%^I$_jC[J#4TeG_X`@R[/1Qk*//6WWc9\3\5e%jWu#^_s7]XiXELt=GWFb%&`b[Xmc"qPBufILUFK;#FZ4a/e,X)E2#8_R3`irF1T?gC/7Hjfj!PH^^96'jOpbn"l1hs;P'_]5OZ1cOQgB`O(:;HbXL9"h+!M(.%pC%t/DV<f+d;PIUVER$/?"M/(1/J<HC=jYO/Y>:$$,4O/N]T/NDD/"8:ZktCUY@K>GTspYA]&enQs]ECq.9+coOmf:P'^si$-k-k%[)9<.+@IH7SbB9u-"+&KDr%s=P0<Ci&-m:^V*='T6gacg+j\sCo)_]u0a1U=cQ$*/s(C0-=\me1jfGh]!?aZdnPuUr=6-WUYU]'V%'GSV\++NXF5=3,,1tYZ/]n/gA;=WK]VB]a7:L.#`dmd'ip9MY67GN0!O3mj\hNKF'?`1BaoNd]adV5;ZmSf%j)Nb!dcFj/$$&Sr-%n7'L!%r'q_\'@UsWhh)EUGVl<Oh1$%[?.lJp7)k0SRK-M.'2L2DQAbtW1nl74i^RCb=YAPOtiH+C:c+Hm!M+:2cR"OY6KgVCla\u%7=^,3F#oSl<hcn^KBml/A3WT2j(X6O*gc!dGZAe,.u0$p,<Q1)E16K%hc%]M_[?;bT`o"M)Y?fs3*,d5S1cmJ9h_Pr@!uGi+VDlF%<,fX"`'A[6R3q?NB-C?q(=9=5okse3Ma'PCoO`mmkfH\al%>W3BfjFe\:I\U[\u#d'9$To@X#CHSkkQi&s=k&'eg"n6S2ItH<$sM%P%I(DPFK&p;R+4QGAM00mQ]KLaV!iJ8b=X]/nm@:e]ofT]aCUU=02XcS1N`1U40CT,@=S(]kVKsdD*<)i?Q(F>tl0&]iCgo'7k8W%qDV9<5Un+$ck2U0VD3[UV2*dYeh7K[r9GFg^@fR^`38)/-VO\r'!$4sd&@/e][g6b(GTReY_fE^5Kk[YJoIUI^Uu#u>t?'j6l*6;%WIV^=7f-1(gGYts$B%jB,0;U:9<,DJ@CEc1T#SDgZE->>'m&`f^AM8)dj;elJI#spj)V(YCpPYR_2RUAQWHn^CE?&[5*:f1,$sM>%$q7sD&ZBe_n)Qr'<`fodc7<-q(9'-u-c2=]r<Ij\;[\J7R.T,ol<\Zcetr/7O9sH0:Y+ECl]sG)(db\i%(QKjSoqsF$>\.C9:S`.%n>RecUpuj,\WkC#eL;6CT[fgH2m`Ag,8/)DNWN/O+ONm:2fZ4G.(NJ0V^P2sSort+6/XGpBilaE.n8q&Wb>U_#qEsZOQnD%F'>nG%:lH=Q&>Z5J>l?E?(Qp1hahd%E5g_MqR@00oc>?&BaqS3\";rYTc`Q++.BSsS&IBrYY1$l7*C2J#*1^tfFNQd!YG/mckX^rg]=EMA%R!@5LMY9:Ar/0XbMOp<!nnNYjMJQFufGM<qXO>`oH=HK^LnXTcdJgVX..;XljMtSb[Bi!P<Vn:T?+'^jbO,i!YV(QOga'd5,\4n1%GS5ZbN-=LW[C(Ph>C=X>i_-54-;P&rdeimrj[(g>`87K-J]TfWThMu/T\Z6o)GkIuZhF!Jp4n%bbjNl:<0.]6H=rO'Nh.d^E@/0@%+MI\6ZaC+f3,H&p'7c.E[C'$\<Mb\$]aU5s"@NBX6=sb<"e?5sN,kE%B)GoF3?g^#-WVds/XW/#!]%2*O'<bkH2OV`rk\/3WhjJ_%bc?V=R^#c$)!J&R:M%8Ci@%Jb#sn&OOH5H"\jLNR#=*hRZ7Zdcgsn3T*Smi'mGp+$`:P=ha?-g#p?E4p<@m)@oA>1YT9.A1":^cR%V">n*f+5./\3bM49s4,&3_VB!B-#6Jb[i$S\DnV-GLNN*V^/:kF/7E'&Z;LcEo:fFl3uIIfnWu8;3K5CYu4nk41Tt]*N!0.>:9gB%V]-mV<\9J<I;\R/EFmYu_huts)JYGA53qqlb2^j<S!?Un98cEm5J+/Z_n_o;Z;o6n?C,Tfi4A-cQ&^&fB"8G(fU8P@C1H9>!_6le%ZNmc9h:c^CD;Le^1A`a3>*+&3Jo5@Mi:4JXgt_<F[SW4\!$3,G<(<KBP4$Wrh=["=BdHk4DEW+_,b1XN?IlV@^L68!QU[':56[bA%--/s`AU0-8,;RNFbO5Fq6r&j;%M`&-aagadet[h\?HJ#"j!:;ZlMr=&%V3[54QDAg=GSS3Z]%if&Jc`ps/IRK'e72-%J?h.7tf79%>$CEp>KTGV7hNI%,Ajb0;p+X%Za=MTpoJriqnB^uafR4;P8>3b%h2KdjO-rk<f:-)Cl@kblBnh_e8&tH;O-ORApkdbj/j:a"(?U[%Ot2JdZZ_>X%+C%Y(r&38/gABC.nZr10%)X?8R:c*am6S7"Mn)ZKsZ8+6imaQ*<qt^F=9CC!==`a09.8e%qZQ"@qWe32qGWIIDt^L%H[^`Z"g*i9U`sVE;G(e!_N]qk_(M0DT8Ca,1gH?C4GpJVgFB9aUft)EY#NiU>aQ#=L^YGrHh_ONofR7E!OgP$)+f1:eSj&:KpicT%XIteQ>M/:-*l&>/eR<>i\j(B2+!J3hriNL+;OI#@X&)+Sg@!t>][76\^sZ[3`:o$Wd\:h4,^QAb(W)JMd/jK;[22kj09\SjH8H_"%UStVT;X-(af6X+V`_o7df<"-b6rsR1bY$I.;s'B6'QT5(Y$iA)e*%+!/3#)-T9&DBToHb5mm0q'0!K!@RKAZ;$'HuBbpp$]R;"=+%%_=+#Ih@ebQ$u7g0HnHt,9K@jl7YH$;Fm#!m28o/*=iGg@sXm2*.c6m,/l(5i)hj*>"-b;:Fo_le?s?[WUm&3W`Nb`:_5-VOC^e6%##]QUU&sYQ'2D*Uo&h"cV]Y?h_'p,RE(JT)0S*/>4QQ5^Fr7Ven&Ul>7$G&J$hil_hR(LT$&VFB-ff+hC8Qc-bEmk%W-mf$63UnZ%76qE\7;q]Ndu#!h1Y3,$2YN\t9p!QS4eA^[&W-1(O(b)-]hh-?H>o$b#OE4dP+[[@i]j8d1Y5Wgg?bC,3\*\T1P.\oA$^HRYj/=:%L%1?QBqF'C886<lZ,!sn2MhHTI&k_Djj-&g`fX'Ls2WFT,6S+$]t7dVfnUF^lk'#":V(,*)=/j94-=ECJ(D5ccs2e=?BriqrM=s?%8G>`/^"0bNCD_e_1;ZFVp0:*\DCgD@I"buFP<]`aQ'%UbLWH_.@WAla4h-=rl*mh$8qTAM!p<m3^FF:#h1p]F5uY%>'U-4*7P1+_%I"7Yo$B&?gkfnX\fFP)jjK9)sI=Cgi!<kchqAVI&dU@Xm!Fp3Mr:$*6XllG&ZV!Ko=^7+?l7.IMg!Tc"L,D8nF8=CbJ.%FQ41ZAs%NZ8p\k..^TNDa=m9!0PV=mc<>X(O6e6<tB!RJ;G$^_]t?P+Y46j!U"bM#g,$?3GO-Mjj6XbS(^4Wl`m(ohA/kCd]RjYdEn]:VEjd%R7p[>$4]3A(N9VB^HsDQlYa4ICc#<g/X'.iCAPQ#mt$JEZhI"$YI*-.NG0`-Tj\,aOos,7c0l^U>nRW"_dgY1(L-]Zn^a_ip_m!E%#6NHPkGXJN6h`LAq$Kh,a%LVYATgAWSP<]=pr$#a[0lS[kKSjK&b8+G6+[dR#_@D((u>$$MscUH>66I6FZ<)1+\7El_0n^InrJdo%8*H:qN$`KalBolUK\00lOpI"4Ru[8"3gnOj)P6@YB$o*hnl_CFG;ELXk=klU*$*c)k_qrEBK)";6.9^t3TL/Pk,O0K\BRH-ie8$(%Zd82$Kobc%gVW78X<)IW"Wi#pf]/?,+h&r7As8L7V=g4E2:T.*EGX.g*qsOf+^rrK$$)Y#rFg3na7"qFnar#WMS]^7;c&dr2on$.%0BarFf9pSNcJQ@E="<##a`rZARcjn$&l`$MKU,eM%dm=Rn?Xk)liEhFMR'D,q0EcEK=f,`eNL\qlCKl^^*-WU>"_\O406lU)N,?b%K(MQ0fUrJphEoYPOI[K%"d7b$#9+;snDO01ff.;220d*;i<N>h99LtH]=Xej!X4eI>84Ze.AcN:Pfi,8X<?)B+LRU?4dBP6(5+J,%:P.(7(_-9Jbm[*kJVM-lUm<`%,6$sqq[rZ.=bPr3)'?_V^Ij:bFi(JS'2SCu^J(5Ug_>>YB19Q25u8K65peR?LFchPQ5uOY?UW1-%!7mu5FZKad@k@AWB**X^=I3[mI"Z$>*PX6rU<fnA7T"q$C*`:t)K8..)<G5GaS'*aK=EOPj#ag,p`][Kr1XJk%<=/HNlp+KAmTiQ%a63QIp5sEMl[fr2EJ=jD87RfGalG<FhEWuM6#)Q^1'GiX#MJ5!DH(H!ir\^q34gdN7*_NB4=u$dqc&-2PkU*1jbBM:ja2D-oR-k]%JO&,/OpAUgXD+*U/E%5iE_ADa_@l*M#gtFOW<onG'[)UL$d-jPilike?$@i(pO!k9_0Nd<=*a4+fG*Giq@m65Cd#rKfpdo$[aF'k%=.@?Hq?t>rrsnL7A3=$)%,`*e/?0\0BV6S_:&&+WB7Z.u$/,=Pa6Q7ZQX\GC9PYcGW:g7fm9)A&74'.a_7.LGLnVn1m#jo#WYQ3e%UEWfAdj1_tSq8)gq4k78*ns%)-TT7*T2sN&Wql'Hh>NQDN?F]cDKSoECs5.#3FVP>%Vt=?m2Zq'N/e;gf9QcK^+3BF>_`%/3C(TF%:Kq_XN%M("cR./#a9DakoYP$)ZcAQ!VR2`UMo;!2O[o?#F^p?&EkA,#_3Wh"O*tPjiRj1GMH>SbEi+tG_uKsH:]6h7d=Nn]r5ZMN%&c2/:oChK-qu+>`M#splW&m?H^EXBu.:cg\5WF[Eq,/Qk@QqGD1V3h]GhbJlDUP:n[kCD`;2_-K?^")$2=4MA``,eG.qK-+"Y$1d%pObWISL,de4e*ojF]t(/.25,OHR7ui&TH0d-J>IsC5)4?iA[g-,:3`i;mOuD[&=+XJ^`YXd^1F78%q=/02F.$fJ7(,QWoZZ#kC(c%4PQdpc[2r6.lbWrj/rPpY,5I7/D>\F,g/_Wpan?7$jntkY?HE&MbEZZhnI-2D4hq*nqUg>$?@8ka.c?[:dqfq,3=9W<bkSb--M9*%$]6sNRh=0\0iKn^`:+XI1'd]tbd*P*g[UG0=473;3C!<X!^kc4I(9GOJD.&eE&Jc1>.Na"HUhfMI!KM+5fba#eHVtTP-+n]A<oH)%E_StpM*K?#;,KVSRFM0*G\*p4pbmO*H#,!0WYoL\qj'Yg,s`rG!r$LfB)b8g+IfU.$pu):8G\@\oQQni7nCB0mC`474Ff-Hc+!)^%f3u(VA)9lDUb'D'"[&-^n!1?;1fG5W8\cDG[t+_H&]j$'6'eC`C15Cao'8;CWWs_4ikiq8GH[(>Hujs+_?F+37>$]"JKNW?s1X?g%K`"`%f(+um99_rg#E+gd(58[,P>*-f!Ns\EPbGTKr1oPh;StW8#iU9:@0Q=?4T3lA8BF53Ma-al8+R4?c<*(qC\6ifhG<n%YZjY@%A#6>bU!f-7#.Z1CRAX6GP+_pHZj^ESQOiMg:\;lIY^*qqZY]C1ba;WCJbgOCa0Jp59gQUO:JLSF\tPMk3W&ktgk]V6Yg5kI=]J\(%V][CRVO&1mJdA2Ii1T*(7%hJ?(Y;6eLW/fm.-EirUm`b`Q4q/h'_VF$8+K*s&)liQpJ$PfWh%CU0.>n?W.Z>H@d@@jr5Q*"8QiK9%j#eo"(fA.iQdX&WZb1c=^`T7WqFN$9.G-\;gHL+MlQ/iCKZN8cSGhhhY^*,S,O6/dp0pJ;'n<'QR)grD3"]7_l[Sa02[9m"0:th&%7]dt<R0?a"<M</\;O-RJVkqOF&\_:#T<>u98M>t:=G1_$R2*9WY9BR+(,UICNLE+A@Z[=OkuBm$!S2/[UH"FLgfJoo84U>V8h$F"%J)\ZN#D)BbN^2F?\G?Oq28tB,9/WK2XcHCT`h9nMQ*X!mY0s>=Zs?mYjmf8T8J$I4/^KM'%2@eF+E*fk"f\flot!.ElbCqD7QHhB%g2X&I8Qk<S!Rf\U26$:t#-T)sEN/=e\XYPa<Q4lmS*HCElC+36F&l(OC_P544!lgFiqh:o+]I&XN34]5+IDJ.A9qq]`o;,%X'/_>%>q_pd6XS("XdM%JlSF\Yg29YGTu`>Hh/J+TVP,Jf8KnYY`Mua3#/*-A,"f8#'o#q=ANY9oK_5Lpr5j%X*EE+>60@L1I#Kk;a<p%E%X__lgfR0AkM9FNAWe;4@mZ9qnT3h&_grLMJ6oQ\;%sKMAe/9i+NVQ\YP^0Xb=(0#fYM8O*$ghJiF6U8OE+P<Nku(HAMm]8qWTI"P%i!kUDW;4nY(:`XDeZakAZEe>%eY5g(7p)s>aQQWD6+L0AK_?7N-@4I?):j6@8ulm[>%Yj20#t?b.D/A)+L5JrTmK\jOB%h:VjEBD%KlhMgXqifapa\L7di%Xt(OJJc0!lb)3uu^ApK<d;lRpL56"De'>q)O\SD7\$]N#leV=f.LQphQ^N`[=)S*1Zl0P5?,FTY+BG?WX%%U?j=gd3%MH?I;LO14*_@Bg<!1'W#\(cLpp7jrR\9Z\OW@2M3VV5fdZ/i`[;aRGgOmlgA(73J%sF!bF^hn<'M0(tepWIb",caCH9>%3QN]2gPP_NoZP2-Q,\U#N$!@jb\g?2g&(T&-EqqoglHPk9IA3,]sC,>(Yh*Kf9O*lj_rnKCRsM9FIOrDAHUsh:sr&q\`'4;B8J2'%<=j$9mA$Jr[HIcYeTK6&7GHsNMSl,WnWbD&guUA[J]o-7K,LPTQDJ6feN\_!I9dRi6fV>;oWbInm;_V/4ig)'=0b8`r_>ajBMS6n%RcWkY-XL\/B#%LJE?+!XPjl-AFhY`c^*PP7lP0G!+<CYcGmFk^fQI8*>BNHF6r5:#C0[/C22aY@(]"*FMe"+4r6`g.'YU/72ri2&%]GU=t[B@hc*W#\>4i3+s7R<A0&sVW&medE,W@=F9C^YjDoPA!o?(G>fFNgDi;k4X;#8":(Wtpp4,&NcpQ-T];fiY<2c:Y9bB*r\.%mdd#2._\(j^EUC:R(,@0>@]<=.jbSF.#O[mqc2+RNsZ,b^o>99N.\Io`T/_'@Am#G>9PD#RId,?_5<C\/N%rX+X&'P1C_[*IGO7]%UI9TWI&[,e713L9""7<ChtMjITjM,>*!FGb_%.&k/>#>,[:;oao+6:S<GUP$e3,#H'l'F1Bk)?H/'([,Q'FjG`?9i,mXaMsCh]?\%&RuBCXI;ohE]Ic4P7$O!Oj$1e,L;@&Q-p,>]5;K;/G@_:0]72-NF6Ukg_FUG5nWT5Z5BHb7rh:"j1Taf$ErP%&ld9*F;%"R9Eo^<%q_gbr#pm<XW9AimGeU2?]gh/!1hV?JnOc*,_guibG]*8WkUWjjO9kfHVj($GeC*/L`H^o"Ilp:#'tU*5s+Ic-/Y,lD'[(c4b(.TP%+X)^MJnHDYL9Zf!r\S/)e"G,\VZ@_VA8@P8Ne.goNs(e=ZI2dE?Xq8E&<k+G\+HS5k!Y:M<(ph5eBD6-YjiGn8U@Mhhg%[cG"QD\%]?bXdZUR48T*"$.M'JAed/*ISN/BiRfG4T/lI2LQ2:bcFePb]*9cbXJ#t^*0I<acTmuA#(]'aRqCq(3W@h$:cT,!!>Cp>'D;UKZ1%f9jgjIX>'Qd1tq.,<J*AAW7/).^.Fk`2qW-Ip!qC$-:r6C2R`a'bn'=BXdA+GSR9X[1^+a"Uu)q-7W'sH`9f!4p$#L&FhaK``H@1%=AZ5G-jJ%NeM_oEA!i0updm39`cHo^n(@?VCed3p!N>EMB8"Fa/l^Yha3fl;)?=l+f''D7Os'"3"'Gt/7-L_4=L9N?,KY?c(c^(%%$SBVKSaFSt(`@Yp4[.UBTPM<"TAPQ*p&::Q)Rtoc.<.+,OXU29`>bj6BQ=eTpCabVs/%Qs^Wce+AnVVDUBaoPo[&C`Y1-B/E/54J%;GcD>?T\run`C<;`i*(f'1KBjq%b.Dj3\MOf>'e-pGf2jN\/l3'4k[=\#,ga@1r#hG?GM6#C\!\EMH<kpO5CB/f<EA1J5rcb3!M?%Cfb6=(pO2SY;pp+VUuXO3"UsR*9%/9NQWU.RO2jJ/cg5J^1VbAl402B.V@0b4W_Q*M':kg+TItTomY-(:J]/=WIP&@$1H)k;a%rc%1=<Ejj"g?N55u^7IuYbsOp+^7/''jf>sKZ/-QDh)5?0rL]n2pV,CBG*E^[(Aa,<K1;u*&]Kb*<\WcsOT;DTrS"6bJ%j"_j6$M-pL%c>'2>nf.sHF<Ggkn*,Zi2,rTSeJ$&*+;[hFn1T=5'@aitWH-?XYo;A=)o<0$c8/`1@#2j<WD=pB9XPmD[3YA(AauT`+t[(d*nsUj%R^7(ljYl^0m]SO*2\7k6fuL-Wb>i_Y('FKAk[LoI]kG\6KOmJTIsA+9B2V<W=Q<uS"[Sj+4iO.ZplGB_'fqOElc8b";&ITBZCV=(%.(nZ6l/7CB!:rL<WsDKj?\-k^TD6,Kb,E(MX(oQ`aYQ'7#'B\TA^!^H;Vt[g&$o"O2cKq1W*^N&T.89'SiOp;'8j51"&)D!j)3dp%!R`F!7\/)m('%EZ6P-G/bm3*bbUl*BJFB;/MXg6g?POpEFW^ZiIm[kn0nm6F+%gO:?,[PJD+p:Rg8q=p9PS+iV4r>8f1<**a*fp/%JnaTWkrpS0*>SOc6Y:)IOK7/BImj=O6D&S\mX&,A+'Z?As+./%9on?TmQC+*_4L>[hbV0*\]VZU.7o>`G186^CVY,]N;iC9MRBS@%k#]!a=ZSoF\a<.=Q&PIFS;#lj&S]<F.(eAke9H2WFP.&^9k59Yqm:#WARAdY:"RiX7&k7"K#J"8SH6s$Tf`T)*\f-(kXM((rC"fp%q6-htWl\Cnnaph^d\6=\p?fJ<4=>\"?etBQBD&u=gdGaB>0G$<O2u2]5uLY>9Q&1=g)ct*dT1E6r3Z,&6<uJDI$Lei;n@YF<^]kj%_LRm_7DneGWh=+\:A8c$$suQTp.F^R#aFQQm5?qhKA!\Wh`Apdq0Ig.+YLs1Td-s.$`4[QQJXA]P/kMtBtA-CMpMKU[!;$Xr3@WQ%9;ReFZW0sX)&e1YB`G)?F%5<.]&@*QEBdMK;`q]5XQo[+[AJj5U/J*!]5Z*g02_8'LlEc'B3Jsce@7&k!t;LU07:1NY3nL4D/2.[%cBZu>>s1'&@7&t4I9OAkdrV-)6>RjsC>fOeVYb&WSlL6thW<NM;28##NdZoQ)-bbZbhs^O^%:LmNGoN4SGdoeARe)er@_5IXTH=!%1ea#R,>$>8EGR7R'T"eF%b%N=E2<+2jb@DDR50j_9Q,k[`VGlu:ICQs-%rdcA(P(b%O=?ClDUf#RJ^f:X8"ubr*0u>;\-D?Gu!gc%@'ke^IRDZXc.'EYSH0E?bu+/i0.>&?9emL6@u<,OZ&:!NOVGcdm7/h):usV/c0f^.$US+`fYcTj,c)W,V3n_s6A$[sp=ES6n"LKK%BLudU).0PNlgNK+N=%tAh"9Bj-o:.t1UZnTKN1#6g:f$=\kDj`"mIabgie?+F,Yu"hOu310Bc*lnci%pFLXmnLgP\rbAu'P\FZ&9%:=IEp%XF?=3)+mV56')3n3G1ba_9Y*05UHOdRq1sQ+,!+;>Och9V7Hcs%4sC\c:dAXKnbJblj'!n*iE9cgj%kRs.CSRad#H51SG*%)/C_9cFl)gL!^a)@]heOl3`;h]&2<gRfEBX#/=Z:)4b*t;k4$`T(PrAlq9XlP1FtV*L68%AD=]6M4i$t><kolO2OG\HSGfW)rE%I%CD&cP:hCO5aj+odkgK,o@8j:^cu(QI5:gB4Gdg%iP#g2j.n\@HqH1:H4'25=gJHaN4b.t3JPSKoCr+IhF^Otc]&7-/I/P%Qf]]'Y%+nqtVhqD/KbfWpYfdC%FNdKK!pZq7L?rjdaq(R#L4K6d$Nerj4rQA%@S/:lS6LPOQ_>@&p*RW0\8<]#DNhY(gDbhX^A6E=Bep^g<%CFnr/<T2AbS&1R!Ge@@#[QO^D>8bYQ`?m@dX@);;Cp]b[U\@c;/^qoJA%)&qhF/jBE^19c#f4nMMVBrAN9XltP'\](AkB..VlMt)%fr=Z`DL9:05C>]P1i3nYlh.=]3Asg2\'X8E(A(m3]fEfVZR?eb:9M,(r@,G!Au3#"fmGpc=,f`;Mk2DkG!%Sqd&Tu#K#P?$)b/P<%SPLjBm;piLM,jWL3+:4Ce_`-;^!t>Ij%4_n@_?70kdJ(,6ORTlgXl8QpCJ2adC*+T76dObDpZ0R+Ek9ZoDYOo@3R;cH]t)6+uQ+E%HdpBoA[r!C8fODU4g40b7et'aos_"ARF.$I?7RkKCXZ[F*QSQ$M.;??*3I\/4gcbq\>SK\9;)1)TY\56XcbIaU<GT.Hds2%=.k[h%:&^/9VY3>V&$iHR@-4`uG3lT--tQPtZ?]iRkF"B51Y?FlA?'\_]bCp:n@YBi,P1<.GTAZDRHLqh@6,-LIDXgJ.Ck%,CRJtIm^[/R%6_Qq,>og/37m">F0FRbqeT]"SLTd^4K_l1G;.i:Tp3aBLltp@1[eqr9g/fO6,OlZa'rQ,!`n$#prX`/P=3C9SV&%W6\c*;lT[E7d%(j@O:gNibL?HkR3pe'Gmo9;%hM[.7J'\q"_.jcPFb;Q-rQpb,p$=tfn9[K6"=S%l`X1a88@XOp7I#_!2V56.E#.g(qFM"8WDu7TQ%D/k=Wc!oD50uBN_<6j241MbC.*N:r^$qu`M28lAa0Nh;kVCe2.rQ2S7QaWKd*mg$$f.J.g$dDSLdmR<]OrH''J+Tmsq;<!QhK<6i%+`hp@kGXAhV7?Bm7KrCNeSSSQA$M>jhGWtO2Etj3Yl5gn^10r:Ui8?ekZ\Ef2)+bA\ni-'cc`oi/]<6@.N[cOCM/eS@0r6aE`:X8%U@@#peTZbf1Ek?fVs,89^=oS86WIj*I3,F#NEI5i-*adO%SFfS"aSU)eDoj%s2*l56<@j*@PGcE:C<8OBhi(BG3iG%Vn4`7clius%HHW4oBt=ZH<-,70Y5o9?JI_"?c<.[+W?.0VC*r8GfJb<5]YZqa-Q/?6^T,oBMD5ELl;-+t_BOl_=D;Bm:)!WKC,;u3,,4BPcEuZI%Z33\69_(W0M5j')4#u;$@-1XrlBCG,fR)R*f+ru';;$mQ7F`aQ<"pg$!.0+Hkuh#+)o_N6;.`3\FJ!fL<THfh9:0G4Cad\5a8h[5%U>)k.>&\FQ[)[<um8q/5iUo`U21T/882?A*Z0tQd'tOE>,iK<m,$IK73F3WU;>8!e@G8(E8k?mRS'QK\N&=`\/.*93AmFQnMMc]<%KR`9o7i2=.X6mHE@CQR+'[%.N,Pc&.*WL40^@npo\?F+a$+$qKIL/Otl`M+)<XBYCQB3+#qC5tY7*J^YD@UedDXl1)N-ORAeQ)SI%.^2Gbgd.;-'U)OtCjXu/64:k/@9+A[5D1Y%74V\^MD)T>gVD/Drk`-WAF+7T)@"7.*:S1=o05t&Z*c!T8Ze\jbV';r1thZ+d0>#V%BA\e=2KY<+!!N,/4f,>)9[`H/c:ff"#_lu1[64hC./40S3O:M4W6Vd7LP!a,-(Ak<[/#2)YtQj_0?VcW@@\"M;(Hs;nl_@7W>H$+%4`$bu[%8:#kg`KXZ4DK:7k^]5f41;]*0A7,>M9*If0u5(/.n*n;'8=S7;Bo6h)S,Go5`eMQmiF;IuegYbc'!MVe2gAd#sOjDrNfd%bhJ3GDkT.&R4QcY>[Edf0;RdkqBB$p!CI>#\nFjBP'1Y\<9[.BVDB0t0[\TB,[iCl^Kidu-%AqNUHoSm91a0V0",d@IIkW#Q%F%k%dGsk*Us#KD3301^L+:$pAQ$KW'_/tb!n'.TWOaU(ia#RQ`&5F`m1/4*gRDF$h&S$R]B`6omXQWbb6@1Q*6re6b"A>g(4@i6I7'f?%>(<g.R5"8JKXjk6;"!N_U(/iLd9&E1JebNsY\RD7b5H6&a:Qp$;K$Y]`*a6!r`fVtGEBEJ=<`@PF)'>M*$bF$K]m.GJGCl#>L;2!%IA3_:B3Nlo4ljOsX3:4C=E5jb\_H=9(nD<o]+MM._[?<Y4aCf?hP&H6@9.'r>n(6)h[2I9pp<RTl0DLZ%#h)b=:DsiQMlFtAIf<I%D(f7_\><nG#FuplGMhF\'GNinq1P10pl:oJ;Z;B<@J^jQ>+6Eu^@Nj,:OSJ5FBe:s<6r,)3gMo0"_EKq8u5%He`"J+jbSkCS\$nT%'BEO,6Q<OJJ=7s6b]mfrcT\*/m]hl/m@!a3l!-X1U-bi:#7m'UhNS^_N!jD38.c,D+bIGi#_]I6Z)'F5D":J5&jkZE9\IVAMW&U;%XmRJl9Efb>[Ta6fDZKS5#3+YLb@)`IpHq+&EReHCK@%'.A/o)@0ZN_(=]K)g0qZ;Q\$K4T6oDV)@M[5KFC6hI!V9lBKb5U'BH:!M%:M@(H8k2KY.in\kk[irC#@#K;KgcZuTu#\A+9GEt_hI[eZ<$iER(NfrSYL<O1T0dYC.L9!$ESp+/2YaRUgjq"\G(m\q6Dc-5$nbN%C)E3j_RJhVp5BpE90?OQ`j>cZbP.a=J<)mf8Q<R:n*$/3H8X3H`_k$J>H:M6^%T9#f$848j/$s1/kt>4Z+q<DcD^#Spre]^+B&Z@%npY/*HCts*Zjg1::/,R!E4*%prpn_\Y#>$aLO[#r*`Tlb;asQD4G+ef5ZQNQ9.E&F94U-s[igrf+`uXdi2*._iaX\@;e&"'n?Id4%d.quS.3/_a7CIIF#;*IlbU3p@29gTVq<C$8S6F+k2#O$](Vmm:3aE"JFp0[=9!?:b&@>S1V*LrPoPoOE$)bo*dZ66q#f-!s<.'?S%Xbps&.4pF*M?TW<2]^<Ef7%3>LbQ?B_A5#nT9$t[fI)omdk1gZ]0Dl"L^AZe'?+^>V"V)_;!<JK\Tji\1URkF+#QbB)A7%j[";SZ%GTn1,k11[7s63T7O5)P^ln?6^P&&%-8j'dNeEjlHmnQ@,RTc/WKoV>8D22n1U[N2Wek3WN^C9qRSm\-N!99#'i$L\2iBeWR-i!=$%62f>(M*/(m:_1o](20bn_bG3F1;A[;pqZg^c_17Ok5u%^7F+Q6$O"s]n&A#`.V8Lh'$,e2kNPgMjjVJ5L<[?a(g8[Q&C?9tr(c.d%eL_bYqd)eV2QEN3*%3ZX/!HRiL,_uW-+8C"auXTiX\m!@_@@XC29IcaN%"=0I+41B_%d,9H%p!GT-hKX2u58p9uKWdM'1Web[gS8%<*R-7/Fc@jIk:?.71du+(nlkBMVscLS8k>a#6pH!Pf.'k_Et.G[-'UJOemTn*NEX@7Q;\`&.0%ZI_Ebl;,(*XiM]h[pU_W1,O@cZ%9djWE[en;4h/8gA*kNQh.,HZ,R0./^-d@$Sm(G;Ep%MIA)g!"E>W)5UHRo$J%)R1(2=`2R1LajG]IMd3)M#CT"fg9Ckch4oKh>ma%6;On,L.9p]^Zr!R&gWYQFC\B8Lp(#WUa&9C7TfTN3)SJYW+J1F%.'1V/2$+X:(<FPZ-e(QhdD@[WCc%M?^6:q]Vjt+kbgebi>F*3%Fcb?(>N4lX0b`n/0l*HY3HH[p;1aJ$/nu&`]:k"\7##8PJ+aL26?*DuTO)oBA.C/ahi#3B>:1"r[f[&ohW>M9%:q?ucg)OGiJrBe%"aLC>4#FfbDlje-(RE"&O.q,"T4=50?`*=T]T5ob/iAEa^9gNeGPVOS4jW,6F)W1sIk3%aP7#WokBCK4Ui.\*TS0EGTf&U$1-3^k%G8T;9f-?#Z5&.Pu$.*:;HS@l<.NW8#c\h8)hFcp:OG\C0_RPkPkB\9>:NncRWbb+q'nt*(!a$k;W$JCIe[BAG*To`dE_J%[q]u1N%q'>11KpZE/V'GoY;&X:HoeBt.3's+-3$#'`&]mSJ$5gY^&X:EUdW/.E!@sOqGpA]K%ks4(NbV<Jh&F!,e7,u6N?*S5+SQes(=j.4%`<f6_&`%%^_ApbTcgH[i)<R(BF*h&"4@Z70gkegb7lnjPF/K]W3kN'!kS^WK&V7MEq0ZS*q`++C!M_VsDlF5;_m)D8X!H,64:6sI%>Dl!6OCdG+EMoRRD-K[;"=D3J1M[%4(aY;[QB\SW8F+RWTf^\#A'3AR_\%*,$NhIqR)aMZZtDg0*ek=efFtqZ(C*]3RQ6DO[n^r(%cm[`G7d9iX!r#Q<m8"$&+!m0DKW'`t^4T`1dAP[`ApS4=i&i5[T9J,QV!#!ehbq=#Qq>"u:HhgI)p-7CFQ->k94=gc$_u+cF`'7J%,+VkFhl4$cU/j!C9,.'[$qoh[>ucJmbm^+FX-r9W><YWP>9%4_mh-5(_jkUAX'e)65NU?D>q<P)*7]dB>*O$B^-2I[.T,7XLLWJR%d4"^2Nlu`[Mi*<g69pb"E+"g$"jDT/7qE((G:9^=<tjuK1tu$FNN\FB6fl<d5u]s1*^hrtlDtuUjX14$a&/\&,]ZtCD/63D+d4rd%6((26:BZXKSssq)(!0C&')#,*3j*<3Y[sSmR2S`X4sT@^<\[SYb>>c\4J#F#!a#'@nOi;;QbYUR]7nF-Er`gZ"W1:F`ak/("7f]C%PB7I.UUmFAf6jMe^oEHACl?-R[6*2PW)UL\1/r[@WTgFW"gON9#!rM*7,^_.lC#t*3WW^X`;!3iC0%Wcqju]LrQ,m[*L1L\6_R-D%,qV!?AetcXp`bVo<\h_&5lFR8]m7oO!UuGJ-DIpu>+C&Y,h_flZ!8,C,ZO6#g06O5_TIiO_0%WpNb<\ZrA\hIa$/_n@<lP?8R%QN%V[3BijoT&+@aU620bB([SfQ\J.fHlW!>aCG-q]R:WGG&2G'RI$/E3D@>$,g5+)#E`+k<GMh6_<h<JhM!__*Gc"8!83\$I2Vm-Y49%W;G"<m9;N#@\ZZQ^I")`O6e?-dQ3dcbs*2o?9mO%HN(6$GJZ%M4eA[4i)FVinOibjfV>/g?`iUdQ58'IHu-k)OWq0=9%#<pM_1Np%07E.$#5NM]/uo^4pmL)oZ9TF")M:\eN@VitMKRq/FqV9A!KVBRiq<qGSfaF_r%IElcXT_h)1uO'-fJ\%]$W(1+6=!a+.JmJ=+,Ik%B%1gHIf;,D2i2e?7/=]]e.j@L@rjp/j(NcU4+2K2rg!'2Y?2[nN(S(m9l@eS*HA2^\kO*b2j[2?oFt@`!ZhDF<A"hXZ7e='%Ruo;%^'UE&4VRH5e<W,cH?ZGOhQc7o^.Dn?VX@e(!^+Egng?Fq=$=I&i_[^9V_:V7(]uH612"NJ'bNmI[$<imk!W@Fk=kpQN%N;h1qK2k%0f7taXq;!Nkk!MPoW03*E?q_E`GN);fo1[r)RP1ZEBl(Ds.uj\YtWHO[-L=0)UCU&dpaK1kI/Lf@!"HU]`fgHBiQTQLZhej^)$n[%'JS#I]bMWL3O\5K'3Qs\-_=us7kg*Xbagu3XeAB6-]LJ*aj)@mKKQ(*E?sHK=&>9Dcc!Eh.Kb#qVp;*3Gc5fi5t-eu8ju=R4JtGP%Y/B)X$?kETQ&q*t$_o6ki66WGX;(rONb?-_7NLf=%"_[-+*Dk6RV&AtVnWE%U5eR+SGil%VKQl8\>nhsWFC8li1n2+d[D8a^G&I>%T%ej.PV<C']&DMa_NBAM'cYC<Hd%hnp)0!\?BG[O*=\]i"m#K)<r&tU8ooY%[5.QQVgO2mF&oAjfB1hU@nrdT$Lbj)o=D%A$I'NU%,jPoO[Tf8VR;HTcHnbFBZi?e@k3?3$M=Iua&VBk<4PFS^KHO:_/j3J0gP!@nb)C1,<(27F'bd3"YTC!8C[Gg?GET,,820n^//rT"%<E&2;.$85Cn.C]qXb8]7'US>N%MSS7[1[)"I)_p*@@nE#Yd!Y5#[V5RB0jHJ\mnX)j8b-[ofd,VTp<VCK=tm:W<4q-qKR:Yb5?26%:16pA"OJWEee?dn'/#UUJ('/5BK2h-S#ID+Kjb@E./s5#Xl^<(7r;G)MC"D%'=MQRWb:jHQJ7;FB<c"mLOGG\NQKfs'e4f-A9=`8%%<(tJn)Q/=*mFI8%A>c1HR#45Y(p07D1p"ZM"(M=d&"Pm0<'8[Zs(G[_4P&bSba/nN#&[3Mq)gs8YYu"MIQFK@V+=KW8#MG54"7f%RH:;EUR9V73Z+W(4l70kBHEbbWl[RgjVa/YMuSaWJ&ab7(W_=eMhM+#[Xu\Gp6+%s#j97fBC$Z[F4'<+RL55jX(!h<r9KK7i6Hh.%FZOPK6Lp1ml;+9Ei[h's<<`J$KB)J&6Zi%Y=qJ27ZHgSogr>B\*6]nR$L=+udqWjJ":T@*ql$sL8,8!t%JZGZ+Q'sZZlk%Y_/fe3%Q(IckXVb,n7;YQ<erlS:AM>0h\6kUfYV:P3e]8JW".:/(EU`0@:D"VqHHV_M^09cm:XZ8b+Bc!4)h@gn@\j=ICAQIDNGq5M1%^k5%F0_gXa55%o4eX"*>ih)?=ibW-7W%EL>R>n7k5#*G`lhHFpCnq"6U=5aVR:[.Bmq@Wkq\OUJ2B)sB/[qq'N"Q1.nTg$'UFRYmXLF^%1.*;.ng)H@iL"eXkVHXB3Qf$_L?_]#l%Y`HR*njo4T*?HX,a-R>^^>IE8OskPJ]K3?mObP<e_1$o"%mgXaBiJ85Z;(JcnL\\m7La%2#!>gD]5iH;T`-Nfa<#i`gA*SMLVH0.1O?1-ujIWr2CeH.(6?$%%2`J;a0s2'sJJ8qKkXaYI3`[pK7W/0&dI+Mh\C+XQmmu^?TE3%0p*FHCt08\YfSS$VCir]>DoPN@n=e$:S?@ghU"Z=eIf1mC9A#E>9A\[?2$F8G'*9*1EXJS].0K>P<MK:j>$G!Sn\]XG@4a"!kD&d%X8sfDQE?D2D@auqJlUP>ZPD1b6]:t@!LP;_b5Jckm5SEX@*L/D_E9E7&Z:,.DUlKg)Sl#2R.SN8"oaXB#sMN+>+.%P]*T>nr<c%[%6l7LJ&=`T?:STWdf#ko6>)5WNe+Xg<It5tK&>UCP5,Gs"pb/$V:[Bo`KLOeWiDfX"K7k]ZM@q+VHm0A<4"\DIQkg%WQ8*#ld55[U%m*=B+lBNN<6/hAB&oAH+gkN3l)^IF\5<if(#h;eGW6T1mo@Wk`Ob\KMgKDCA*5au)7H]n!ga%S=PN2/[b@mqXM.@P?h,2+2&:PsC%UAj6t!U68nc<'8sN,T$.dOOB?G1#Hn*1"[!>MWf><@Q0t&P;O8NlY\HI6htn45bkUhJ999X-n<oaBE$u6#k#&Ll;mH>W!OV\Ad58%M[D$3_&98bUEJm2h:t,ro<F#lIqR#\a4b0IDS_`ho2[N,h!UOp88QPs\3V&(0@NXVR,i"YBB[`J/U!=8.%KKh@3F_]L`f<OkrXL(%M$%`)XC6Fn7&8_grrY<VOZS(=Y!K/%!*re6+"\`WohHmlJl:"F<N=n^>AR*CG32Z)<IK;jlbaD'&Jh"D)^AI)#o]ppX[WX9(2uKD%1a!S)8.?FVOi(,S5DA;lEtS?SN>d@GH#@pHI@ATd![,c3$K`n.*t.mIjD:K9'On]8gPM;j`1A3*Z%`P<OA``><DMS:<X&Zr%V3O+%A.=g.X`le*dRXeV9Q?P#_D,@gE5j<V>)8;XW1C8j"bAd!Hd)oNeHX%Y73Rp$_4'Q;k7oYQJ*eOXh";SZPgmI^iq_)G>C/J1,K)g[%&E8[jlQE57`\c(g<fsqJ?UeR:hL_n>_YPidM?LCTWXsC8ItAPr.ZBY+a5?%7;1]qMCt0jgF8"3'oGdA#9VYI,?H9U_NtY]>#KuIl%^#)Uk2i:f5d8G=\,#F\0qpE9@=R+R?Uj[JU=KWb96grDmR'9GtCVoG4,;Vp'%=D"F^Fd*[hOuWAB<ST6O05__nS4"U`TqHG]D.T,%fJqbV(-X!>l-\s2hMnf>GUb2GD')ZojSg=Je4)-M*=26GOKAs"(Caec.I'KLRC4#j']p*j)U'tfC<5Zg!i^&cS^N@b]Ii+$A[FkB%hBG.>fl\X"T>KFkZj_0d#D@%e)3eWSAQj?/&IQRqhDq$sD<lNM*KGh`>9J_l'?j%Yeqp<oi/l.u%"hUZ?nk+N;pg3\f-;\SRNk+=%j>oND%VKZa-!DD^+6qr$cRTYed1;0o)sVOGY&g6!Bm"ZJ/G?hR5aW/Z%k74Ig*+[T(W*gsB=Ubcd`Z4&3dr.kN^Db<Lu[C5n=N;b%+dK'gW6>X\9tpn\,7?stp@DGb*W,aF'p#OOZ1J//;fP,]=VAH+$ejR^rIS,?"G5LHX(?B6_pMi5F6uYiKfQ''p#34Cm7u9fNc6`_%h13Au)pC_8eMda2"!rnal`QfHX$r_>.3BdYEj4U"I^nG1d;[5FgtYHFIC)WAT2IiIT];ms7)+:e1`lh_mDa'e\4*@+hlDLUs8Po=%n.gRZAS4&.,%Kgh$]#SXoZ@IEftf5"Fa#0mB$^*ErSMq+Wc![m/p<bHo#P:/dof=I13V,aXO?[VXnC?3PkbZBW:(!Q9XMA\\X,l^%G\B]r*[b49F<=LiQ#Dg4H$G@Kgrg"*.$hH2<r5^Tiu2@9:k&5*g4:K&VjasJ/5P-K`&-`eMF[-e+F^d<]:_,>[0lp$(D0#CKPoAS%boh/Z8;<WXSX%+dSpN)%]e519bKB2BSYe1SO+Li$E#^JHm0Pd.M0-975pi3Fojtipq0m(;=+YX5Q_>_\W>qqM)1p%;B?F4daZuh3%7@.0Y`_6]][`"UmV+r/\_^D`:8Y`Fg:<n*JSS+Th:.L'$>34kr,Bc,1A8k?V4]A"Rk2(n1"50eWRAh*f\m&Z^BLLLoUTZb-(#m6"%`^9O^K=R<jOp-)`\>VS`=76U0D-K6nQ^?KkRrrX07qiTUOW$VecSYWs(T0lE-4tD@/gt^S)DsVWDFA.D#5Z<F]>,YG+G)p()&CGB%?9rQ%F!`:<Ak$frTA;L(+uR;+hs.aL5=9]-O>dP5"$)l`rntP93jOXMIr+:<5H)98EodJH6iS.<2g"4Va84:k^WWaf=dj+*rhjBc%Jgu[I1qRo)XA7o'q6N9K;(eNij'hV;D%MKFQM=*`"&#;f[!oN2P-ddrfZHk^]1B&gBdJLQ<DIo9+l3cWi-ds&%e`n+:G#&jdLo0U%:(!)aWok[lnoe"[FF#;0(\3Ds\GgW8rX.Vt5gOC@l,qQbO!VNlfOe`_Bmorr;Q[nI.IsgK?Zk=V4@0K@3;oZ!&Q.k36_PfC<3N'D%fa:EF_Y`&8eu+"4DWQ^.g=o3T,S?t4W@tde&2#d#^4cVIAPTq8A##p=?,`\ENM2Reg(>s[Ouc^T2TIQRD^eNl(Ie`Z3Z4:H[B:<1%o'=4s8H-h<"aP!frZZQ@Bs:"]HSV77\f\]<2O)e)Eq6>4UA@c#el#i&#.4`;A:R\J>,WZMS,7:^>??MQ0/E;'Zq<MI]P+#t;*Q&X%MDM<cJ'G</^agY_CMpZjAV/XqQ5Z]^(XrT7pL_Gq.9`bDJoW?h.54X0:;`@'27E51'k+2?q7]l*]/2g(\fIe'CKE)+XB(VaCUsG!%I%ggl')QgXpARlUe#8=.:J-3o.an^)BIuP;B.?MHM^W_N%.5b`UKo0F;PXG&9.[^ZV=#f:XqoP2WsANS<L$iK?>P:K=G"M7YPe/?%c8rB9l9'RNrDVi(HL(d2\h"4&/`jsU<uJfhqr$&;ZkmT4V3-R?-4<f+f2rtQ]Kn2]l<';1,I"UG$lBP4,r/_]hGMkH_U)q.W5pTp%\o%:ufmBQ)W648f<saeACnP\.gI<>@%/g=0NtUnJ:>khh'%8G>FgM3S7;=#<:6G]\I5Ie"Cqd<Z(3;8/U[=q)o?DDlp;)R41cLE$%"_H1h6^2?F#`9c0F-X)).u;JW,HcjXVJYm%f#G?Q3SA/Rr?fTmYbfMQSGn?\j)Yf$NHcQJj]mhPR%W1bRLrD@D3ZPU!Y%MbAK)ee%$7^)?mDP3D,U+n&HeVGW12S%"9c7cArH00)!>&&slO/^m;PBcW\0;:&9F-RUG3\WX@b9S`8N&*rdLM8a-t_L@0!`RmZO9ku!t/WY%cJqc5PkrW\[Xq50cNG;5`=sqg5U\<jkm?&5)-K>4QR6Nq[\KTs#cC%WdoNIn`'>4kKH41-08C'0#Y27m8AKX@8%;El@A_,+9]Q8[%;/"UP-F%HIRjt0se(gXt*!>e&NkOS)GLnA9c^J]7&lqFL;NSLT7ko8</g6.G#K=#nOQn9-8WaXl%Q`HJ8]Srqdku_Xh,H\e*hKM+%-A_*ZP;,PY@5#Yf<K(g5U&qldO!7*t'2=2qB3aOq8oUr8bm5R&b+j[SjKT+rfRN;Gl?Vut]c:9@2;f\bAROaj]0X+sf:9AN53_\N%@81>G=[=R0!^P$H7>XnEKV-H^>nHqrB9t@Wq*WA@f$<$23fD)G;3W/?VjYs4S#O$D4(djQ.<]'?)b\M9gDM3bItp@(GsPXA?QZ""%EthNgeUV:**AYhgS12%-Bi2FB6&9a+?;p=68/!$XPa.HNh%3_c\<fTbj)D;n-r_Flm_ms>5cf^_FGeGJ]+A_$Jm8>C+\:G<C^lOr%Vu-DaE2&#ITK`7/?"/R$f<=IJXHb&,O?6^!O>2)_jWnlW>2CF'(@q7P=i[rR>Ih4p*k+#2X3uRAR+RO=&uQL\hP.O$-FkUj6D%G9%g)/GH-$,.Q%UtPF+_l0$`VB)o0^2[&PN`n[$T**m2#d#aR0FYob>,M5ZGK[VQ(O@.Z?-2sYQCOTXq!aUmQas#Wq9A'XBGhfLME=p%8`32]k,bSG+KO+OkSt$],tX2AparY;*GY$"75<Vc%g6/SAW4'E)OhjA$:3i]I,p6sBum!N9*qquHOn">X>gI[(.ZtXMrE%*\,t)B%]gc[0'frA>oq\adq\4B1D(uKgb:49eY2VH(pOI-A___*gVFN7@aIULt5D&Ma!+fW+.4u"32LeDE\`cpp\ifX)+NO4P]$#[\1L,#7%eAfd-k>GC26Y2g\-eT8s41n??#m?Nr_JS6P6t>$a]VES48ZX\slU_=U;n5L"7/0@j7Cbo">GRoJH44[,5Ll'EY.Tp0`@YbZ<T7^%%]nf9Pf9ZZB1sRGiQj`*cC*V$=2,:'!7o2ch",MhlV<[d-'1m2tj,Ws])aQWCP\Ri]8PB24Z<XreckRG1E/d,rc5\0FOu,r(I"fM6%jYgJ<CV92B$_RBGEotYh4>P7.f2`T&<AmFW;6'G,D`L]/`(LDW4U>^=.bfN+1o]fo7A_GuAQ^7<HrmLK,0<%8iNG0*3QBI5EZ_%-%Ro5rC/]9R;Sh_2?:$U:k-@&&a31m7#Ms1XI:i[UhfVbp1+.NN^=n`bkK`<G)W`:0geORD_=t'?MdF2Y>r2_C8^QHjhgG04bm>[1)%>ihTCqX[S`1okGLL#H#\/3Iu^9PeZRk\CNPiG'>o!7I5i1L_8BIVOc$0Gfh_1A3gIP@e2<RKa_`VMtP@:=>EA=224nL@e1:@nK@L%117&KpFSUcELEh<_P2pp*;%MG)QUZ`A6NY//0\M%ZuoY'@#8DnI$VB6[iWl?c*7@S,RGWj.;-l/>$5SIbOcD\21@m$3&53(OHQfX%1?+)iF4B'@I"uP0QmIZ',1kU*qU09DkCi_qda;?5WsC2`WWbJr2jE&JqZ\X4pGcNKFcYoo7>FM,Z;j+$iT`K+`,TO#Wm-K3<K[Y=%Q\>`eQ,qTS=4.D#4ARM^cRm.b3&B\62+^Ob`!qECm2:3UF,"F=$sTga^1.tTVJjhWk=[Ahrn\[m5%3.:dE6'p$d/PKD-dXk9XQoZ%9nPm#!RIh%MPPN\!IB-lf]RT]FnG;&).%_UYG0BG;H9]',cS\g!=Mb%.i08+p=&]!'\cK$h2LBMj0h;IW&Z)2S,DSKpLdV%48+N-%\VeEWM_ps1n6W""HdnsGI7ilPp>E)%Bh>>=P+PR#8EFAu?Q"mL"mtnP1%F#1rJ#\TFd7j>AW<lX(+@e';>i)HfGbGr3]_#Ps!]LE%p!9!%*W*2L2N%]=S)7=H!n6f*)T7sZ!YL+,8Wcr'Ks@fL=DT53s!lm*f%_!sg,hn5<s7$VUZgi7-J`mU3GEA6:32,HA*/!IU6"j3%3j[a4Pt786"`4a*"p3F-Kr*SVQrA$8XHfZV]%"tS\0^+4.\/"gI94=_o4rgAE%Wd09!k8:W!Qo/gWNjYgI"s?U3DO4,FnbILL@eM%h=n(T,JMdXTh6Xc1+>]Aep3V%i6Pn^UX_ob%T+R$QCb@%WHPfdeV_i1RNk=h)r*B#?$>TfWOOK27%brF9;BD\p9V7KqBRC?4`P9m%VOOkJ1$sn9guC]BG_OXEAr;$`A`$I/HA$-\1H4Bu'#.84Un)5ac-kltp*qsl`&abU+1T^O,Hplt(d^BW9#g:PA&:"]60%_3fL"!%%H8PZ/P"J^AI8`c$4:8Zk>Bic:&W'aHF60LEa<t,eP-9kqqg!D>k@_dTBFUb<#Ps8H)9KX?jVl7K-d9+i&K'[G?W>ZA1>qrk/3kc(%O1BO,l`+05TB66>j!6Imc[=8em.Qsf4/T:c,2qjeI\^f^p`rYCkO8Va``oU"]0shLNlZT2*kQ[+YNTkA8q46:rG*6=.=V'so[&mM%&<\cE+8ap`fVe1:&KVO?qSUnIKm:(q*(T$)6Ghk$2oajU6etbL<f#4^043&G?&d,+A\%?kD1BU%g%.1\e-#Gf(]S_lh;n=:Ub-3&%$#,VNMGh8e"Z+\@8pN[m]p%HjKP,YVYu<QRURHK!_kUE'8NO<TlZ;uYHubi!iiDY+I67+$hIl_/>\V.uXa`F`R$^]_;)<Q#QLWu@%FHK&J'nK6U>@M,4[c*7VM4,peqkt:5h-fnLD$i@q9F?\ZI!al6Uqa%f?fhtFGR,fg$4433Ve[5$1$YeT+=tCY=O0.uf:Ep]G='_*%\h<Sn>m`YcWcVMlC4n=3Wt+#sVP$U0*#4:liFksR7#IcUom9V7V'`!+8scACL!,/'!qb)Ln/o+iI=e33:Gf45(oqDE_FU(1Rc#7[%Pqs3C(]?kKQX8qJbr7;Mp^SkbT=Q5uV$sD5-bWh]7!U.W#Z0:+q`P]3-iMb""8*'CdgR%L5-pm+p?D%LVP-c@m;LWkOk2JY8q$A2%^gktD%f]'a)/6>C5Y2`#,s6`NpJk3&'h['0Wn'sgl=H=s#m<u^82NWA\7is`:FM#s"#3bP15V3thd(R+8dC/XZr"!gnt+i)B#"%1%Ok9jslZ;egp3n9'UgU.K4",Qk]uNmFl03(UG$GC<P%N&s'a7CXqkn_LX^*NWc#Ys^C/?&m)4@)XB\&m;XT^179*]J"j.m`Z@ea0P%K>[$u)5"JEF$DK3>eG-FGe+D_iphor?u`roXa]\$^LNo*-HsP[@X8":`D(T<]8jDsd:k\#3!#)&r`B;4O8`Kff_;!;f_S-0'N2QL%Aehd^U^!G]Y<TXo>cRR9=P)k&rYkoM0E&B9D*LopiW=#*DkcA6gL9Ys:;lIsma9l!'sBDTn_@,'<[)`BTsZXfXg0f]0Vq(DO;F7V%'fSGog7EnCG1EqY&,hTk:[)<[KT72a,&?h\2&541eT!5j<);:dj$@4+h./tAO1s5efEmCh^.U"'&`#un,4m\1.>u41?+^Op.,Ec?%.BW_!)#V_RgK`:A4c6;L@WP2l+3Na]Ih^FQ]d_,9(?QqI9*.lQ&9JbVZQd>Q6qleC@4rIN8qoE-.I8H9=8he43\n29Je5\amUr@;%Nd+U;)O"`(hm-ipo<`:\N;aI&opNN.dj-ah9JTo(H:&A)WLN/s_-&\'JsZrXj9D.tQQ/c4C%K5?a.tKL/PuQpMu^N/=ALYr!k8>S%4$4:C^&"`]`nVs0Q/2\@+g8s;B!m6-cHskU,>^E0B")/&M*8cp_@)#L6.#s:Fc/*iBcEBQYiV=[7Pj+D5SHWM>F7XQG;g3f>X<TX%;=`J_Z2a*GCQEia,BN[JQnBe"_A/>'Y-K%<#lG,(bGhaKC0h<8I#%04:,%b$j.r^MXSTNG8M/OEf%?CQ\MH5o.!)9N?oHUX^G8Cg%lk-eY9;RjJGXS%%U<D<>adbm"1f)oO"D%iB.eOD;0)]HW1,+islL1-inZ!a2;&`KMTnedL\S^8,/n_V*D_cC'5\]/,-sMcnD>0Ut%*F30)]dp(V+KIBTnXZ+i5B$D96#N#H)!JDr?93"VR#a\&H)2NJ.8[sa;F;FQBQaq:8ciS.<TD%oo^GBV?1&FD'<@k.KI1eF8GIHe%/OMX0r1i\])6LIW2QlaYo?s3YH8nhr'@+'ZD)o5d4H[=Je?k8.+aQkgkJ?8[e$F?4C/^G\M4\)^>F('R!f.fX;S>is=i3D-XAS?N%;6T4S0rHltoCFgt-4G($1m:%bckq;Cm?AIa1;-O3FO"3XIndQa$<DTH**\f`?tj#U)Xi"J3juAL^fp!V#\1+o"VtfJ@D(<qH$(:2%B1Cc3J!jk=UUe<<M``ULV\2'sG$C\Zr>[+OMFE?*<$Q(O0U0%])HgV`W*L=SWb=q4p<;])YKD&>._)_U<:^uM,'4pTph5GnDT[O2%"4>9!<`nY'_HI:Z,JW3p_:nA1-WYC%W`O?9ra68\PJ)'-Q<Wsbd%%8^iN;0q9jocd'YE>B?L*WlcbI6-a7#DOUh,1hmW^\i+fh?J%^JKZmI*di9XKIKO\NJ$)\#<dLoc,;SQ"f#pVh'?4`NRW91.0?I786WPq[`DCP][db:sUD#OB\P">o,(P\U<N1]l&F6^`RIZf,luf%e9e.:V2lTZR\+Nq48+O()9N&-6-94XhET6\mh$N)1YJ(YH7^t\nmHsLf$q'U^=_o,-U*#`D+fYDK%3)q!Lg5ajh[@rqI5Xmn8+D\%']2l@?91+u4n@XpIYBu]B!.2(p:;U.p@L2^;Btmo+e3uLF]j.#CkYN>nK*G*Y)QnM;PAI'=abdTh_G"e;qTOq'&%VF&;)W>"hoKB%DDM&4[3G?.(#*-9'.tmdmr/-a/Uk`(mB!H+W,ClFRb]'gA>E0`5J`C7k/Xk>p+,Ro@kWKQ!Un"'<j0]\^W#ZoVlfkr?X3s%pqqLX%,/d*"B_K51Ic>/+NN^<p1d(rbP$;GIi1=0?D'eZ$FlV+\Oa`48Cc^gAO7GBp4%Ka+?#a<N_[`G>ku%o/Od%a@7,N,i@_UH*G:@t<%I'qk::HP1)'gVD4Z&BA"52RGiL<t3LjiNUAP`7Eiqo0B9kH"QAH-8->=F$:W\&'O"kfWb9#;#$3f2HoWQesa<e^%=o*W*5:\N6fb%WT<$o?0*]0*",ZmI[?oo6kAXm;SO4l04hNHqo"QIq]5RP?!G_lk7JHn58;^S8UPkNnK@VLo"9d4/&M*C*8]Sk;C[(0'N=,d%`;8t%Q*%"o%Q0,b*iTVKMp@qfNiJ@IGMpN^q\Atg1OJ7NTpu2I5PBc.+@alF&uKd1+cA,jm,trM4S*to(rbjn.$Q(`d37#$cJ,*X1>DT<%B8JaEA:(#_C6MfnG'[BMp+5KtgsXY_Mt^6Im-9McK0k9p9,I$`j1Y0**Wm*b=f4LPb4!u\7JE%X^-?T0IG]4e;)9r1\>tZkiQAPU%#Ca>@n(?fQ5/[ctA;AZTqMj3Ze9RH6?LFP'8pdC=Y5&_!:EKk]oS8<5,Z6hUMdd/bj^@gm5Ls>ETWSZ$5jq!MB=4Xr,X-<(1GR_3%Ou<(q,G.LAo\nF"q3c`Q,ij,10cuiuf6kut\!,p-`'uUrC5js"XQWZZTHS,Tg_Oa4VcY#s6r<45=u8KW(X<)K<_)bp)C@D:amVCm%!te1?G@#L<>Nkt(E;?KQXhHGO:VGVtg6MPZ,4XPr3VMiM;+atUD<d0<Y/SueB0h#<2$][I>aRZnJ"ABb54=s+5"eKB)e=#cD\,#8%5uFZ\-rGEJ*'I"DN-V1<c4UWg_r=75O)qFaZc>H(W1cMkl?uj(4h6Y.bDE"<*YF"EbK$@FemLJTUmH]V-<eD5kh7PIrK,1%D-EMl%[Bsc)P0C+mFc-Xc7Wd?c.5sMdW4:.:WlL#udm[>`oTU=^"NYFqj(\AO8:EhZ)."[R)RhA_cGp:4!k5M7FblQ*@F_Kir!f,m8D)SM%rK.V)ki9*3cgk$I7K<itM@4?)>)mN'EPqDSfU?)O9.5I>H>MIm>;[`lWhhOEHJ2K1b?Sa8aP-o7WAfcmNpAb`*1:1Uf=_@/gPuN.%g<Gnt`8?B^ODgZC=dXEZVt?Xtd"\)eW?_bU:,,!+@;UkA*AFUmoN"1g2Ar_]M7O2[?`H/9Lueea%ZBmiem*\D=luu3.9,#*cb&r6%#JJh'-0])3Nmq>\Rr'/J61tBlAH+AmQ7b=A`!DhE6[jCK(ab;GF`#ME$Grc8oiMb"I>h!GhY][TfYobt<.BcM`\kmn7+s<dpq/%F%dmZ#K1*<>2ks_ZZ#*T(bD(SgEgc^muHh(*$Fug1CC!9`\n6172=5o&.4YLFeMOu93n(?5pd8J1U93P8*?Y9Ok;uM#d(Z&=X=GK&%%Qr0RDZL>`;g)jb<Q&<m5PStFTSO:nT8*LeTP(ebWb*[=E%XghA'?(Gl.P9M9K.ETah[XRsn]:OQW60g89$<a^#:fY]X1ZQm5d@P%%CoY7um)Z2/j^\!=U,/a5P)/U;5QnHIq7arXGb,Z:M88?VO2EKoHe[.>Lf1EKFnmUi'KJ-;XMXo:Ac&q/DoUHpk[6PS29uE*hBI-T%f9RU!<)\H5A^'ncY$E1HOK!?>F%<3f^RC<fWuPIm9^n`#![$5k-`J3`(2ZOFP!!HMq;a([AX)<p[Xi=`D\\YjW3C&ReK2.,`?/m]%!nk/I!`ju0,,>BcD+,W/oC!^P8tX0_,6W\6oqcFI"/MjooKh4C-u7`q3HDe'3N4D%pI6[o/<&/ehDND)fTQg^@io.#R=LR*@hN66%UoSTF:/;<kXu_TL@,m.B[4@oe/>k+'CU;R!LQI_[G16o*QF&QV/9tY`-VCQ=[JeID5Ueof2^=;`QFDVV^fVD/J;r8&m9hKhHqJ7a%pH3h/k1W$l#Z=d.%=#j%>h;E<.+3]n$m9ZeA?eS)qPrSUm0kb)*cPlG_=50=gg4_W\(ff15f:YALe%OVb8,Qgd!VS6T'85jQ<`%a%7,t&?WNGQ(3,KFC$OO?g7:*LEEuqE3h'gG8[r0Oula@$<>L6%oK-4.Pe)bYM7h8q(Fkh_I"9u\4fSY?%D[BEC#PDUSg0Nl\[!$[A%'l?gm&MA.q--\7bfm:2;SL.c]'O^&7$1efoT9h%Zhe0stfVack4<ZTOT^ff^Ho_(L[1)Ne\\E*9RsRqHVo]UID.X]Y:l2oFj=7BH%&(4=V;qao\?,ta=?k,,FHcA"NPZ[jtK^(=p?"Ufa?aA9CZg!KQeV);B',J)1Cjr`o(76nuR/YV7R]>Cng5F.Yoh`jJ5qmbLa$3*X%7N/eI.["THgYOO[Vq5-rS,g14*?S@^c?2qFpjMaK2PLmcC,nKDbrOFl&'#3\<m\_n=IFX$18OffWaU+dgpEDhWW<CLfa[F%<<*0a%`/kni*,#-e*.Z%6N+RW^@e]7Srdb'rMJ$f,*YKW1('q6`T!$5U,5t]^q"B/NU`H&A`jY`CQfAL9:G5\]@&1d?Q&G9Fb-LX3"GO9I%8$S4fnSAJueiP?5GO:ENcMCBQ;^++WfsP:iWpo&Jp`96Bo7He6k9B?6g.-!]_CXbJHSta]rn<*\,R]up[AS--[4c$KM@lTg.7c;*%c)O@rGoWMubNUa?0\mQA-/:_kLC&o2+Ea1@QR*''%I<$-Qh_FYX/j?+MA6TkLfkM$O,Eoq2eMML?!#1jG<GWl[c9"%7=o4kABqm2%*%MAbB3duj'PqRtaDD1>&s/Hi,qD.kR]q7oiA4/TYetp]/[=<erL%,/nP"3gp'cl;QX,)QhpF4+IXB,IHJ'CaXPGdUSTWti4V4tt%K[K@A"i+j0R#7BUZQAJg#Kp'>FKp!57Hq'F%Y9Vsg6R'&"m3`9iZ.5k.Cn^Ump-Em*.4crq+tg1CO\aEK`(i)R4HK3I?kH$[2.dG%r9P9:ri//GqM+ij90JlQ3UEdfc4Cg_dT)%SJge3,"Lt%\6H\j]_U!U9!_:qK>cfXMg%0qio\edEIDb%q9sGfET':505o+8J@N0DT%p8:iWJQfUSB:fkdlGh)d^S\7M.,*5m<UI[O`E#;%^m`s,Lg'aq:mL6&FJb>+Jr4ED<=.n=KU1L(reIIBD<u]t1#&%lPqWRL+),(l%:RD<tEfP/A<l&mrNaAfR`6tJkKB83J@B)iFL#>+3+#5@`O@2UQS#Vt:J2uXPm[(8,qg@XgY-OH0QJZX-%)Jfek3LSn51^;E='47p%R[oh!`AMpp?qYd'QqVoUPN+io@HLE$=jW5(eh2kdj,pJoP(G4,(mb?0?l0>[<a%6=<.'XFpAWG9F754#fatET+=gZKfgki2+O@gP%JJkt]7<&'J#ZL1f=?M1`h%=I8H,`<=Vr6Y;<6@JeK^F/8j<Nb6@CGn5;__#!aqjUC&bnH]F]aNOU7h<A*'!qk3)$<TMtZSTDd`cU%?()=rErDY'0Qir+l[05gO=@c(bUP/6l`$plRC"Yjl@/-J=04sUI9k'&;t?lpC<4/b`9&aRXT\$erHcVjS1:Q<ms]-NFfca[fT&tR%F+;6U)XQ(^9PLOP27Lbg#f-qk_"R]eiMR/_:i`Y9ceQ)(gNnc_m."qqN)Fa1rV65C633fr^gc!(l]7HqD'3eG(SmZg:eNrQPP+\#%K'haAG3*CBYM):Hp1g'Z/rVBi^$5&F-b7*gQD2Q-*[HERGObOgjlV'i;u<%/%ukc\E1OK4"(?-FXCKLU3rX`(k'e>K>GPBUL2ZQa%MW\CFl#E#mpdaQj#`F(c2?mBeCUTt>qQXnWICphT7<$%H'J0,cQj^bt,1Rl9Kg:\a>/..#jk.F"h3S6b:W69(`EKRs^W,eEJ\SN_%X+d!(TMF)I(-O*T%afskS,N;9rX+)M$"])fM*k;*5?qmJlXSZq#TF[+fB93[)>YMhhH>i!b;@gjoY'\2+B2'@=KSh92`RtOO1J%*%(<72#dLCAN8jp@T+2Z6I62+]T1eN=^)sZVOr^4Uf]Q3p<'Q_U85#[u(dJm7*o>7`67B512NKDmF(0rh!!@kFQAbHq`J)j9Tqa=H3%Np9UgS1Z41,J&hC[m!B[?c!`=FjH6BE\uO2gDnanJ,'7ta$+4f_*S)njul63#7Mu7EL],S3EJ7&Dg2"P,=rt2k"jN,e"^2gar0;?%$4_o*[#n8p(0>G:"83Q6[NjM35eO-?&+P-G`]^t[k*$&h^+41,!E-]dBVb1mpK.;6;gZ+=LHKGJp'1lcc27495F,o<DEsik4np2N%Yg/E+7k#BJ?'[D+)+@hZZ)V)f2G+1M,"t``*K4&p>07MmT+B%jgMCQ3!"'tiHaBZTY&bd0rLc%BTh=iYa%'GgrE[-SHO=gRf?RZp%4(E*+Q]$[Ca-D3_Y"Ph]n!j&%UmlaDH^CD>EadecR2U;<],7GS*jsr!^@A3<L<tHWZ20oUH"K<U@:!Ng.P-2CB18iI!n*RP*MEi+%H+BB3pN:-)4nj*lHMP/8OZ65skc*jgY`\\IHf@9u1*PI4N*3C"1"o4??lF>(^1qi7>Q/17EM2TZr4&H8@pc]O4s1\'.]Cl)qRZ>t%Mc'E+GFB>$a_Yl[kZVajoi:hmr&fXuBM*Ure;V*)4^e/b5[%QkbiGrr^o$Qs:#[ZY2C^%SOC&&5qJ7l=jDUl8-7g>BHM5!S-jEK.%-DH+Po".:C4uBJe_T/<nl\P(G3M_mb-Fq_&)945[B^Y&(hck:Wao]GMXPiR(l8j:%6VP\\7Z'imbqb=SnOre?IK&F0r;Zbor?)'k%fDkYK)Icqhh>[Rhf6$CDBqS#GOItIdni+FGm<TcL!RYpEPHC]e:I\A0$8O2];Ro\iX!AGkeDroY2WX#Gf4cMLUe7?,I@3_b:K]T)%ga`OWoqIWhMl'290d>eM>;gn4[gK%+EHPcZ^_XpT0%\bm<keW>1Yp#B+"h>)ntY7NQ+%>XS!$a0-&408.`a17r<s>=W8s%ZrsXTf%.:b/qj97t"8#]XkS7dehKN0@HQA+h8D#M+&A8ZGpY2(2=A^;fS89BI=1nT+AmBnl'Arc24VXB8Qf:MD]f;&O\]L5f9-LKa*,KfTd%P<rAb%G4saa\muRBaJB;jk`lkH^(\u/NbA]:D.iO[R`mLTZAB.r7Xd%>cLfR_QXZm2D"3@MI,=AL\u!FI2K?,brKoQ0kg*2V,s3d%CtNT#fLX%^f9%X5HDs7n9RjXnpJFV[FQDjq^d!`coc:@Hqfg9;LGW&;EL]%+Cib'ne+7n:2eJEM:/`]M\Uc;O7@M9@2k,i7-92.b%kZK)0e$_:r>uT(TktY:a[/^)9?hk`>r6N23'P0JN?/ck(!=N>uga03)Ki.<1>8A1E9GQosj(HBR>hE''E(T`XI5u^iCt?SS8^@:O%*m_\=f)I[0bPWB=E2t[:UK,J0e<)Ed/Lk'Jkkc+,>RkD;-RVAl6uO677X>lI3q>5,D$hg?$OGb8D9_@I?(!)@95YuUT%4nlIDbt6%h*"Ni:r`+WrWboDF'U)GnkoB'_UocYXmWsK#Ro@qrO4L3&/NR4;1ldd',u4O,Npf)'s;W$)1QH]pG9+^r]*[M3,4a[[m4G*U:q=W%m!h:Cr4ui_KsZcH=Oin46mdu$2)'BBJ3g@OJT0bqq@1&oeTI2GY/4PGR/]CU?)ddW\Rb[U7a*=G(COT#2*BBTV^E*OdW3kPZ1eMq%.'[]haP2,X_rfJ*U^i&*G(c9r+`Vuri.@2I\LFeTNR@8\MLk0(d")]Nn>b-b#JL=<pU`%m0;VGWN%f7CV:-R2S0%&J#p6%.DB7)J%`<rs*14:*:BrF>`NPiFU_Hs4bpDn<.f93N*AZA8Qh6J8:&kR(![3**9n@<o/@%l>:52BKY&nEKIXVC.=^6,W^anJXqUHNbG7X,Mj%oc9a)9R?1SqK?:W%h4l2]UaajRQstCeUHrL^LLVZkl6k,GD-n1bX'@D<tjnu&V"5uQc?;`I3eIJ8<4q5he:?)OQq)g$mc/(CDs2a%%$1$)6CB7M+g4rQZ:lC+o3GZs$BNKm(&#^47d!7<s7ffpFYp@$_)Z"[5u\V7i+_(_ijg`F9<OVnn*tkdJEns+`E%RQ*e_'Mi]_+_%;STI"E%J*.//Uh#EV+3iiGsBG@E"LtpXm4EYci>T`jU`T>;1soYXDcN0pJU6X0tk/F;cnU@Ma\bWB()8rHF2;r@a-'d_P"JU,R+*%Q)9V"5n>m`8XN^J4["*\l15+$^t[EtU!goG.4sX_JScE,X3^_S)H(o[,N%VZ35)B0p=SV8F_J-\.'CL#DtPSJYL;NSk=K<-qt^?1%hc]aaW.n8OF4bt5=Hs+l*-CE>?b=-umB?C$!BYGkf.G@8_GY)P)G?oUV^lNMUm!h;C5a;1aV+pC8=QTMPSr'd<_>8g@8j?f7VQkS%+*k58Z@'sbdQ%p?B0L9$U/pm"0!US.D'#XKE?oBn.]JV`Z8O>9UUi)$%."_Xm>nX]3Ql$N`Z1CS:Roj7jN7c/;`>DOJ,*KO:>op\%fip;44skYD?$9R:m/ON'rJl;P$a)0aS9.9:kpa77SIHV!cJ2T+S/M0[fk!Ko\3a:1[Z6op3jj4uPtOSuau5`uG;htR'[:`**JJC;%^@BVc1Q6;@U9@5#Xcfo_"mcjA9cjU_Y8B[/aGdk2L0Yj"q[;H[r<r51'72l4PpV;5ii*bDR]?eRHjZBJV!E6+]/`U4Bj'["^G4U>%1-I\KM:Y8n+'9@?)ICo)O`"/VI5MDC:>aLj4k4\?"+37tp\0C3QAuq<((%VB2s`CnnW)/LKVATqDo+"'rG.8h$@VnDHT:7&j4pY,%r;"Z([,YpTA$k#K-'#U@E)%)1WO_8)(7=7<)J`=*"f:i$jkm6.b<EOi\hdX:$S^PC5L&Gk7$F1R6Ya#[q/nd)dYM0ffa&KPNE3Uc%Yec7:/>@Z-&NMLQ-S*p=8:u!P^pLlJY47lHQDF>fK_FCGe)o'i?fZN&:%^=*s#c!XQ,A8D*eEXCTl[nR:.H9;`m,\qG<QOTn`'l1%fE+V&:B2:)48+&M<H1OD@@)H_#(Gc[#ZB4u-rrokM#G-KN?L#(#p=$M3ld19Y3EH2i&C`NQoL184tVIcE<%fp@^[,lGm^-AE/HS8%"NeT9:_uZp7!8#8#O5`L,adn=Z]<X4*Kr'IioTdkDkBp-7F5:"E*!)%N.(B\3aUF@)8d10c.\Za[;%Jn)hsI'2s`01ODe5XrcesE%iPM;u2T6rjn6Wm(#jR(_q1sK==8br4KT@aR!)#liUF63+Hl"g4P8<`?G*96r&t39,KRtj+EKmrD"K^CPd:XWG:gZ4l9>[QD&X\at%Y\%RZe2-4`,Z?`"<]qccO..J2K1-DEQqn,AAEt_>6[=2bbCs"R[\`Wld:aXICuX@=7V:E9j:OdI'E5oG,n^oDH-UfcJf859/C+Gk%diD]t>-_b?Tc7n[k$b#%@?Y+&IFFR]Hn?/d)q>fg4Dl=$9b&]qn?S0#O-$hWSfZE+\f6*,q2Ha'3IbORfDgOV9bDuF8#N99o0?3B%G5ZYn$Dm>bP(i>OK!f;D@opMqon,9W)AkW/Ak*iA(ZkidR+EOL^[CDKKFsYU'VVZ8UEh[<Ih'(t;Y8RFN9\.b@OM5X?/?B%@]O!<%WC\<QCe,m!AF!MBoBI6FGPEeLjAsppl5eJ*VA#7EJjJYdlY1`Y"iJ!,+=`oW@aj5HlQp!g`h_1qi:nQEd6!HGG7B5;klIZN!p9"k%Y_S!2WV=,P;T'53.*UY]:P)KX'U3go^)'.;]7]9fPm3@)>$>=9[DHOY9-6ek,<q5Q8^\riA]3%shlh&P9<Zo7)<gqT1#FHR@8X7&%h-ce$SU;GLGlKZt>SVpgQQ_<23S9JSo5S9\>P+k<5VK3;Wp01^)*@q@Y0)1@b3te8WD@`PNe,9d1.!g*Go^I.i3B#[I7$NGZg+tD%A1>U4!`!D`0D\gl+<8aS:R(p-*!sc'?']n3Qm)%3Y[gt>-KT,+b)X3>@gTo),(UI)JAoNga$`.ZWgb`Y]>[ASB27R5B4"0S"Qj,d%NJl3+OAJK$%L/nd%V,p!o*Rr-6lI`3"GO[]#4mWb0cE]$SQ,t;eDn:2b1_SB5\a5?KZO'a#icd9AoC652#Njl$?GMCCaCjZ^aGNG%F'q12e[&eR<^CKQXr9Ht.jbk'#jd0m&t7S@:/GDuZ(FJ0?;%^sH;>CeAKq$ZQ>mG>`nr\d=;oWgWR[EL"_pMqFb_NBpGQ#H[;<Wf%TNp#HX3^QqMSqRO[TaX_0!*bl$In>n_jTrYDlg#"q_tCS"O,pKL\P"Oi=CRG$OAg#hS=72K4V;1#pD4g3N<b1E.KbJ(9%b6HP1;K%UMGjJ-$3V>A"R^tQls?3:LaTgoYU7@bLnJ+R:JKR^BtW%6d*+8@oORAB^Q4fPiPMJB,0:=eBLJsaoN]RSiXfS9W&g(CgXcKZ`&L@%PG[4l#t.3-7]?\$!It*tY:.[G]bn11lY;W^,:Vu"TpH&U+g&;4A>hkM'E9X-d\[J_5e7p]!%(,tV1bD]&]/7LDM3h''j]El<5E*J%0=tn+a^-85&g;O#`8Cmb\i+sA>GMYahkO=?6oj%A.1;$<IR:DgP/F[U*Uq.o>aJu'==l$X=<[IFrpM@%0WHM;_Js0=L*m]j"%Q9.%T2@n^it^q(1<n'^Bb;(4;u]3eKYP3TZ<I/GBWaaq9oI0*CHtK%KnZGLgeoMl\ng/)$\OY%[=#I#Gi`6nQG4qlpJ0!+.ZDB61%._n%']&cCiUSr/ULo(gg</i@$\K4l,:=H20^!)sD7)Mg`&Z[u<@:SckP"L+9>X^H9ea8!a?EuE:=XQ8U'@cV6us5R;8[\-`>4bk]<Idf%.]1.8\5b9jn1c2IR8gC]=(-KZ3(.nc;%T`Mb&3E`K,rcNE,+^UTE?<#As/&"1=AHH8DD"=GRhnj7o!g3H6=*aljPqVH:AXP#]Z&&%;$mmnCGGOf_F07J25"=c;Dac+>P7Tu<.IcjA_jQ=5J=dIqDe=Sk]c90@p^G(LYn!*OKkn7@uCu&*>9Ei]*c/uEcDNLjgs\5H>Jr@%gSNLnPb=#Zr!?fq"'CsAYP-Up9f82VNr?3prf1j$;o^A)pgdp78tTen=I1L<aI[3[c0mkKHD"CJ2A]*CH(Y./-%:%179kO3HAS+C%l1JWD]+KgpcKLH'.<'7G89itL(NG(r=q[@:8#-hPo/MD_G*[(fj!AV*DI5,n&6>+hC(3D\_+PkHr%#M5q;3(%h`DA1fVb,9P,so=%Q#"7>dHk'Mq7S9h\aH=hG/3a_q[Pi;ENn*XWk)/"Wk,%fjDcWN:U3<8m9Vi*_^/10-eBmu`IpmRG,9?%]S[oLG%XYnaXhC`NS^=s%UtT(@26tf&b4(Y]Lq+]Xp\:`<%8)IFB*dHU.m)I)1QhapECO6s3n[g*D?Y2I'(rq2i3-:?(X/>.)?A7G!cg'?F5_pkErlngo-]"#%S?UIH>22c$*8k,j\G_>gQkKdp;#YR*+!q?3)V2NO@Y).:T1cpmX*+5$7\*:8c`[ZYkO`6JbB]TFG4#8l3mOhaH'F8VGF\IC9-$\l%*7CBqn7YhN9gT<9[;@UG9eEA%FG2RWc)W0uIm3G<A"T\fB#fq<clWX@3dA:1cAnVso<B=$6:IJL\E>c[77Ha6cFSa%TtTf*fL"oO%I9]raX6ic!N6A_o]t,ktdUY4Uh*V/UTi>.YW3+-]$d/Z+Ki<hW.'_#bSDrmo.U>J\jg0d'WJ(-?jLnXNl!un$8A+EIS9Wq$4gh\:%.\L>4X_L:p:fmc]Y2^eB2s18X8kj6rU2p&Nn8.D5%A=k;1`Bf':9>rEJ^p`B=@&j[69XWq[QZ^#enNW=BC$I@*H_Y9<pLTeO.;J7%XV?FF>L.IL^XSZ6\sj2GTI_daostXDT]7?`.s@S`7+U4K+.ie<>"*+^)o]=r]Ku,-F@.3)^0`fSg8grO!YRC\.V$Zngtn=?;`Qa3%"UkIad>JOYNWtp<%HD9Mf*E1KZWZT[orX24l!.H)k2kf4(t7T`ibnh:U;,=:>dQq?R]88cArE0sDD4083'\%;lEsjDCq*g/GPu4?%k=R/!?X!b+3soI/e9@)QLu3MWDBCUPkVX!MP0[DQoB@T`SuR3+D[Xc>^iDS5O:1C;p3m,XD+"p+j//Ds+8U_."E.CG)P^hO0=]=2%b\Nh:5*o"\+nL>c6)W71;6%Jea+8G7)7G&J=D9*`O\YMVEQ\*^&,qU*h%=p2Q8))4GP]kaK:h%4)MaVkW6AU=qU\N@7ht]/CJ3s'%TPek:h661"Ng4oeWmb&]M=p:8bJ-W,O=l6Y3;TS^YEG-qoTb6:2o8@?f@p7=9Q<hg?M>sW66hFb&-o7>,A*l)=QC6=K7!T<>+h&u%S@tT97%4k:ULlP9U"8F>Q;XV7;K"G593ei%C111XU`q$Wg3IT[bg[_H9a(6ADFmWrV[e+N%NO2ZJjd4q\jI!aHH*JLUm*T=&uN@O%6^GAWK[^`;mC_&YT3Z#MjAU+a]<4i4"Rh56R$H(aNFA;2W^3E@"aH[hMN3,A6bU#.0UsHNI3nYd3RpHNr1pK=4s!*GL/B$gDpCqW%CHagQMAF*hgJ<93"OtsYSjbq*+W5pjVd"VH;k--i>(/-:.b'BTA(u6[,bqV3[S$;H+:k*-B22$,b;JfHA-F-4TVnjm,L$.#m`ja!%n9`Ug^\^3N7jc4mF'd7kSZdZ*UX(F$^_"rOg;q>)R!7YLa`2]3`f@[&*[Wh\?+.s!il02*.u2.O'Qq?#8/PX#NbQj=Qm:%gl^@td%oG7&l<hZL5C;RQOZOi,nE\gFJmk*B'\kB".C\,WHFSh`8P8:3TIEW3WR+bhRVGXf81^8">hf,&]0B1gl%se%Xrl]09'gDh0,IX,g%b-%]/S79Yec<CWVSbB)]Z-3-,IG,64Ob7s\#9$<Wn7$fBKIN\U3_H"&q*2V:AnrqG;^_6Ha?=6@RH;Zue7SrkiRS[=<F9@)#^p'c%/`+Ylh"h06n=@/6_^n8n?ru4Yb0qT:mUulDI(U^:/J_;B\.^6tCbNZjJT&HT='TAY+KZE\5'Xd4W+Eu=*ghFs0U2hn*T5sWj[SrI%4ep>0a?#Cg6i7GbCZd$[DBeb(*]BQC$XjC:m)Wbi.q9dke/QmnoiTs7cdYnHerq;_r\b;S;r=Wo=25E14(0I5CO:7l.kUCH.i<Pm%nNGB[F7V>lk6XRhgEd*G36g6/2^r\6WD>O#>Obo\s.`_pg6h'XACa`nf]bCNY!+%WSd\a:`n:1PJ4K=));1NDWj!"gmdD&",7m*W%k.&SGXM^cKAer>\W\\B0[Qti3_Jlmab=U?Dd&[gc(S%nU/:=MXG#ZdFOpfT<Q"NmV210%)_X:JSgV%$"2"qrTWA@rs8AX(&Qc"%p%;kI5E_G"KN&D*er:U/a.'^a!47)TunCKZBu-0cfr-+hc<L"SV5SWqlpIk18s`@`hY?:ODLDb%=M_W'E5geef.pn@PhFo;Yqie)%o%J[FLF;uV(<+:F*d9Og=5j3E]C&*6S/D6:)!$oOEX#pt+Cj__b+0=\p6Ce->=cF$igba&'0(h$GUZ;IH1P!(jos2OJU7!uh7f<%#'%_WiCD/2JB3DGon@AI>7#4(\=KCf]`fm;LV"]=Qui'trWpN%6g<^&D%R@s%NQMu_]2iN2jV\:J"WeYi>lgUCd+d#up'3;::?)t5cC%/rZ5$Qj&%E)96F\AY'3e>H3J"6k'!.B:pV&F<.99g8ED?YSuOs]:,#?c5t2!NA@T`!;jQioZG;=M2IV8b[@C,W<;6S[nk(WEKorr%FS&_t9'Ub7lrt=3QT^>"GiXbU4QCIbO"rNXbNY/T7!Q(.d&L#('5^6B4f\U8-D%/f(0PSF)UKXSgakAG.Fk?'kAd^pT,0&=T$bRP%>]!_tQ\e,MZ2dqt;1uJjbV+ldUGT:QG/!U#8*\6@mn0Vg/0<!Wm2o\9f'fV;4W\l#lcrC1PW"MBG@<<FbknhsW>GXf@SL96l.%=a%3k&CjSdJ,0]_&P"RNg@#6)^A$H\T/j5o[!K@95G@;0i;ME)_2O%'c>^7X=W(R)NH4;XmVaVtRD)h.?8L4NSJoG1$_<L,7^LA1?P;%>2O(o-c?4!kZ+a@R*b0)gIdlRZkS7#*J<mJX9;Hk2i8"\%%2MJkg.sp6N'-k<_sWGgRtC*D,<*:OgZMYk6=46rR4AV3uc>.Q0?un%P>)d/OhS5B^eSYK`+3'X]XY\5>eocf>*jQ>=iEU#Mr1d8Z:lGO"C4Ibs$L9#ehQ7VQHK&<D$[X"XuMCUkt.kdgp;$>psblrg,:+G%5<d9Y?%L,%+MWr6?GVM3_80BgQY#eMrO:<JBsH`Q^7P%K[TCIK-*NeaYLp:`O_G#LQAK\DW_a3_.p!SX$QNVG^IP@P/Onsdl]K+"%7GCq%572>=mOhgJPKgRo'+A.lYeNgZD:K&5_[^hbd0oKa@F!uN\uW8%dES)!gFAb%0F6i=<FIR,)5IN,g1d25IEt$M:W_"D\$W8(%XqKmp$d/h*[h(1gfa@CGhGiMuHKi<!/qfY,Y$VISR[`h[Kp,`o.O)0+e<u$8*M.T479H#1/\@Qu(=ab\TnSV`<,?ECWY>Wu6t9<[%jOf1]D]RQs+@A9X8FtK-\**FFD'b*UbE_DMSQq7$;V^n\bbK=gISq^4Yo\=8Pc)gL1uukS#sBRn25fT(.A:*Kc[ZZ-%86<U09"c@%s2JYNC4)uGIIle\7(Oqi[9h4DZ?fO_I7\6<KVe,sgiZGX\.0;g`>1G7J5iTNoVSAu2FC02kRU%(QQ,/<4F)^^5fqTqlfZnX>%%[_%8Fe<#4U%AZC[G[uUiNl#C8eoo%6ErOOI[9#V%I21o<gLY@8:^C3_(U=EQSZIA)Gt0VB[4M>HAkVPGl@$l7#s$=k0*D/K*1@,%3p2%!K;.F@TNEJ`3rV#gn_*[DR+QQ*4b(0I\n)A9#NX^ZVJ7+eWR14@k2gqb)oL!oLee)Q&P!!K'c!Hf5to=$]Yh-'k)=QiSLg(TYI^6%_`2Se._u<tm`A:;9EFb1&E.CumH=$448)6Ub'Yo`X:?f7cK%1+>cg+E<(*!fXWhDF]m"BU.@?S!_Q'*/?Ka18C+FKc5\H^'&uGqS%`gGVOM5,No;Zf<<s7KRdcm"-C[]Nq(*->Vo1=H'2i_kq/_.]bSEu58h\OW#=&bmo\-L:*e6G6<[\]Xg1GL-!fmJD$+9KD,>9V:M%%k)1kN^iHu$3ObL0CR(dFSQ*JPe)Zo%qY79<<f%juN?I74%L2Je?l$Zl6\N@a(FR`M6;1d$Vh.50\R%aTh,>kdG0fMf/L7IKp.A8a%7m/-H<q7;57VhuI$gDV]bZ$]c.qSSm;Ra+N(,kMLM_9/U5kA-ub-/'JHW<b+`g5bs+YFGkKc61))u_`As6HWGg"-nn>jJr#4/q=V%_[Bmj.BfX[VUZ:JIF_nkc/hP;6&-\?p^:='Y^a\;3$sTH5d8G*Tb=4-!qp2**Fg.*_d_C?pm$Qc)8XOD>c&&?1/6R9Sbos3/[FT7%fR-+U;:t@=7h_R[o&(MS=EF@b(<!+\rZV#h#M'Vs#74K+#,'-.4q8Vu,ZJt$)@LUn6!-&2-e*ioD#)l_L5"@]2o^;iT?]h'rFOm`%*OF4l?(,]UM.)%4_E9[V10SMu[["TtWC,-#PC^(f!"uZ<2iA@?SUB_[TC;8"o]_Q1#M!9'`jUo*A]hbsMV"$#]&h?sbcrUFBFW&b%0?VUe2=543iX,/H%=Z>]s5P57in=]5oFGbF6BQDeO_797ZXL0,bT9:HU(Bjt#17n4goo)&WMiE;(6<TbGi.pan3T^)E+ddkf(ELP%1\eBQGfBC,FP,NWXZaRl]Qhoof?lU-GR&T^_9^YU>\`DJ/#6SFnBj!O>/5+404^I+\o^L(cX,LCeg'n[HiB&iNa,m[l\l8![l\V0%rITos!euELqGkI?jLCQ)8FKCk2O0Du-mfgr<I4H0:"k(Q1@X=@J&a`uA#c4qX?L1VLc;_3/JOMq'j!5jD-VQq^LH#BAZFc?@Qg<S%CC`K6,43jgNC=I,&j-qFo.O&^TY%$26B<noBslh6oB[>>=<=VNRZJ?i0giCFIpgi_<WK&f6E=Vl-Jp/?06@Z?W8:mieQDW_H(ooA%"+@dU^Hrj<^0O@_-YA//\t<`^W`cfCGbp:P)3.q*2#!?@SaRuuG02^@`R/6Sjt]hL>o8NF3^Vpuc(-Ho?%/;7Zd-[:2$Xck&Y+a1%;5FGl6I\6Hh2Eg1'dV=*(,`SFN6&SGE(=qRrqre2@p_/`@l:t$LP8R>DT_=;NdLeD\?3hS=>a,$Nmo;Xka%3sZY8FqYalL>e'-(/%n*rL5aY/\9E_jsP%iYsfILD=D8#8%mXDZR_B]WA0Q)7RC>3Z;pl/Kb,r<dtD%aS]0M?QZDPi+/3okJq9Mmj&!0=IrA>]laX^dG;#%Rp-NL5%;P_5EB>P5MkCDm#s#7SpWPZnGQea)^9@E,'>p:jGW6CcrHZtBVAt=^=`cV?L1bWe+&-\gJaXNmJ;<+K\*1[T7,l;?X^sR%lb(2ZKUTW*bM3G[1jj.KOmi/B#/=Z?Nj$q8T.9kVGiTCo)G,XeU5Oh$\bL-_ot']Jlh+_Zo(1C\a7R*,Psct<[0P_tWB05L'ilKO%Ah6A`R*s;FSQoJU^fjY0:5ehdlhuilnqsk[5+7m7Ii(:W]@8>T+n[KU%HIYL==U$Zo0iJ+6C)ARP8Q829.T8i>PsM0o&J-O>:Oiq%7cos9X6+1XI%:p4jJ@=$lXHXOkZ\8Dig"fLd-D90/hQ(%k[e,%K64N08O>YupNOghKIChgD$.He85*9SW\5e>?=@.l24e#Y0tdF\%hJI9T@4FM+onlfKj#qk35.NWGe0a-DH&Km3dIk@VYnEF&$)!=4d$Cj`?jR1PL&?LUUsussPLD>]$d,fV*^ANSGO1NE)5$)T`)V8i%`<AJ%@9V(`C(p?`7=4mnEfi])Au2'`>I!Lui*GN!LN>I(c'A^'"t+M,*QN7#`s;D\gQNt_E`,cGA+BE''<3a:'U5o"b\@IuO&/s&%c6Qpel3*E(7S(GQL8$QfWV)3!nl+7c_X(:oZ7I$7S>o/E^es:qHOS0;5A*#4R%i<&75%095f9n(]V=^=6GR65Y^p's0<]e_TCJc\%lhP-%(Ei_/$^gt,X&j<0=^(PfKiofjD$t.#CY$I@:G=&>f,cITL/s&5$MVop\u_rrr>,31CeU6en,sai$H#Stj2cRH5NIjK'0<KN%dS`jT>-LddXd.M?Q:%FdNdO>o@"lE<U&TE+:Mas]Gneq)2kH32J:ZD=a+2-[R7u@":cZS_5<[KZ;6qoSr#09j"0e,c_^NOlTO**a%`i]E0hf_H0Se9e)]fVsoRR,)7b?DG]IZ<(mf3+75hIDE]J5ci,^sr!kI6O!sq^*/>h4W55B&>hAm:7L*mO95)RkHkSUe:j/D,EF^%MQs"0Dc_lRNA%%#K/;<C?g:uDM9J=b;ocq_0K7042mNdamErt?)A4C.-("jXh(@'LPnHg2n^Y7=d0=S\$jbR=nn+4MBh2ZHWGF.:%8uBK!P.4/q;89'SLET&3q!K3]VZUG;[(^$/IH%R35-rashGOk?bKbUETR+j$@EBj&Lp:*X[^Ju]=Du3[0q_eFa@O9EM%MtCaBpe=%022DFkVM!N0QjLR8=r$Om#e8[=k#VPK-Keh`ZG$-,6_,!o#NfZ=+F:s*:4#cr7UMUaKr8<q1<Jg!Nn*%A_(`mElc(0@C,55f6BE5%O:D\"-Ea,?'Y=rSK>uUu"h4:[@6PT^cgp_qm9#gbVOWh.SP8YKi=ZKbbKaKLhC0,q2<iEB&_?\0HVnm&28c0OfeX*#XL9b-4bLr@%[Z$k,K$ht]OpSi'L.M)\3*VnA>$W@o/N@^'[JrR$0mnaMrmWis4&Q`=9STB'U.Vc#4YX@q/1/OcfC%YIJ*2U,\MS[,Bh;-U,s5DH%8jJ5aQ`DeN\BXi`-W3@!qGt]BS2ImUn*E,VL0;e!5b9[[>infjkKgmt`(d%ek&CqrMQaY,@>DU6g`=Cl_AGWID'+\P8e=p_-bGa]%b^"4j]/Oo`(Lm`1\V61@iA-OIT`R<lN\_YYea7/(&]V`&[^6#OMJ;?I=SN_gA#*b_Qhh9TB\(uf%QkTgTYa<J,f(psEtF$do1\2@%Sg\"g1q9QQF$1jQ."JM)G)%6?0Y/M3I`7$VIkZSJ>=!t:f)*S]-3>Ym(reBqEZ&A;P.<$DR%A:em7pN'lW+Z&b&\rsnl=l*JoRS+%b.caY=tD5.Uu*C_qnqB71a5fH@Ul<.5];@eNBUff#r:rXS^fZT*RLa^[oIEmX]]7kaPGLJk1[YBpiu21k#LQoKV;U"XR=/N'W:GJ%@4Ua]3nP'kM*$_k0f7/P$0I=NbhTg0l0MOK"f7LkBE*-"4?YF@C7u[C(H/]2dgICkGo-8((PhFSDrI*mM159Q<E$Vs?<CI'[f42r%_,qP8/LkdRl&)T(.+'=+/%.Pj$?$8p+p_u;6g:7H\6ls*dD?P$AO$L.,m8mH4Ac9%F-\*@7dlTdNOA!s"IJ_/Ps#W:E!'<0^VBd?%Z8r<teStiB//QC8l7*%1-!4S,m)Hqq?GQmqZ!E@Sh3C6&N3`<Z:Kafu9QY-1bWrR(+5"H3?3qCt]95BY&F=/`KWI)l"78XApQ^W-%iqlD0cX*Jq(i<HW&GZgcBh+_F_X(Yg7l8+2hSGS*HlZ)0PU1$WQfb]8&E`M-$fk!>Lu'l10ica]8IlY(TJ.1T-Q[$@o(U]t;KtX%%2E&f_(l^tkGcae(*ZN[N=]u:RgVE\QU&a>O8gDc(-Gn,i;2"UT]aI18,AoCT_5uChJF<>FQZ$suYmZ#_K#*D*o]u?Per/V8kOH2H%<=]5[%tD!bKJ):>$>)UP(c$JKAl)(G,F449TG"(6L@d5EI,!7U6@8#]=IO=,(Q'6,Y1niCq/m8_D)'s;SD4t@[q(Qo[=tu(:NBGQ%<"S>@ZKb)@j@[&>iC)FU)0b#/>7U%(8[akNHd)r)6-i[@o7g"I<dIfH(9ll'^:!6*)R+5&[<7BQfZtUgX`n&'o2$]"Ce?>t"qoPU%`f>)2\^"*N(W;=;k%sH+)UW,C@8EG\mnb$b@]CoN&p>QnY@76H^Z+)lV4$3q4-S=U<JS/q-CB[!YsY^#*BCJ"_&-@0L#ba4B&=A)%!Of+T9I=`m?';[o>\K#P)Z=%L6s\Oo=BHpD[9f&Q`a'.$\g5Dmc(C<'CE@93H\AZAX1`6[c!;07(:#rUPGU?r"(C1%.V<l="mWE*%cM=J.FXn=NoWjfSYJ1rW49$*$gD@8jm2RW*2RY)k%qaW)oC1hOq=A!U3o7,QT9I$o]6G#C.-]5mG9R:(XCb!-AglViF[]KB[MrM-%6DHM[&WD=f2B;)'Ldmc"9P`CH>:OMnQD:g[e?HmA;\cs$SOr]hkWR:ALnl":#a"o+@5gS)2=-qN`?s$HZYcNu`gOZU\S=$nq*C,E%N`8*+D1(:URS%<ER`3r0/c,@Tp_Cr1q#BOWk5St1n!":;&=tU@dnMs+IA)__N(u$hL:&`.RZ+dfTX8Am@42.Dc1b`EH]I)-JXmZ)%c@"6IQlZGk7*:$RMWFameG?%JVeVUY%MIYVX30N2`4<RbKf,e(LGKNP'MH6qL7Vf\d7CH>T)]dg?6debRDKA*0O'D32sZLlr%3K=%2seU^OLD3s@S]&i!;36^_?c\&"*k#he/-h\.V%&)_;&Me<"]t37N%pq$.aSkA>*pNQR-_XQ;iG=p@dBU6ko"Ma1XV,i8"_N3UK2-%?BY8Jll-[h8.;001ZR`8j)F2IAe<7R1Ob7DDf%LUq+jX0;LogN>riHY@ZEqer44DXN;*1=$!2817QDR[;6I9i08C3gPiO@c3&_Z?%XC0aMcfQ<3S?\]IeaM..9Jde[ST<p#N7;)3OOIY&o.I"ka(S5j3h_;SW0SQ)@#BN@(\U9(>UB;IfXo^U^-o/hJ6;2bCc*EUg;FaV%Xt348:':qWA'f=N>nIj?>L.<S5EYB$UNgQQhX;j`[6t@C7:-cS0LsZ8)MWspniKXps3TJ]ifE7kFe-sjLhlVC4oX!,@l!0'Go%jY%>1i3?GI0nGo:(u&6A:CKgH8t-aG@.ToX`?@,)Hbu$7kJ=QD]2=3G6(o!K*YhUi(3Aj4FOA$2aA%+AM,5_VD($E@gR)GW\Y?=!n!Z%)js]RMFjT_M2(<MPc_0'>&UG@>\?c\hIWoK;=Gs^mO#m;kBgIuT]!uL5>c6fp:n;rZkm>_p/*<N'9@[AWmil>-C(prGGo%t7Li]@%V.jAI3Nl2lIIE9JVh/m><X"6<M6JKP:KB+(Y-.:td:,7c8E+5S.&Y!`oW<s:[d8aj@nCtoha@"+.bA88=N^!KC#VB8>D#TrXYERf%HasK)A*%[l(KL4oZ&fT^+7\9bllW3JA\T([[T2p\qC$%\e:$WVCFCI7^/PJ0L.joWR5KSt$:;n];JX<8;tB>-<CMf,Z0g_h/+;0X%<q,C,\3sc)o#+/,gPHdao02KSS`qT1fB9W7M(ilE_X]DJhBfWI!WV?;4ef'4_R98Aqt:BWKoK6Hi_eC7D%,56#r/q_0?g9_B=l)V%qC7Hfhj,+?OT#o)J5gU+OQa5F4e729K`U2n6=C/U<&LeaL0rT5OY7F>&Uh/Y6lH1;#(HeVD53A,p8BZ8]=/0-CAa)m[AQP+4XFY>%`m11`f]AD/>gt"l%9EnsOodeUB`ae]0\7[P4_"g)U49q$S`I@%Z_dj6f#C=X(0UY)C+u#b<`r!rZ[jI/NspjQTF)tHhXFU3#_D[r%B^WPdZXPi:pQSE*=&J=!i<\diO[fRsqbjs#0s,-@4Z!X\D:o^PrH!GOG:`D,A.iO4]5dd=L*fVp*Qj[9g_8-NL62n:IA[r?Z[pb@%XAnULZ6rQ?.099k&**earHd0u:tn+lIe%^0n2odF=l(+(=j)rJiK*<"c@lb+/?,%,F#:d:',U5W(_')IS9/.OrcFQq%!M)Kk[i/8%/I4PjO6&[F0IRIhn3JVBFZFQBPD7RO)HV:_6%BYdniYj?>ps01Bpe2ehn$T@3mjOKG0<.2=6UCd+.>`'Cd"kH.,sZ%;Dr+RY"cq.%&TS)fg\JT<[Ip-PLe0&p_K)_7qoaN/;e%YF@D5H"#kK_AP`[mN@cb[?,WsgFU``-ZI5DRVl/#^`!L&7KF5,$/rV&-;*+e1d-ol'H%j`D<o(hj:@`Q4YK)n%kX8;AoaO"e&I7eM5GNaX*TE!_3.-+ZRR\d1fu/%.Ah>YWa,n&$)4mH5*TD<\W+pU-!?nMbWhMqM$7=24Nf%%&W\[\;F1>GUJ>PV:tbs94Mj$QHn'aJ@?#qh]ZdT8mpLF*l8bO!#tg&I]P6\8pb#&$@:k-Y3a[rT/Eg8qrNB!EsEL:7n7Fk0LEn,%C+-s#A#0m[lL[;!MdN/Z0nDjp>]*Iq@JRtC5BN4a\t5>Q4&WZ,@&`67]&`DPaYMGe:[IQ9H=c6P,T-odY%84D<6'[B$B3Dp<Y6&\%%=R)[SW[p=S*mImE`dIM3aAD^/,Mk:B=6R6>%(GI.4j$WUI6?(\F1ZZe/9:Wp>u*+O`!X_\/t;uC4aM&G44!/CU$()MVDt>p[9cM%`UDIBIg.N!?_O4:r#&Y!IhRIDGO!i\5]nki:"Q@,o+*\je3EBbTDSfQ$Dl%_0hgloWhEGaNsT%sN/75%4Xq<"Y*bI7Di52#*&_O,%a8@51H(SfRdQc5Ggo"$CV3]Ln</%!gW6NCOKe]&iikTW+mhcKQ<JC@b6U.skCK=[o]sP"`e^kWf#*OI#rYDDi7oR)n`I\'%C5*(P%30B0a+;2UFONUUc&2qi3l/aorV=X<&)lP<km1-#/5;'//Sf4]&rc,<TF<F=ih3r$V-Npl]]/c!U4D-@t0u7bb9b*u&7h8;b2uhNa%6T^,Y+t##NapE,la#+E%BOZQjCPTiRWbunI[E^%D'-ZCB(d$t5?AL<k).AbBK7,nj5^IhWTs__#Ua2IHn/kaB<(p79:fkmQR5&7T%&MDopc0^@\;'/ot$X]D&m<]uq3;0hrHkknXmuk9\Z\3N"PYbSVP*/b\+&&M2@8s"R8K;LiUR&N[!U6fJcQb>S&Vsq2)@_PFX;mK+%oY-]Sr8WC/Nm]?a@Qdfmr5X8:qQ?anD#_/\rSIQRj/^=]-6@:'Q#DS0P=El#0`OrLL$mdVNqN,1Q5hfI;u]4WK=`]D+nU7h2Ubi3%/Q0dlR&gP7=d!%4i*N%#Z"a'38>fbE$g[h0mHdk!3NaM&"T8gYZ`jM?PZ@N\Bj\!H%"\O"bJq70_eQhjm%"``Q&XYW'jmK4)/8W3%/d*B,\u3+hInn"?'1_Vm`G:6>5gi)"+L1]-.<8IK:K<!FkPQ?W'NL2o!L.'l*>'@@;;E92LRhlo/"^BWeN><\eLoN?V&dRa"\-X8%.WP%3]2`,t1[2.U7-t[:A[rXM3KAQ#VojmZLM"6qGKfIoFWRj^M`[J,Wt@M>G07En2s^@>bV4dX%Jk>jPkW@H*(OXK(b@0j2<k_2%oQK<L+o76.bDnEKrp^`D0V0$MC9_kLSl]*rG%BFmOc*J.nh:hb:<JB/mt#Um@^I>=25Up49ucR&h;N3p.AXCg'kNQL2F]B$P\a=e%>?LWS<@!7de_'B-iRg:5X89/e'thKCZH(,CTE]@Z0t(VdqAUiU!ol<[K//nKnO;B$*aQ=9U#$@cD.&<k/7I(uK-CC[c?1cG"SXV&%f;c%>`QlgqX<k89ChJTOkt^CLis656cXjD[44U>j/em,l``HR$&0ZQIS=RJaYj](<YfVg.-%BM8Y$Ht[q5D0dZ';f+\uP^2PY0Hr%a+G#R<7'ZB!I5&Q7jDs.S8*.N+tcr?`YdZrij%q=i>:.T`:'U'<:h4O7m%IA=geOfOI'?@@^c4S4FG^gk'3e)*qG;SU\?`l):@&M%"^:MSM3KT-=PCgi8]g"IMB92`'#mrbbr7pX<`#5\V7D'`,,CZo(jRUI46"$$*KiD1FHcha(6Di9!\$WD@+n#FUJc%qJ,U%09r$1n%/g$f/1NROTJQ_+h<l_Cp@5"B*lqRQOCoL02].kHKeO?1UH+2KHOcFs-T(A!$9YlDC_o@cU93f9;4tn97d3-XfZ%\V*XJ4A',XR5b%RQ?JuStY7N'pLq\fC<JQWd#fAZHP3k^<AJg2,$-le_k(1]<lWVYk+$V$Y;S_D.cN&Xi68J&D#G1N0ot[*fOO6pe5I^B<J"5MiXl/%g63(cQYj'f3EKpmY01mTQs1-f"IRg4gL-?/Ag2#MT4--Ng=,@EQ,C>R=I8auR-'ekbP:[J:;ojW!YpAo_n3cZS"Wf!hMk(0p#XlS%,r"*nB-fom(-AZV4@(@']"#SG,oJY3[tLSWc2jEOX!Y57&u"nP?EekpM?"BM8W:\ehRa"MJJl5^d/nqp_3Ap1LaB@FPq^_)4#Rjt%lVo.l!Sb'IHPkFTA&PlbdZ+%d%@\=a+!$<F_GUFfat,6jH;om]dQ0*AjfD4Dbft0N2Q=_;a*8/<^,c=:5*[*go`Xn#j]3XF*=i"o%>bHB\aQDO95uJ#W=-`"7.kHDmSj(s>1XAK:\sZtgdGo@fVX.Vu<-!.hLT8lARfV1$<MiQgak$B3G1Vel2_%/>IKCudZh\RZlI6Be%@pCaof*+a67h+nq:T>K(&$Go4H"(6u^dQ9^6c;>,So/8?ps*0Ye42[Q0t$1X3V)3&M?aoBCA+e:=]Z=#6[S?f*n$Fa#%gbNC7"iq%@R;$m3*PTip6L[2K0R7SB0qRMk[^p:mjdiS>+.r8YSstBq7M[6NkLGTH:<3,Ib_SLRhLZo04Ltek1<b29ngF+,M>h_9fdcW<6?Mu%jG<^>BEV`L.;<UfKHZb%@3\<"=s&!`N"hht=PW3u(*k9GU9VZ?ELR1r3g"O]kYhn&#dFs#P%SHO9g_VdT1mXG&W1M)P8^#S\39ZK%06c#Ecke'jNJ1u=SBJrd+Z0np&0KrAN0H`6dgQ^hA+W*Wc(&u-@@W>(gKRC7Uei$$OqZU)$S;/&(dlup+AX=K<+WuRm8:W:b[Y5X%c8Og$!n]R&&+0LCS`8[p<l?lDHP%26e'&Bc)=Q^BXs2"p(e@$CA5Fi)k#7JJOfdI^@fuoJ_CE&,054ReA:^o<gZIha9U:8h%XO5;%ac!N5,a*"Aq6Z8%9J\;B0:;%?a^7QuA@5;'VO+4^c7\!h_&^V2c!@SUB<lru`5/'lWc9(gXh9lGHM9'sU[>Op*jgi7?!IC";tl,.%gGJL=1)+3d<4O<?Uq1'DrrNGgCnWm)Fb-74`$FlccF0^p*6tm>%^Y&l2tpJ4:;k;^e9+*faXY\ISn&TJTegj7J@\Wm"9"Smk0XI^%`-e\.SY[l76\^nh/Z?SL`2Oe%<W@X7,@I:=f8X=""/T^%1h/om5$l.Pl*_;=bU9%r8XF`UkBdn=W*MMU7OFdN>.p5=15sFD._2@:%%?)o-3Eg5%Ai]U:D/$;Mm4;!AiXNTUlGD-3kS7E#[U&ZCQt*,CGmgRsX707'1h%G_?`.VK8o0t75[i/pU6j+<dX!JN[W.'([W<uQ%cZC7a8;03!qZbeR_kTKs;u0MsUTU2<9L33Di(m.C#?=HI.EQ('[%fQ\&78MN#Pa]XlQC1e/<%5DlD02@*9&I5B#Q/H_]3%'FV8*f%k9A"qk6Pe*CQNNO6j!nEfkNAJ8!b3cm0kNl<_r#fl%C9^ir"6@79&lh:3I9Lb6:=GdZ`$9@/6Vb;\,;haceY*lrD)ZjDD@1*3[:4%HL^DU0.Xm+#9WS0VI71:j7;Ki0A\g>r;HN%+5]:HgcbUXrTsW^lPEnmI([1BoC\9LD]_2ks7kWlGLmr9H2%:9ou#g6pRb`@F'SCM%j1e5cGf+:9-JN)Fdb8g89%hq0rP6"r)HC<5lO(g9"=VGmbCh:[.@>ao3OBR*`d)6"NCKqW2AcIb.ZC(P&eU8>@l0a?+`qi.1>CY6%e(=?9K@mh='4E)f9'j(FAh,d<[mZ-;WJLm\lqq`@B+o"%M/.@2P&'CoqDJCkI5]q[P:TH:0Y0+pNt!\9W$;deri=_e7k2#8*Wuad%7U8/=gKC;r+lmmW;oF59]*W-EF,X,!i"X"8DV<^Kd\8,B!NF:)R7!"Pfs/`qh20/3cmNXN&kpqi<jf3L(7UqXUt/mTCc!XmQEBu-%WaVdgS>o2i_2LMFmKJ6sUeasdM&93dAR0LR@S'Y_@mcNHYjMp\Ck[I&d4Z`V<hYlss,GR6@Ei:[9Z"k#EaAD9=bj+loR5O-TcOU7%%:ZO$&0oEU+SZ*P%Q0(_[*=4<AmeOKJd7W+lWN)1j@jf(o:4p%OuW8"M-Q+hXcbZ'Mi)h4<MQDY.N^D+Oo)*`ZPKn0#Z$+r'-_RY%`-,O_aM9oUKpbA1g65gKMZ7O%X;!ct<CE^Y7m6]#E<HimJhJYbZGK-<Jb]mW*V8pHlP)\mX5SN8oU450_s'f[g9OB\[D/qT<jch]%%91X?g"=GVXjIa^E8<Q:K+]3@2=o"K]W,N&kED&_gdAn-_3?W'FbL!C>t:hsjBWHf84C"`*0si[4OAcSThM(4D\Bpo+mYoE[IbN(%K2*tS*'/\2@;+aj.EG(Tfd]#4eP[6.LoBdf*$(6i0)]?#c<>IkcpY*s0KtKbP?(N/1cDp7f9#\]O3f.*o`KH1V>=i((6qD*s4\A8%?9a_W@#`mZ($%#\4[)lg=H6k-db&<TW5u%HX7N<dH!#CllncbelQEj)!K3.bKA!51d#r+8VR2DK:Bd3BX0()d3Qo"YULmFS8@+sc%T]+Eo6<#Q7OuKbtj"cWE9$h#`W39DV7A^3nk8"nSNE)Nunl.fq*GW`q5/C^U%)PZCXC)8sh-GMi4aU%RXuJ^o1%+`WN%&BI`XN5p%Q9^N:rZYu@DqT82B8^@W=m74;?Nh]m$E18W#s4m-`Rt*%EWNe$F*24+N);2B>@@di3hY`9+H9mLUgPXUeRpC@<1\\%b#jf@mFhW(%n8L#1nPS&.C^3,p7uh-O,&:<Sh%@%$\mGfm%.W78](L=`fe,R&agF*i`6r_Mo.'CpdSE?D:[>4H-BO;Bd^q7he9'1fk\',7*QI@O%?=aBXPH\Q9paht-.B-jSWFgdMhgLA2iaj<<<%P!i5_Ji02GfXDN\jg\5rDm26)D.9g(\5+Eq7'&M3PmN\VIlB>TKc/a^>AeFXk>?%66Z!&g;5H$J>0FOG"t^peYQ12]gX#N+;;8:TUYdo]J4c1(rBg^7lt@53Q9-;*qSj2h+J7p_j=3n.Xs_2.)>MFbi(-E>b<@q;?V-B%1%Q*pa>d6KAniYo-AT#Wd3sTEp/P=A=:%TNfQ[@OV1[WjU/\-h`VVJn$"u-S;72*dKanI?EIV(>=E_M/?<j3srMh_3,Nau'!"hDV%D4jiFR6:C_=RZ\R#H?Ak=e3N[E.k>7d@?kW7U8u$9jrXZ7'Rr3i0QH)q:RR)Bukm;i9J)94I(:D[eV<C&:)bEHWWP/F]9UF87dq,%JR<!`.;F:Q:7MZD&e\7)5d$7"lGNlS:&.c`Hj_8uN\JVjKN/g+,277s=_jRh>%\8@bA_SfJl_JkJ`6C!br`to=ksK^fOi*e0R,6^%p?"_S-X9]V8f/_-W)=2g;Hg;kn2hacE%^K2+^-Sh"ZS2u*>u[mS#jXc"oDJtMWH1WmN''^Nc\4T-':;760-4EbDkUTXG/8n>f1a6%O6F`]aTKGg5rVaN9!sUp\tRnK#t]an.p"gg#'om$lSbeXD[V6]YQ-4(<t5d_VT%_"=3LXc]1V0N6:V%dgXD@,Ff"S%K?h13>FX?l%S*.`ZSO;H6N\$o'aar8a5CF.Wq>KtAY-1(%rr$c%F<seu*';Yj:"Om*oF,*h2E:N\"8Kb[OkS<a0q\++D$^At/h7'([mYsI>-Y`N%m.^Q^gDVQqaj+ta&o4[klY7&2M7g2&0[g^cFXO5$p8sRS04WO4#m,368TS@D0Z<KOPHu.Ar!i[M@(j9G,^)TRgLo+k^A7Qrro)]+%op9%"H2I<U%tB'+Gc,=a%'KQPbH!R/f5JEMphmkDl2Kpj]=`I_Vn70IIsJVPs6oi_bI\karc<S&H[*nMn%V*djneE0reHPq:\VnK%IJg:1j!40d=0K@7iu]oR"#4$h_>~>%AI9_PrivateDataEnd